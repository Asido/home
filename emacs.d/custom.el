(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ac-auto-show-menu 0.8)
 '(ac-auto-start 2)
 '(ac-candidate-limit 50)
 '(ac-comphist-file "/opt/elisp/auto-complete/ac-comphist.dat")
 '(ac-delay 0.1)
 '(ac-dictionary-directories (quote ("/opt/elisp/auto-complete/dict")))
 '(ac-dictionary-files (quote ("/opt/elisp/auto-complete/dict")))
 '(ac-dwim t)
 '(ac-expand-on-auto-complete t)
 '(ac-ignore-case nil)
 '(ac-menu-height 10)
 '(ac-modes (quote (emacs-lisp-mode lisp-mode lisp-interaction-mode c-mode cc-mode c++-mode perl-mode cperl-mode python-mode ruby-mode makefile-mode sh-mode lua-mode org-mode)))
 '(ac-show-menu-immediately-on-auto-complete t)
 '(ac-sources (quote (ac-source-abbrev ac-source-dictionary ac-source-filename ac-source-files-in-current-dir ac-source-gtags ac-source-imenu ac-source-semantic ac-source-words-in-same-mode-buffers ac-source-yasnippet)) t)
 '(ac-stop-flymake-on-completing t)
 '(ac-use-comphist t)
 '(ac-use-dictionary-as-stop-words t)
 '(ac-use-fuzzy t)
 '(auto-save-default t)
 '(auto-save-interval 300)
 '(auto-save-timeout 1800)
 '(buffers-menu-show-status t)
 '(column-number-mode t)
 '(company-auto-complete-chars (quote (32 95 40 41 119 46 34 36 39 60 47 124 33)))
 '(company-dabbrev-code-modes (quote (c++-mode c-mode cperl-mode css-mode emacs-lisp-mode haskell-mode java-mode javascript-mode jde-mode lisp-mode lua-mode perl-mode python-mode ruby-mode shell-script-mode)))
 '(company-minimum-prefix-length 2)
 '(completion-ignored-extensions nil)
 '(css-color-global-mode t)
 ; '(cua-mode t nil (cua-base))
 ; '(cua-normal-cursor-color "dark khaki")
 '(current-language-environment "UTF-8")
 '(delete-auto-save-files t)
 '(delete-by-moving-to-trash t)
 '(delete-selection-mode t)
 '(dframe-mouse-click-function nil t)
 '(dframe-mouse-position-function nil t)
 '(dframe-track-mouse-function nil t)
 '(display-time-24hr-format t)
 '(display-time-day-and-date nil)
 '(display-time-default-load-average nil)
 '(display-time-interval 60)
 '(display-time-load-average-threshold 1.0)
 '(display-time-mail-directory "/home/asido/mail")
 '(display-time-mail-face (quote default))
 '(display-time-mail-file "index")
 '(display-time-mail-string "âœ‰")
 '(display-time-use-mail-icon t)
 '(display-time-world-timer-enable nil)
 '(ecb-auto-expand-tag-tree-collapse-other (quote always))
 '(ecb-display-image-icons-for-semantic-tags t)
 '(ecb-font-lock-tags t)
 '(ecb-layout-window-sizes (quote (("left8" (ecb-directories-buffer-name 0.23711340206185566 . 0.2878787878787879) (ecb-sources-buffer-name 0.23711340206185566 . 0.24242424242424243) (ecb-methods-buffer-name 0.23711340206185566 . 0.2878787878787879) (ecb-history-buffer-name 0.23711340206185566 . 0.16666666666666666)))))
 '(ecb-method-non-semantic-face (quote ecb-default-highlight-face))
 '(ecb-mouse-click-destination (quote last-point))
 '(ecb-options-version "2.40")
 '(ecb-primary-secondary-mouse-buttons (quote mouse-1--mouse-2))
 '(ecb-show-source-file-extension t)
 '(ecb-source-face (quote ecb-default-highlight-face))
 '(ecb-tip-of-the-day nil)
 '(ecb-tree-buffer-style (quote image))
 '(ecb-tree-image-icons-directories (quote ("/home/asido/.emacs.d/ecb/ecb-images/default/height-17" (ecb-directories-buffer-name . "/home/asido/.emacs.d/ecb/ecb-images/directories/height-17") (ecb-sources-buffer-name . "/home/asido/.emacs.d/ecb/ecb-images/sources/height-14_to_21") (ecb-methods-buffer-name . "/home/asido/.emacs.d/ecb/ecb-images/methods/height-14_to_21"))))
 '(ecb-vc-enable-support t)
 '(ecb-version-check nil)
 '(erc-autoaway-idle-method (quote irc))
 '(erc-autoaway-mode t)
 '(erc-autojoin-channels-alist (quote (("gentoo-lt" "#gentoo-lt"))))
 '(erc-beep-match-types (quote (current-nick)))
 '(erc-common-server-suffixes (quote (("openprojects.net$" . "OPN") ("freenode.net$" . "freenode") ("oftc.net$" . "OFTC"))))
 '(erc-disable-ctcp-replies nil)
 '(erc-email-userid "mindaugas")
 '(erc-enable-logging t)
 '(erc-fill-column 80)
 '(erc-fill-function (quote erc-fill-variable))
 '(erc-header-line-face-method t)
 '(erc-header-line-format "%o")
 '(erc-kill-buffer-on-part t)
 '(erc-kill-queries-on-quit t)
 '(erc-kill-server-buffer-on-quit t)
 '(erc-log-channels-directory "/home/asido/.emacs.d/log")
 '(erc-mode-line-away-status-format "(AWAY since %H:%M) ")
 '(erc-mode-line-format "[%l][%m]%s:%n %a")
 '(erc-modules (quote (autoaway autojoin button completion irccontrols keep-place list log match menu move-to-prompt netsplit networks noncommands notify readonly ring scrolltobottom smiley stamp track)))
 '(erc-netsplit-debug t)
 '(erc-netsplit-show-server-mode-changes-flag t)
 '(erc-nick "arvi")
 '(erc-notify-list (quote ("zR00t")))
 '(erc-notify-signoff-hook (quote (erc-notify-signoff)))
 '(erc-notify-signon-hook (quote (erc-notify-signon)))
 '(erc-paranoid t)
 '(erc-password "" t)
 '(erc-pcomplete-mode t)
 '(erc-port 6667)
 '(erc-prompt "E>")
 '(erc-prompt-for-password nil)
 '(erc-public-away-p nil)
 '(erc-send-whitespace-lines nil)
 '(erc-server "irc.freenode.net")
 '(erc-user-full-name "")
 '(erc-verbose-server-ping nil)
 '(flyspell-default-dictionary "lt")
 '(focus-follows-mouse t)
 '(font-lock-keywords-case-fold-search nil t)
 '(fs-web-page-title-p t)
 '(generated-autoload-file "loaddefs.el" t)
 '(global-rainbow-delimiters-mode t)
 '(global-semantic-decoration-mode t)
 '(global-semantic-highlight-func-mode t)
 '(global-semantic-idle-breadcrumbs-mode t nil (semantic/idle))
 '(global-semantic-idle-completions-mode t nil (semantic/idle))
 '(global-semantic-idle-local-symbol-highlight-mode t nil (semantic/idle))
 '(global-semantic-idle-summary-mode t)
 '(global-semantic-mru-bookmark-mode t)
 '(global-semantic-show-parser-state-mode t)
 '(global-semantic-show-unmatched-syntax-mode t)
 '(global-semantic-stickyfunc-mode t)
 '(global-visual-line-mode nil)
 '(gnus-dired-mail-mode (quote gnus-user-agent))
 '(gnus-treat-mail-gravatar (quote head))
 '(imenu-tree-auto-update t)
 '(inhibit-startup-screen t)
 '(ioccur-highlight-match-p t)
 '(lua-always-show t)
 '(lua-comment-start "-- ")
 '(lua-default-application "lua")
 '(lua-jump-on-traceback t)
 '(lua-search-url-prefix "http://www.lua.org/manual/5.1/manual.html#pdf-")
 '(mail-host-address "gnubox.lt")
 '(menu-bar-mode nil)
 '(mime-update-field-decoder-cache (quote mime-update-field-decoder-cache) t)
 '(mime-w3m-display-inline-images t)
 '(mm-text-html-renderer (quote w3))
 '(mouse-wheel-progressive-speed nil)
 '(mouse-yank-at-point t)
 '(muse-blosxom-base-directory "/home/asido/Documents/webpage/pyblosxom/muse")
 '(muse-colors-inline-image-method (quote muse-colors-use-publishing-directory))
 '(muse-completing-read-function (quote ido-completing-read))
 '(muse-publish-comments-p t)
 '(muse-publish-date-format "%b. %e, %Y")
 '(org-agenda-files (quote ("/home/asido/.emacs.d/org/awesome.org" "/home/asido/.emacs.d/org/work.org" "/home/asido/.emacs.d/org/zshrc.org")))
 '(org-agenda-mouse-1-follows-link t)
 '(org-fontify-done-headline t)
 '(org-insert-mode-line-in-empty-file t)
 '(org-modules (quote (org-bbdb org-bibtex org-crypt org-ctags org-docview org-gnus org-id org-info org-jsinfo org-inlinetask org-irc org-mew org-mhe org-rmail org-vm org-wl org-w3m org-mouse org-annotate-file org-bookmark org-checklist org-choose org-collector org-depend org-eshell org-eval org-eval-light org-git-link org-interactive-query org-notmuch org-man org-mtags org-panel org-registry)))
 '(org-pretty-entities nil)
 '(org-src-fontify-natively t)
 '(org-startup-indented t)
 '(org-startup-with-inline-images t)
 '(pde-load-path "/home/asido/.emacs.d/vendor/pde/lisp/")
 '(rainbow-delimiters-highlight-braces-p t)
 '(rainbow-delimiters-highlight-brackets-p t)
 '(rainbow-delimiters-highlight-parens-p t)
 '(recentf-auto-cleanup "11:00pm")
 '(recentf-save-file "~/.emacs.d/.recentf.el")
 '(require-final-newline t)
 '(ruler-mode-show-tab-stops t)
 '(scroll-bar-mode nil)
 '(semantic-default-submodes (quote (global-semantic-highlight-func-mode global-semantic-decoration-mode global-semantic-stickyfunc-mode global-semantic-idle-completions-mode global-semantic-idle-scheduler-mode global-semanticdb-minor-mode global-semantic-idle-summary-mode global-semantic-mru-bookmark-mode)))
 '(show-paren-mode t)
 '(size-indication-mode t)
 '(speedbar-directory-unshown-regexp "")
 '(speedbar-file-unshown-regexp "")
 '(speedbar-update-flag t)
 '(speedbar-use-images t)
 '(ssl-certificate-verification-policy 0)
 '(text-mode-hook (quote (text-mode-hook-identify)))
 '(tool-bar-mode nil)
 '(track-mouse nil t)
 '(trash-directory "~/tmp")
 '(user-full-name "Mindaugas")
 '(user-mail-address "asido4@gmail.com")
 '(w3-default-homepage "http://google.lt/ ")
 '(w3-use-menus (quote (file edit view go bookmark options buffers style search emacs nil help)))
 '(w3-use-unicode-table-characters t)
 '(w3m-add-tab-number t)
 '(w3m-default-display-inline-images t t)
 '(w3m-form-use-fancy-faces t)
 '(w3m-resize-images t)
 '(w3m-show-error-information t)
 '(w3m-show-graphic-icons-in-header-line t)
 '(w3m-show-graphic-icons-in-mode-line t)
 '(w3m-use-cookies t)
 '(w3m-use-favicon t)
 '(w3m-use-header-line-title t)
 '(w3m-use-toolbar t)
 '(which-function-mode t)
 '(x-gtk-file-dialog-help-text nil)
 '(x-gtk-show-hidden-files t)
 '(yas/also-auto-indent-first-line t)
 '(yas/choose-keys-first nil)
 '(yas/choose-tables-first t)
 '(yas/global-mode t nil (yasnippet))
 '(yas/indent-line (quote auto))
 '(yas/initialize t)
 '(yas/next-field-key (quote ("TAB" "<tab>")))
 '(yas/prev-field-key (quote ("<backtab>" "<S-tab>")))
 '(yas/root-directory "~/.emacs.d/snippets" nil (yasnippet))
 '(yas/skip-and-clear-key "C-d")
 '(yas/trigger-key "TAB")
 '(yas/trigger-symbol " =>")
 '(yas/use-menu (quote abbreviate)))



(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :background "#151515" :foreground "#5C7D4F" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 83 :width normal :foundry "unknown" :family "DejaVu Sans Mono"))))
 '(ac-candidate-face ((t (:background "saddle brown" :foreground "black"))))
 '(ac-completion-face ((t (:foreground "dark orange" :underline t))))
 '(ac-gtags-candidate-face ((t (:background "lightgray" :foreground "navy"))))
 '(ac-gtags-selection-face ((t (:background "navy" :foreground "white"))))
 '(ac-menu-face ((t (:background "Grey10" :foreground "Grey40"))))
 '(ac-selection-face ((t (:background "Green4" :foreground "Green"))))
 '(ac-yasnippet-candidate-face ((t (:background "#283147" :foreground "#E0BC5F"))))
 '(ac-yasnippet-menu-face ((t (:background "Grey10" :foreground "Grey40"))))
 '(ac-yasnippet-selection-face ((t (:background "DarkRed" :foreground "Grey"))))
 '(col-highlight ((t (:background "Grey5"))))
 '(cursor ((t (:background "orange red"))))
 '(custom-button ((t (:background "#121414" :foreground "#7A8383" :box (:line-width 1 :color "#222222")))))
 '(custom-button-mouse ((t (:background "#09190D" :foreground "gray" :box (:line-width 1 :color "black" :style released-button)))))
 '(custom-button-pressed ((t (:background "#190909" :foreground "gray" :box (:line-width 1 :color "black" :style pressed-button)))))
 '(custom-button-unraised ((t (:foreground "steel blue"))))
 '(custom-comment ((((class grayscale color) (background dark)) (:background "grey5" :foreground "green"))))
 '(custom-group-tag ((t (:inherit variable-pitch :foreground "DodgerBlue" :underline t :weight bold :height 1.2))))
 '(custom-saved ((t (:foreground "SpringGreen4"))))
 '(custom-variable-tag ((t (:foreground "dark goldenrod" :weight bold))))
 '(diredp-dir-heading ((t (:background "#0E0F0F" :foreground "orange red"))))
 '(diredp-dir-priv ((t (:background "#0E0F0F" :foreground "DarkRed"))))
 '(ecb-analyse-bucket-element-face ((t (:foreground "dark salmon"))))
 '(ecb-analyse-bucket-node-face ((t (:inherit ecb-bucket-node-face :foreground "light green" :weight bold))))
 '(ecb-analyse-face ((t (:inherit ecb-default-highlight-face :background "dark magenta"))))
 '(ecb-analyse-general-face ((t (:inherit ecb-default-general-face :foreground "sky blue" :height 1.0))))
 '(ecb-bucket-node-face ((t (:inherit ecb-default-general-face :foreground "light pink" :weight bold))))
 '(ecb-default-general-face ((t (:foreground "dim gray" :height 1.0))))
 '(ecb-default-highlight-face ((t (:background "#121F17"))))
 '(ecb-directories-general-face ((t (:inherit ecb-default-general-face :foreground "#6B6F3C" :height 1.0))))
 '(ecb-directory-face ((t (:inherit ecb-default-highlight-face :background "#306923"))))
 '(emms-playlist-selected-face ((t (:foreground "SteelBlue3"))))
 '(emms-playlist-track-face ((t (:foreground "DarkSeaGreen"))))
 '(erc-action-face ((t (:foreground "chocolate" :weight bold))))
 '(erc-default-face ((t (:foreground "#71834B"))))
 '(erc-header-line ((t (:background "#151515" :foreground "steel blue"))))
 '(erc-notice-face ((t (:foreground "#5A5A5A"))))
 '(erc-prompt-face ((t (:background "black" :foreground "olive drab" :weight bold))))
 '(erc-timestamp-face ((t (:foreground "#295A86" :weight ultra-light))))
 '(font-lock-builtin-face ((t (:foreground "RosyBrown4"))))
 '(font-lock-comment-delimiter-face ((t (:inherit font-lock-comment-face :foreground "gray25"))))
 '(font-lock-comment-face ((((class color) (min-colors 88) (background dark)) (:foreground "#909090"))))
 '(font-lock-constant-face ((((class color) (min-colors 88) (background dark)) (:foreground "magenta4"))))
 '(font-lock-doc-face ((t (:inherit font-lock-string-face :foreground "khaki4"))))
 '(font-lock-fic-face ((t (:stipple nil :foreground "Red" :inverse-video nil :underline t :slant normal :weight bold))) t)
 '(font-lock-function-name-face ((t (:inherit bold :foreground "gold3"))))
 '(font-lock-keyword-face ((t (:foreground "royal blue" :weight bold))))
 '(font-lock-negation-char-face ((t (:foreground "orange red"))))
 '(font-lock-preprocessor-face ((t (:inherit font-lock-builtin-face :foreground "Cyan3" :weight bold))))
 '(font-lock-regexp-grouping-backslash ((t (:inherit bold :foreground "sandy brown"))))
 '(font-lock-regexp-grouping-construct ((t (:inherit bold :foreground "dark cyan"))))
 '(font-lock-string-face ((((class color) (min-colors 88) (background dark)) (:foreground "DarkKhaki"))))
 '(font-lock-type-face ((((class color) (min-colors 88) (background dark)) (:foreground "DeepSkyBlue2"))))
 '(font-lock-variable-name-face ((t (:foreground "#764A9A"))))
 '(font-lock-warning-face ((((class color) (min-colors 88) (background dark)) (:foreground "red" :weight bold))))
 '(fringe ((t (:background "#101010" :foreground "#4252B5"))))
 '(header-line ((t (:inherit mode-line :background "grey20" :foreground "DarkOrange3" :box nil))))
 '(hideshowvis-hidable-face ((t (:foreground "OrangeRed4" :box nil))))
 '(highlight ((t (:foreground "dodger blue"))))
 '(highlight-changes ((t (:background "#0F1111"))))
 '(highlight-changes-delete ((t (:foreground "#6D131B" :underline t))))
 '(highlight-cl ((t (:foreground "#20ABFC" :underline nil))))
 '(highlight-cl-and-other ((t (:foreground "#20ABFC" :underline nil))))
 '(highlight-cl-macro ((t (:underline nil))))
 '(highlight-symbol-face ((((class color) (background dark)) (:background "grey" :foreground "white"))))
 '(highline-face ((t (:background "black"))))
 '(hl-line ((t (:background "grey5"))))
 '(hl-sexp-face ((((class color) (background dark)) (:background "gray2"))))
 '(hs-face ((t (:background "#0E0F0F" :foreground "dark slate blue" :box nil))))
 '(hs-fringe-face ((t (:foreground "OrangeRed4"))))
 '(icicle-current-candidate-highlight ((t (:background "dark slate gray"))))
 '(icicle-multi-command-completion ((t (:foreground "dark olive green"))))
 '(icicle-mustmatch-completion ((t (:box (:line-width -2 :color "dark blue")))))
 '(ido-first-match ((t (:foreground "forest green"))))
 '(ioccur-match-face ((t (:foreground "chartreuse3"))))
 '(ioccur-match-overlay-face ((t (:background "#081424"))))
 '(ioccur-overlay-face ((t (:background "#081424"))))
 '(ioccur-regexp-face ((t (:foreground "dodger blue"))))
 '(ioccur-title-face ((t (:foreground "#757575"))))
 '(isearch ((t (:foreground "orange red"))))
 '(isearch-fail ((t (:foreground "red"))))
 '(lazy-highlight ((t (:background "saddle brown"))))
 '(link ((t (:foreground "dark turquoise"))))
 '(linum ((t (:background "black" :foreground "dark goldenrod"))))
 '(lua2-assign-global-variable ((t (:foreground "#A45EA4"))))
 '(lua2-assign-variable ((t (:inherit underline :foreground "violet red"))))
 '(lua2-bind-variable ((t (:inherit bold :foreground "#5CA4A3"))))
 '(lua2-reference-global-variable ((t (:inherit bold :foreground "#557953"))))
 '(lua2-reference-variable ((t (:inherit bold :foreground "#45A45A"))))
 '(match ((((class color) (min-colors 88) (background dark)) (:background "Black" :foreground "Grey70" :weight extra-bold))))
 '(mode-line ((t (:background "#151515" :foreground "DeepSkyBlue4" :box (:line-width 1 :color "#23293D") :height 0.8 :family "terminus"))))
 '(mode-line-buffer-id ((t (:foreground "#6A7A4A"))))
 '(mode-line-emphasis ((t (:background "red" :weight bold))))
 '(mode-line-highlight ((t (:background "#0E0F0F" :box (:line-width 1 :color "#2A4259")))))
 '(mode-line-inactive ((t (:background "#101010" :foreground "#2A4259" :box (:line-width 1 :color "#121821") :height 0.9))))
 '(modelinepos-column-warning ((t (:foreground "Yellow"))))
 '(mouse ((t (:background "orange"))))
 '(mumamo-background-chunk-major ((t (:background "#131515"))))
 '(mumamo-background-chunk-submode1 ((t (:background "#181815"))))
 '(mumamo-background-chunk-submode2 ((t (:background "#151815"))))
 '(mumamo-background-chunk-submode3 ((t (:background "#151618"))))
 '(mumamo-background-chunk-submode4 ((t (:background "#181518"))))
 '(muse-bad-link ((t (:foreground "DeepPink" :underline "DeepPink" :weight bold))))
 '(muse-emphasis-1 ((t (:foreground "dark goldenrod" :slant italic))))
 '(muse-emphasis-2 ((t (:foreground "dark goldenrod" :weight bold))))
 '(muse-emphasis-3 ((t (:foreground "dark goldenrod" :slant italic :weight bold))))
 '(muse-header-1 ((t (:background "dark goldenrod" :weight bold :height 1.4 :family "Sans Serif"))))
 '(muse-header-2 ((t (:foreground "dark goldenrod" :weight bold :height 1.3 :family "Sans Serif"))))
 '(muse-header-3 ((t (:background "dark goldenrod" :weight bold :height 1.2 :family "Sans Serif"))))
 '(muse-header-4 ((t (:background "dark goldenrod" :weight bold :height 1.1 :family "Sans Serif"))))
 '(muse-header-5 ((t (:background "dark goldenrod" :weight bold :height 1.0 :family "Sans Serif"))))
 '(newsticker-date-face ((t (:foreground "red" :slant italic :height 0.8))))
 '(newsticker-default-face ((t (:inherit default))))
 '(newsticker-enclosure-face ((t (:background "orange" :weight bold))))
 '(newsticker-extra-face ((t (:foreground "dark khaki" :slant italic :height 0.9))))
 '(newsticker-feed-face ((t (:foreground "Green" :weight bold :height 1.2))))
 '(newsticker-immortal-item-face ((t (:foreground "green" :slant italic :weight bold))))
 '(newsticker-new-item-face ((t (:foreground "Gold" :weight bold))))
 '(newsticker-obsolete-item-face ((t (:strike-through t :weight bold))))
 '(newsticker-old-item-face ((t (:foreground "purple" :weight bold))))
 '(newsticker-statistics-face ((t (:foreground "red" :slant italic :height 0.8))))
 '(newsticker-treeview-face ((t (:foreground "Green4" :weight normal))))
 '(newsticker-treeview-new-face ((t (:inherit newsticker-treeview-face :foreground "forest green" :weight bold))))
 '(newsticker-treeview-old-face ((t (:inherit newsticker-treeview-face :foreground "olive drab"))))
 '(newsticker-treeview-selection-face ((t (:background "gray12" :foreground "dark goldenrod"))))
 '(org-agenda-done ((t (:foreground "#4C8C44"))))
 '(org-agenda-structure ((t (:foreground "#5591B3"))))
 '(org-date ((t (:foreground "#186955" :underline t))))
 '(org-document-info ((t (:foreground "medium slate blue"))))
 '(org-document-title ((t (:foreground "chocolate" :weight bold :height 1.5 :family "cmr10"))))
 '(org-drawer ((t (:foreground "cadet blue"))))
 '(org-footnote ((t (:foreground "#806628" :height 0.8))))
 '(org-indent ((t (:background "#0D0D0D"))) t)
 '(org-meta-line ((t (:foreground "#525252"))))
 '(outline-2 ((t (:foreground "brown"))))
 '(outline-6 ((t (:foreground "saddle brown"))))
 '(popup-face ((t (:background "yellow" :foreground "black"))))
 '(popup-menu-face ((t (:background "cyan" :foreground "black"))))
 '(popup-tip-face ((t (:background "dark goldenrod" :foreground "black"))))
 '(rainbow-delimiters-depth-1-face ((t (:inherit bold :foreground "#7911B1"))))
 '(rainbow-delimiters-depth-2-face ((t (:inherit bold :foreground "#6C61A3"))))
 '(rainbow-delimiters-depth-3-face ((t (:inherit bold :foreground "#5A34AB"))))
 '(region ((t (:background "#10143E"))))
 '(semantic-decoration-on-private-members-face ((t (:background "saddle brown"))))
 '(semantic-decoration-on-protected-members-face ((t (:background "purple4"))))
 '(semantic-highlight-edits-face ((t (:background "medium violet red"))))
 '(semantic-highlight-func-current-tag-face ((t (:background "#121A13"))))
 '(semantic-tag-boundary-face ((t (:overline "#133E49"))))
 '(semantic-unmatched-syntax-face ((t (:underline "#491213"))))
 '(senator-intangible-face ((t (:foreground "white smoke"))))
 '(senator-momentary-highlight-face ((t (:background "medium blue"))))
 '(senator-read-only-face ((t (:background "coral"))))
 '(sh-heredoc ((t (:foreground "yellow1" :weight bold))))
 '(sh-quoted-exec ((t (:foreground "salmon"))))
 '(show-paren-match ((t (:foreground "dark orange"))))
 '(speedbar-directory-face ((t (:foreground "#3264A3"))))
 '(speedbar-file-face ((t (:foreground "#9D68B5" :height 0.7 :family "sans"))))
 '(speedbar-highlight-face ((t (:background "gray19" :foreground "orange"))))
 '(speedbar-separator-face ((t (:background "#1A1A1A" :foreground "orange" :overline "gray" :height 0.7 :family "sans"))))
 '(sr-active-path-face ((t (:foreground "yellow"))))
 '(sr-editing-path-face ((t (:foreground "yellow"))))
 '(sr-highlight-path-face ((t (:foreground "#ace6ac"))))
 '(sr-passive-path-face ((t (:foreground "lightgray"))))
 '(tabbar-button ((t (:background "gray10" :foreground "olive drab" :box (:line-width -1 :color "#0A0B15")))))
 '(tabbar-button-highlight ((t (:background "#2C3014"))))
 '(tabbar-default ((t (:background "medium violet red" :foreground "saddle brown"))))
 '(tabbar-highlight ((t (:background "gray8"))))
 '(tabbar-selected ((t (:background "#151515" :foreground "olive drab" :box (:line-width 1 :color "#0A0B15" :style pressed-button) :height 0.8 :family "sans"))))
 '(tabbar-separator ((t (:background "#0A0B15" :height 0.1))))
 '(tabbar-unselected ((t (:background "#151515" :foreground "dark cyan" :box (:line-width 1 :color "#2C3014") :height 0.8 :family "sans"))))
 '(template-message-face ((t (:foreground "cadet blue" :weight bold))))
 '(tooltip ((t (:background "black" :foreground "sienna"))))
 '(w3m-anchor ((t (:foreground "cyan"))))
 '(w3m-arrived-anchor ((t (:foreground "LightSkyBlue"))))
 '(w3m-bold ((t (:weight bold))))
 '(w3m-current-anchor ((t (:underline t :weight bold))))
 '(w3m-form ((t (:foreground "red" :underline t))))
 '(w3m-form-button ((t (:background "lightgrey" :foreground "black" :box (:line-width 2 :style released-button)))))
 '(w3m-form-button-mouse ((t (:background "DarkSeaGreen1" :foreground "black" :box (:line-width 2 :style released-button)))))
 '(w3m-form-button-pressed ((t (:background "lightgrey" :foreground "black" :box (:line-width 2 :style pressed-button)))))
 '(w3m-header-line-location-content ((t (:background "Gray20" :foreground "LightGoldenrod"))))
 '(w3m-header-line-location-title ((t (:background "Gray20" :foreground "Cyan"))))
 '(w3m-history-current-url ((t (:background "SkyBlue4" :foreground "LightSkyBlue"))))
 '(w3m-image ((t (:foreground "PaleGreen"))))
 '(w3m-image-anchor ((t (:background "dark green"))))
 '(w3m-insert ((t (:foreground "orchid"))))
 '(w3m-italic ((t (:slant italic))))
 '(w3m-session-select ((t (:foreground "white"))))
 '(w3m-session-selected ((t (:foreground "white" :underline t :weight bold))))
 '(w3m-strike-through ((t (:strike-through t))))
 '(w3m-tab-background ((t (:background "#1A1A1A"))))
 '(w3m-tab-mouse ((t nil)))
 '(w3m-tab-selected ((t (:background "#151515" :foreground "olive drab" :box (:line-width 1 :color "#0A0B15" :style pressed-button) :height 0.8 :family "sans"))))
 '(w3m-tab-selected-background ((t (:background "LightSteelBlue" :foreground "black"))))
 '(w3m-tab-selected-retrieving ((t (:background "Gray90" :foreground "red" :box (:line-width -1 :style released-button)))))
 '(w3m-tab-unselected ((t (:background "#151515" :foreground "dark cyan" :box (:line-width 1 :color "#2C3014" :style released-button) :height 0.8 :family "sans"))))
 '(w3m-tab-unselected-retrieving ((t (:background "Gray70" :foreground "OrangeRed" :box (:line-width -1 :style released-button)))))
 '(w3m-tab-unselected-unseen ((t (:background "Gray70" :foreground "Gray20" :box (:line-width -1 :style released-button)))))
 '(w3m-underline ((t (:underline t))))
 '(which-func ((t (:foreground "dark goldenrod"))))
 '(whitespace-empty ((t (:background "#120D15" :foreground "firebrick"))))
 '(whitespace-hspace ((t (:foreground "magenta"))))
 '(whitespace-indentation ((t (:foreground "#44136D"))))
 '(whitespace-line ((t nil)))
 '(whitespace-newline ((t (:foreground "gray14"))))
 '(whitespace-space ((t (:foreground "#13286D"))))
 '(whitespace-space-after-tab ((t (:foreground "yellow"))))
 '(whitespace-space-before-tab ((t (:background "black" :foreground "chartreuse"))))
 '(whitespace-tab ((t (:foreground "#112211"))))
 '(whitespace-trailing ((t (:background "#290B0B" :foreground "black"))))
 '(widget-field ((t (:background "black" :foreground "light slate blue" :box (:line-width 1 :color "gray14")))))
 '(woman-addition ((t (:foreground "medium slate blue"))))
 '(woman-bold ((t (:inherit bold :foreground "orange4"))))
 '(woman-italic ((t (:foreground "tomato3" :slant italic))))
 '(woman-unknown ((t (:background "gray4" :foreground "dark cyan"))))
 '(yas/field-highlight-face ((t (:background "grey20" :foreground "gold"))))
 '(yas/mirror-highlight-face ((t (:background "brown" :foreground "white")))))
