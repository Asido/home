
org-magit-0.1.2/org-magit.el,1243
(defvar org-magit-actionsorg-magit-actions63,2238
(defgroup org-magit nilorg-magit68,2377
(defcustom org-magit-public-remote "origin"org-magit-public-remote73,2467
(defcustom org-magit-config-prefix "org-magit"org-magit-config-prefix78,2597
(defcustom org-magit-known-public-providersorg-magit-known-public-providers83,2740
(defcustom org-magit-filename-transformerorg-magit-filename-transformer104,3700
(defun org-magit-split-string (str)org-magit-split-string112,3962
(defun org-magit-open-log ()org-magit-open-log127,4470
(defun org-magit-open-commit (commit)org-magit-open-commit133,4607
(defun org-magit-open (str)org-magit-open140,4796
(defun org-magit-get (repo &rest keys)org-magit-get152,5161
(defun org-magit-guess-public-url (view url)org-magit-guess-public-url156,5265
(defun org-magit-generate-public-url (path)org-magit-generate-public-url165,5592
(defun org-magit-export (path desc format)org-magit-export179,6187
(defun org-magit-make-link (repo &rest components)org-magit-make-link188,6575
(defun org-magit-clean-repository (repo)org-magit-clean-repository191,6678
(defmacro org-magit-check-mode (mode)org-magit-check-mode201,7114
(defun org-magit-store-link ()org-magit-store-link206,7236

org-magit-0.1.2/org-magit-pkg.el,121
(define-package "org-magit" "0.1.2" "basic support for magit links" (quote ((magit "0.8") (org "6.1"))))"org-magit"1,0

org-magit-0.1.2/org-magit-autoloads.el,0

ecb_snap-20110605/ecb-analyse.el,3793
(defgroup ecb-analyse nilecb-analyse47,1383
(defcustom ecb-analyse-buffer-name " *ECB Analyse*"ecb-analyse-buffer-name53,1506
(defcustom ecb-analyse-buffer-after-create-hook nilecb-analyse-buffer-after-create-hook66,2004
(defcustom ecb-analyse-show-node-info '(if-too-long . name)ecb-analyse-show-node-info75,2437
(defcustom ecb-analyse-collapsed-buckets nilecb-analyse-collapsed-buckets99,3492
(defcustom ecb-analyse-fontified-buckets '("Context" "Function")ecb-analyse-fontified-buckets144,5736
(defcustom ecb-analyse-gen-tag-info-fn nilecb-analyse-gen-tag-info-fn172,7297
(defcustom ecb-analyse-show-tag-info-fn 'messageecb-analyse-show-tag-info-fn185,7973
(defcustom ecb-analyse-buffer-sync 'basicecb-analyse-buffer-sync204,8944
(defcustom ecb-analyse-buffer-sync-delay 2ecb-analyse-buffer-sync-delay228,10012
(defcustom ecb-analyse-buffer-sync-hook nilecb-analyse-buffer-sync-hook252,11220
(defconst ecb-analyse-nodedata-tag-with-pos 0)ecb-analyse-nodedata-tag-with-pos280,12468
(defconst ecb-analyse-nodedata-tag-without-pos 1)ecb-analyse-nodedata-tag-without-pos281,12515
(defconst ecb-analyse-nodedata-no-tag 2)ecb-analyse-nodedata-no-tag282,12565
(defconst ecb-analyse-nodetype-bucket 0)ecb-analyse-nodetype-bucket284,12607
(defconst ecb-analyse-nodetype-context 1)ecb-analyse-nodetype-context285,12648
(defconst ecb-analyse-nodetype-arguments 2)ecb-analyse-nodetype-arguments286,12690
(defconst ecb-analyse-nodetype-completions 3)ecb-analyse-nodetype-completions287,12734
(defconst ecb-analyse-nodetype-localvars 4)ecb-analyse-nodetype-localvars288,12780
(defconst ecb-analyse-nodetype-prefix 5)ecb-analyse-nodetype-prefix289,12824
(defconst ecb-analyse-nodetype-assignee 6)ecb-analyse-nodetype-assignee290,12865
(defconst ecb-analyse-nodetype-function 7)ecb-analyse-nodetype-function291,12908
(defconst ecb-analyse-nodetype-function-arg 8)ecb-analyse-nodetype-function-arg292,12951
(defecb-autocontrol/sync-function ecb-analyse-buffer-syncecb-analyse-buffer-sync294,12999
(defun ecb-analyse-show-scope (scope)ecb-analyse-show-scope346,15173
(defmethod ecb-analyse-more-nodes ((context semantic-analyze-context))ecb-analyse-more-nodes354,15462
(defmethod ecb-analyse-more-nodes ((context semantic-analyze-context-assignment))ecb-analyse-more-nodes360,15726
(defmethod ecb-analyse-more-nodes ((context semantic-analyze-context-functionarg))ecb-analyse-more-nodes368,16065
(defun ecb-analyse-add-nodes (bucket bucket-name list nodetype)ecb-analyse-add-nodes388,17055
(defun ecb-analyse-compare-node-data (left right)ecb-analyse-compare-node-data433,19621
(defecb-tree-buffer-callback ecb-analyse-node-clicked ecb-analyse-buffer-name select nilecb-analyse-node-clicked485,22082
(defecb-window-dedicator-to-ecb-buffer ecb-set-analyse-buffer ecb-analyse-buffer-name tecb-set-analyse-buffer512,23340
(defun ecb-maximize-window-analyse ()ecb-maximize-window-analyse518,23689
(defun ecb-goto-window-analyse ()ecb-goto-window-analyse526,24032
(defun ecb-analyse-show-tag-info-in-temp-buffer (info-string)ecb-analyse-show-tag-info-in-temp-buffer531,24184
(defun ecb-analyse-gen-tag-info (tag)ecb-analyse-gen-tag-info543,24671
(defun ecb-mouse-over-analyse-node (node &optional window no-message click-force)ecb-mouse-over-analyse-node587,26644
(defun ecb-analyse-node-mouse-highlighted-p (node)ecb-analyse-node-mouse-highlighted-p604,27544
(defun ecb-analyse-create-menu (node)ecb-analyse-create-menu614,27999
(defun ecb-analyse-menu-creator (tree-buffer-name node)ecb-analyse-menu-creator629,28792
(defun ecb-analyse-gen-menu-title-creator ()ecb-analyse-gen-menu-title-creator646,29557
(defecb-tree-buffer-creator ecb-create-analyse-tree-buffer ecb-analyse-buffer-nameecb-create-analyse-tree-buffer663,30236

ecb_snap-20110605/ecb-cycle.el,267
(defgroup ecb-cycle nilecb-cycle69,2262
(defun ecb-cycle-through-compilation-buffers(&optional choose-buffer)ecb-cycle-through-compilation-buffers75,2376
(defun ecb-cycle-set-compilation-buffer(index compilation-buffers)ecb-cycle-set-compilation-buffer128,4832

ecb_snap-20110605/ecb-util.el,10458
(defconst ecb-running-xemacs (featurep 'xemacs))ecb-running-xemacs100,3210
(defconst ecb-running-gnu-emacs (not ecb-running-xemacs))ecb-running-gnu-emacs102,3260
(defconst ecb-running-unsupported-emacs (condition-case nilecb-running-unsupported-emacs104,3319
(defconst ecb-running-gnu-emacs-version-22 (and ecb-running-gnu-emacsecb-running-gnu-emacs-version-22109,3552
(defconst ecb-running-gnu-emacs-version-23 (and ecb-running-gnu-emacsecb-running-gnu-emacs-version-23113,3745
(defconst ecb-temp-direcb-temp-dir117,3938
(defconst ecb-ecb-direcb-ecb-dir123,4160
(defconst ecb-semantic-direcb-semantic-dir125,4249
(defconst ecb-ecb-parent-dir (expand-file-name (concat ecb-ecb-dir "../")))ecb-ecb-parent-dir129,4388
(defconst ecb-regular-xemacs-package-pecb-regular-xemacs-package-p134,4644
(defvar ecb-images-can-be-used nilecb-images-can-be-used143,5033
(defvar ecb-images-can-be-used-init-p nilecb-images-can-be-used-init-p145,5107
(defun ecb-images-can-be-used ()ecb-images-can-be-used148,5189
(defmacro when-ecb-running-xemacs (&rest body)when-ecb-running-xemacs169,5824
(defmacro when-ecb-running-emacs (&rest body)when-ecb-running-emacs176,6079
(defmacro when-ecb-running-emacs-22 (&rest body)when-ecb-running-emacs-22183,6344
(defmacro when-ecb-running-emacs-23 (&rest body)when-ecb-running-emacs-23190,6645
(defun ecb-custom-file ()ecb-custom-file371,14061
(defun ecb-option-get-value (option &optional type)ecb-option-get-value381,14446
(defun ecb-remove-assoc (key list)ecb-remove-assoc401,15403
(defun ecb-add-assoc (key-value list)ecb-add-assoc410,15658
(defun ecb-find-assoc-value (key list)ecb-find-assoc-value413,15722
(defun ecb-find-assoc (key list)ecb-find-assoc416,15788
(defun ecb-filter (seq pred)ecb-filter421,15904
(defun ecb-some (cl-pred cl-seq &rest cl-rest)ecb-some429,16150
(defun ecb-copy-list (list)ecb-copy-list443,16672
(defun ecb-set-difference (list1 list2 &optional test-fcn)ecb-set-difference454,17060
(defun ecb-member (item list &optional test-fcn)ecb-member472,17809
(defun ecb-position (seq elem &optional test-fcn)ecb-position488,18412
(defun ecb-set-elt (seq n val)ecb-set-elt503,18974
(defun ecb-remove-elt (seq n)ecb-remove-elt511,19228
(defun ecb-replace-first-occurence (seq old-elem new-elem)ecb-replace-first-occurence516,19472
(defun ecb-replace-all-occurences (seq old-elem new-elem)ecb-replace-all-occurences524,19780
(defun ecb-remove-first-occurence-from-list (list elem)ecb-remove-first-occurence-from-list531,20091
(defun ecb-remove-all-occurences-from-list (list elem)ecb-remove-all-occurences-from-list537,20381
(defun ecb-subseq (seq start &optional end)ecb-subseq547,20821
(defun ecb-concatenate (type &rest seqs)ecb-concatenate571,21904
(defun ecb-rotate (seq start-elem)ecb-rotate580,22252
(defun ecb-last (seq)ecb-last593,22846
(defun ecb-first (seq)ecb-first601,23033
(defun ecb-next-listelem (list elem &optional nth-next)ecb-next-listelem610,23202
(defun ecb-aggregate-alist (alist same-predicate sort-predicate)ecb-aggregate-alist629,24084
(defun ecb-values-of-symbol/value-list (list &optional elem-accessor)ecb-values-of-symbol/value-list687,25893
(defun ecb-member-of-symbol/value-list (value list &optional elem-accessorecb-member-of-symbol/value-list704,26630
(defsubst ecb-match-regexp-list (str regexp-list &optional elem-accessorecb-match-regexp-list746,28592
(defsubst ecb-multicache-init (cache-var)ecb-multicache-init766,29511
(defun ecb-multicache-add-empty-key (cache-var key)ecb-multicache-add-empty-key773,29902
(defun ecb-multicache-get-subcache (cache-var key subcache)ecb-multicache-get-subcache789,30726
(defmacro defecb-multicache (name size test subcache docstring)defecb-multicache801,31221
(defun ecb-multicache-p (cache-var)ecb-multicache-p853,33194
(defun ecb-multicache-get-value (cache-var key subcache)ecb-multicache-get-value859,33411
(defun ecb-multicache-get-values (cache-var key &optional subcache-list)ecb-multicache-get-values874,34144
(defun ecb-multicache-apply-to-value (cache-var key subcache apply-fcnecb-multicache-apply-to-value895,35048
(defun ecb-multicache-put-value (cache-var key subcache value)ecb-multicache-put-value929,37038
(defun ecb-multicache-clear-value (cache-var key subcache)ecb-multicache-clear-value944,37719
(defun ecb-multicache-remove (cache-var key)ecb-multicache-remove951,38089
(defun ecb-multicache-mapsubcache (cache-var subcache mapfcn)ecb-multicache-mapsubcache958,38376
(defun ecb-multicache-clear-subcache (cache-var subcache)ecb-multicache-clear-subcache976,39332
(defun ecb-multicache-clear (cache-var)ecb-multicache-clear984,39739
(defun ecb-multicache-print-subcache (cache-var subcache &optional no-nil-value)ecb-multicache-print-subcache991,40013
(defun ecb-confirm (text)ecb-confirm1054,43000
(defun ecb-query-string (prompt choices &optional other-prompt)ecb-query-string1059,43164
(defun ecb-offer-choices (prompt choices)ecb-offer-choices1091,44759
(defun ecb-read-number (prompt &optional init-value)ecb-read-number1157,47790
(defun ecb-message-box (message-str &optional title-text button-text)ecb-message-box1176,48638
(defun ecb-nolog-message (&rest args)ecb-nolog-message1304,54470
(defun ecb-error (&rest args)ecb-error1327,55246
(defun ecb-warning (&rest args)ecb-warning1335,55593
(defun ecb-info-message (&rest args)ecb-info-message1339,55727
(defun ecb-merge-face (face start end &optional text)ecb-merge-face1345,55930
(defun ecb-merge-face-into-text (text face)ecb-merge-face-into-text1398,58524
(defsubst ecb-string= (str1 str2 &optional ignore-case)ecb-string=1449,60549
(defsubst ecb-string< (str1 str2 &optional ignore-case)ecb-string<1454,60802
(defun ecb-excessive-trim (str)ecb-excessive-trim1461,61123
(defun ecb-left-trim (str)ecb-left-trim1476,61753
(defun ecb-right-trim (str)ecb-right-trim1484,62045
(defun ecb-trim (str)ecb-trim1488,62187
(defun ecb-full-trim (str)ecb-full-trim1492,62307
(defun ecb-fit-str-to-width (str width from)ecb-fit-str-to-width1496,62427
(defun ecb-normalize-number (value &optional ref-value)ecb-normalize-number1514,63253
(defvar ecb-working-message nilecb-working-message1533,63931
(defvar ecb-working-donestring nilecb-working-donestring1535,64006
(defvar ecb-working-ref1 nilecb-working-ref11537,64088
(defvar ecb-working-last-percent 0ecb-working-last-percent1539,64164
(defun ecb-working-frame-animation-display (length number frames)ecb-working-frame-animation-display1542,64247
(defvar ecb-working-celeron-stringsecb-working-celeron-strings1568,65503
(defun ecb-working-celeron-display (length number)ecb-working-celeron-display1574,65751
(defun ecb-working-dynamic-status (&optional number)ecb-working-dynamic-status1589,66313
(defmacro ecb-working-status-timeout (timeout message donestr &rest forms)ecb-working-status-timeout1598,66759
(defun ecb-working-status-call-processecb-working-status-call-process1620,67756
(defsubst ecb-current-line ()ecb-current-line1646,68991
(defun ecb-goto-line (line)ecb-goto-line1650,69163
(defmacro ecb-with-readonly-buffer (buffer &rest body)ecb-with-readonly-buffer1662,69519
(defmacro ecb-do-if-buffer-visible-in-ecb-frame (buffer-name-symbol &rest body)ecb-do-if-buffer-visible-in-ecb-frame1678,70193
(defun ecb-buffer-substring (minpoint maxpoint &optional buffer)ecb-buffer-substring1707,71640
(defun ecb-delete-file (file)ecb-delete-file1714,71954
(defun ecb-buffer-name (buffer-or-window)ecb-buffer-name1720,72127
(defun ecb-buffer-obj (buffer-or-window)ecb-buffer-obj1731,72551
(defun ecb-buffer-local-value (sym buffer)ecb-buffer-local-value1741,72949
(defun ecb-file-content-as-string (file)ecb-file-content-as-string1754,73439
(defun ecb-current-buffer-archive-extract-p ()ecb-current-buffer-archive-extract-p1766,73958
(defun ecb-buffer-file-name (&optional buffer no-indirect-buffers)ecb-buffer-file-name1775,74362
(defun ecb-buffer-or-file-readable-p (&optional filename)ecb-buffer-or-file-readable-p1789,74937
(defun ecb-window-list (&optional frame minibuf window)ecb-window-list1811,76106
(defun ecb-canonical-windows-list ()ecb-canonical-windows-list1868,79074
(defun ecb-enlarge-window (window &optional val)ecb-enlarge-window1874,79352
(defun ecb-window-safely-shrinkable-p (&optional window)ecb-window-safely-shrinkable-p1891,80161
(defun ecb-fit-window-to-buffer (&optional window max-height min-height)ecb-fit-window-to-buffer1899,80598
(defun ecb-test-fit-window-to-buffer ()ecb-test-fit-window-to-buffer1997,84572
(defun ecb-scroll-window (point window-start)ecb-scroll-window2005,84808
(defun ecb-window-select (buffer-or-name)ecb-window-select2011,85053
(defmacro ecb-exec-in-window (buffer-or-name &rest body)ecb-exec-in-window2035,86096
(defun ecb-make-windows-not-dedicated (&optional frame)ecb-make-windows-not-dedicated2049,86722
(defun ecb-set-windows-dedicated-state (buf-list state)ecb-set-windows-dedicated-state2055,86963
(defun ecb-window-in-window-list-number (win-list &optional window)ecb-window-in-window-list-number2065,87344
(defun ecb-time-to-seconds (time)ecb-time-to-seconds2077,87901
(defun ecb-seconds-to-time (seconds)ecb-seconds-to-time2083,88067
(defun ecb-subtract-time (t1 t2)ecb-subtract-time2089,88290
(defun ecb-time-diff (t1 t2 &optional rounded)ecb-time-diff2095,88540
(defun ecb-time-less-p (t1 t2)ecb-time-less-p2109,89000
(defalias 'ecb-make-ring 'make-ring)ecb-make-ring2118,89250
(defalias 'ecb-ring-p 'ring-p)ecb-ring-p2119,89287
(defalias 'ecb-ring-empty-p 'ring-empty-p)ecb-ring-empty-p2120,89318
(defalias 'ecb-ring-insert 'ring-insert)ecb-ring-insert2121,89361
(defalias 'ecb-ring-ref 'ring-ref)ecb-ring-ref2122,89402
(defun ecb-ring-elements (ring)ecb-ring-elements2124,89485
(defvar ecb-max-submenu-depth 4ecb-max-submenu-depth2130,89657
(defun ecb-create-menu-user-ext-type (curr-level max-level)ecb-create-menu-user-ext-type2133,89755
(defun ecb-is-byte-compiling ()ecb-is-byte-compiling2154,90970
(defun ecb-load-in-progress-p ()ecb-load-in-progress-p2160,91175
(defvar ecb-current-input-throw-symbol nilecb-current-input-throw-symbol2167,91324
(defmacro ecb-exit-on-input (symbol &rest forms)ecb-exit-on-input2170,91423
(defmacro ecb-throw-on-input (from &optional value)ecb-throw-on-input2181,91907
(defun ecb-test-throw-on-input ()ecb-test-throw-on-input2196,92633

ecb_snap-20110605/ecb.el,3352
(defvar ecb-major-mode-selected-source nilecb-major-mode-selected-source227,7992
(defvar ecb-item-in-tree-buffer-selected nilecb-item-in-tree-buffer-selected230,8082
(defun ecb-initialize-all-internals (&optional no-caches)ecb-initialize-all-internals234,8211
(defvar ecb-minor-mode nilecb-minor-mode242,8530
(defvar ecb-activated-window-configuration nilecb-activated-window-configuration246,8660
(defgroup ecb nilecb253,8895
(defgroup ecb-general nilecb-general258,8972
(defgroup ecb-most-important nilecb-most-important263,9080
(defcustom ecb-use-recursive-edit nilecb-use-recursive-edit268,9202
(defcustom ecb-auto-activate nilecb-auto-activate274,9389
(defcustom ecb-activation-selects-ecb-frame-if-already-active 'askecb-activation-selects-ecb-frame-if-already-active281,9612
(defcustom ecb-clear-caches-before-activate nilecb-clear-caches-before-activate291,10152
(defcustom ecb-stealthy-tasks-delay 1ecb-stealthy-tasks-delay307,10861
(defcustom ecb-minor-mode-text " ECB"ecb-minor-mode-text338,12157
(defcustom ecb-auto-compatibility-check tecb-auto-compatibility-check348,12544
(defcustom ecb-version-check tecb-version-check362,13361
(defcustom ecb-debug-mode nilecb-debug-mode370,13631
(defcustom ecb-run-ediff-in-ecb-frame tecb-run-ediff-in-ecb-frame381,14204
(defcustom ecb-activate-before-layout-draw-hook nilecb-activate-before-layout-draw-hook392,14728
(defcustom ecb-before-activate-hook nilecb-before-activate-hook417,15953
(defcustom ecb-activate-hook nilecb-activate-hook430,16522
(defcustom ecb-deactivate-hook nilecb-deactivate-hook438,16867
(defcustom ecb-before-deactivate-hook nilecb-before-deactivate-hook444,17056
(defun ecb-kill-buffer-hook ()ecb-kill-buffer-hook457,17520
(defun ecb-window-sync ()ecb-window-sync483,18804
(defun ecb-customize ()ecb-customize503,19602
(defun ecb-customize-most-important ()ecb-customize-most-important509,19758
(defun ecb-menu-item (item)ecb-menu-item520,20111
(defvar ecb-menu-name "ECB")ecb-menu-name537,20609
(defvar ecb-menu-barecb-menu-bar538,20638
(defun ecb-add-to-minor-modes ()ecb-add-to-minor-modes993,34143
(defvar ecb-mode-map nilecb-mode-map1005,34642
(defcustom ecb-key-mapecb-key-map1008,34710
(defun ecb-activate ()ecb-activate1135,41091
(defun ecb-activate-internal ()ecb-activate-internal1143,41408
(defvar ecb-upgrade-check-done nil)ecb-upgrade-check-done1162,41942
(defun ecb-clean-up-after-activation-failure (msg err)ecb-clean-up-after-activation-failure1164,41979
(defvar ecb-last-window-config-before-deactivation nilecb-last-window-config-before-deactivation1175,42386
(defvar ecb-temporary-changed-emacs-variables-alist nilecb-temporary-changed-emacs-variables-alist1179,42568
(defun ecb-modify-emacs-variable (var action &optional new-value)ecb-modify-emacs-variable1184,42804
(defun ecb-activate--impl ()ecb-activate--impl1206,43883
(defun ecb-deactivate ()ecb-deactivate1510,58625
(defun ecb-deactivate-internal (&optional run-no-hooks)ecb-deactivate-internal1515,58752
(defun ecb-minor-mode (&optional arg)ecb-minor-mode1685,66067
(defun ecb-compile-file-if-necessary (file &optional force)ecb-compile-file-if-necessary1706,66624
(defun ecb-byte-compile (&optional force-all)ecb-byte-compile1716,67052
(defun ecb-auto-activate-hook()ecb-auto-activate-hook1732,67748

ecb_snap-20110605/ecb-jde.el,577
(defgroup ecb-jde-integration nilecb-jde-integration62,2118
(defcustom ecb-jde-set-directories-buffer-to-jde-sourcepath nilecb-jde-set-directories-buffer-to-jde-sourcepath68,2255
(defun ecb-jde-display-class-at-point ()ecb-jde-display-class-at-point75,2535
(defun ecb-jde-show-class-source (external-tag)ecb-jde-show-class-source127,5268
(defun ecb-jde-gen-class-buffer (dir filename)ecb-jde-gen-class-buffer139,5696
(defun ecb-jde-get-source-path ()ecb-jde-get-source-path148,6014
(defun ecb-jde-update-ecb-source-paths ()ecb-jde-update-ecb-source-paths151,6096

ecb_snap-20110605/ecb-navigate.el,4230
(defclass ecb-dlist-node ()ecb-dlist-node51,1614
(defun ecb-dlist-node-new (data)ecb-dlist-node-new59,1848
(defmethod ecb-get-data ((node ecb-dlist-node))ecb-get-data62,1920
(defmethod ecb-get-next ((node ecb-dlist-node))ecb-get-next65,1989
(defmethod ecb-get-previous ((node ecb-dlist-node))ecb-get-previous68,2058
(defmethod ecb-set-data ((node ecb-dlist-node) data)ecb-set-data71,2135
(defmethod ecb-set-next ((node ecb-dlist-node) next)ecb-set-next74,2214
(defmethod ecb-set-previous ((node ecb-dlist-node) previous)ecb-set-previous83,2473
(defclass ecb-nav-history-item ()ecb-nav-history-item97,2880
(defmethod ecb-nav-set-pos ((item ecb-nav-history-item) pos)ecb-nav-set-pos103,3060
(defmethod ecb-nav-set-window-start ((item ecb-nav-history-item) point)ecb-nav-set-window-start106,3145
(defmethod ecb-nav-get-pos ((item ecb-nav-history-item))ecb-nav-get-pos109,3252
(defmethod ecb-nav-get-window-start ((item ecb-nav-history-item))ecb-nav-get-window-start112,3329
(defmethod ecb-nav-to-string ((item ecb-nav-history-item))ecb-nav-to-string115,3424
(defmethod ecb-nav-save ((item ecb-nav-history-item))ecb-nav-save121,3678
(defmethod ecb-nav-is-valid ((item ecb-nav-history-item))ecb-nav-is-valid124,3738
(defclass ecb-nav-tag-history-item (ecb-nav-history-item)ecb-nav-tag-history-item138,4336
(defun ecb-nav-tag-history-item-new (tag-name tag-buffer tag-startecb-nav-tag-history-item-new147,4757
(defmethod ecb-nav-get-tag-buffer ((item ecb-nav-tag-history-item))ecb-nav-get-tag-buffer156,5185
(defmethod ecb-nav-get-tag-start ((item ecb-nav-tag-history-item))ecb-nav-get-tag-start159,5280
(defmethod ecb-nav-get-tag-end ((item ecb-nav-tag-history-item))ecb-nav-get-tag-end162,5373
(defmethod ecb-nav-get-tag-name ((item ecb-nav-tag-history-item))ecb-nav-get-tag-name165,5462
(defmethod ecb-nav-get-narrow ((item ecb-nav-tag-history-item))ecb-nav-get-narrow168,5553
(defmethod ecb-nav-goto ((item ecb-nav-tag-history-item))ecb-nav-goto171,5640
(defmethod ecb-nav-save ((item ecb-nav-tag-history-item))ecb-nav-save186,6278
(defmethod ecb-nav-to-string ((item ecb-nav-tag-history-item))ecb-nav-to-string202,6882
(defmethod ecb-nav-is-valid ((item ecb-nav-tag-history-item))ecb-nav-is-valid205,7009
(defclass ecb-nav-file-history-item (ecb-nav-history-item)ecb-nav-file-history-item219,7492
(defun ecb-nav-file-history-item-new ()ecb-nav-file-history-item-new227,7821
(defmethod ecb-nav-get-file ((item ecb-nav-file-history-item))ecb-nav-get-file240,8392
(defmethod ecb-nav-set-file ((item ecb-nav-file-history-item) file)ecb-nav-set-file243,8476
(defmethod ecb-nav-get-indirect-buffer-name ((item ecb-nav-file-history-item))ecb-nav-get-indirect-buffer-name246,8570
(defmethod ecb-nav-set-indirect-buffer-name ((item ecb-nav-file-history-item) indirect-buffer-name)ecb-nav-set-indirect-buffer-name249,8686
(defmethod ecb-nav-save ((item ecb-nav-file-history-item))ecb-nav-save252,8844
(defmethod ecb-nav-goto ((item ecb-nav-file-history-item))ecb-nav-goto261,9238
(defmethod ecb-nav-to-string ((item ecb-nav-file-history-item))ecb-nav-to-string272,9677
(defmethod ecb-nav-is-valid ((item ecb-nav-file-history-item))ecb-nav-is-valid277,9865
(defvar ecb-nav-first-node nil)ecb-nav-first-node289,10369
(defvar ecb-nav-current-node nil)ecb-nav-current-node292,10485
(defun ecb-nav-initialize ()ecb-nav-initialize296,10568
(defun ecb-nav-jump-to-tag (file tag &optional narrow)ecb-nav-jump-to-tag302,10744
(defun ecb-nav-jump-to-file (file)ecb-nav-jump-to-file307,10904
(defun ecb-nav-add-item (item)ecb-nav-add-item312,11039
(defun ecb-nav-remove-current-node ()ecb-nav-remove-current-node318,11257
(defun ecb-nav-remove-node (node)ecb-nav-remove-node321,11342
(defun ecb-nav-remove-invalid-nodes ()ecb-nav-remove-invalid-nodes339,11988
(defun ecb-nav-save-current ()ecb-nav-save-current348,12270
(defun ecb-nav-goto-next ()ecb-nav-goto-next352,12404
(defun ecb-nav-goto-previous ()ecb-nav-goto-previous357,12560
(defun ecb-nav-dump-history ()ecb-nav-dump-history362,12721
(defun ecb-nav-dump-history--internal (node)ecb-nav-dump-history--internal367,12857
(defun ecb-nav-goto--internal (node)ecb-nav-goto--internal372,13033

ecb_snap-20110605/ecb-winman-support.el,2058
(defgroup ecb-winman-support nilecb-winman-support106,4192
(defcustom ecb-winman-escreen-number 1ecb-winman-escreen-number112,4363
(defcustom ecb-winman-winring-name "ECB"ecb-winman-winring-name120,4685
(defecb-advice-set ecb-winman-escreen-adviced-functionsecb-winman-escreen-adviced-functions131,5133
(defun ecb-winman-escreen-enable-support ()ecb-winman-escreen-enable-support137,5321
(defun ecb-winman-escreen-disable-support ()ecb-winman-escreen-disable-support157,6154
(defun ecb-winman-escreen-goto-escreen-hook ()ecb-winman-escreen-goto-escreen-hook166,6454
(defecb-advice escreen-save-current-screen-configurationescreen-save-current-screen-configuration175,6827
(defecb-advice-set ecb-winman-winring-adviced-functionsecb-winman-winring-adviced-functions189,7455
(defun ecb-winman-winring-enable-support ()ecb-winman-winring-enable-support194,7643
(defun ecb-winman-winring-disable-support ()ecb-winman-winring-disable-support211,8369
(defvar ecb-winman-winring-ecb-frame nilecb-winman-winring-ecb-frame217,8537
(defecb-advice winring-set-name after ecb-winman-winring-adviced-functionswinring-set-name220,8649
(defecb-advice winring-duplicate-configuration before ecb-winman-winring-adviced-functionswinring-duplicate-configuration238,9533
(defecb-advice winring-restore-configuration before ecb-winman-winring-adviced-functionswinring-restore-configuration243,9833
(defecb-advice winring-save-current-configuration before ecb-winman-winring-adviced-functionswinring-save-current-configuration252,10225
(defecb-advice winring-initialize after ecb-winman-winring-adviced-functionswinring-initialize263,10762
(defecb-advice-set ecb-winman-not-supported-function-advicesecb-winman-not-supported-function-advices274,11217
(defecb-advice winner-mode before ecb-winman-not-supported-function-adviceswinner-mode279,11414
(defecb-advice winner-redo before ecb-winman-not-supported-function-adviceswinner-redo284,11671
(defecb-advice winner-undo before ecb-winman-not-supported-function-adviceswinner-undo289,11926

ecb_snap-20110605/tree-buffer.el,13439
(defconst tree-buffer-running-xemacs (featurep 'xemacs))tree-buffer-running-xemacs86,2895
(defun tree-buffer-copy-list (list)tree-buffer-copy-list199,7753
(defun tree-buffer-member (item list &optional test-fcn)tree-buffer-member210,8149
(defun tree-buffer-position (seq elem &optional test-fcn)tree-buffer-position226,8761
(defun tree-buffer-last (seq)tree-buffer-last241,9339
(defun tree-buffer-first (seq)tree-buffer-first249,9534
(defun tree-buffer-set-elt (seq n val)tree-buffer-set-elt258,9711
(defun tree-buffer-remove-elt (seq n)tree-buffer-remove-elt266,9973
(defsubst tree-buffer-aset (array idx newelt)tree-buffer-aset272,10247
(defun tree-buffer-nolog-message (&rest args)tree-buffer-nolog-message277,10375
(defsubst tree-buffer-current-line ()tree-buffer-current-line300,11167
(defun tree-buffer-goto-line (line)tree-buffer-goto-line304,11347
(defvar tree-buffer-debug-mode niltree-buffer-debug-mode318,11725
(defun tree-buffer-debug-error (&rest args)tree-buffer-debug-error323,11962
(defvar tree-node-id nil)tree-node-id338,12688
(defconst tree-node-id-init-value -268435456)tree-node-id-init-value340,12715
(defun tree-node-id-init ()tree-node-id-init342,12762
(defsubst tree-node-id-next ()tree-node-id-next347,12859
(defun tree-node-new (name type data &optional not-expandable parenttree-node-new367,13194
(defsubst tree-node-indentlength (node)tree-node-indentlength440,16435
(defsubst tree-node-linelength (node)tree-node-linelength444,16557
(defsubst tree-node-toggle-expanded (node)tree-node-toggle-expanded451,16859
(defun tree-node-indent-level (node)tree-node-indent-level455,17012
(defun tree-node-new-root ()tree-node-new-root463,17289
(defun tree-node-update (node name type data expandable shrink-name)tree-node-update469,17530
(defun tree-node-add-children (node children &optional at-beginning)tree-node-add-children485,18227
(defsubst tree-node-sort-children (node sortfn)tree-node-sort-children505,19182
(defsubst tree-node-remove-child (node child)tree-node-remove-child512,19496
(defun tree-node-find-child-by-data/name (node child-data &optional child-name)tree-node-find-child-by-data/name518,19717
(defun tree-node-remove-child-by-data/name (node child-data &optional child-name)tree-node-remove-child-by-data/name532,20397
(defun tree-node-find-child-by-name (node child-name)tree-node-find-child-by-name555,21367
(defun tree-node-search-subtree-by-data (start-node data)tree-node-search-subtree-by-data577,22376
(defun tree-node-search-subtree-by-id (start-node node-id)tree-node-search-subtree-by-id605,23769
(defun tree-node-map-subtree (start-node map-fcn)tree-node-map-subtree624,24712
(defvar tree-buffer-root niltree-buffer-root660,26210
(defvar tree-buffer-displayed-nodes niltree-buffer-displayed-nodes664,26344
(defsubst tree-buffer-initialize-displayed-nodes ()tree-buffer-initialize-displayed-nodes668,26527
(defsubst tree-buffer-number-of-displayed-nodes ()tree-buffer-number-of-displayed-nodes672,26681
(defsubst tree-buffer-nth-displayed-node (n)tree-buffer-nth-displayed-node676,26823
(defun tree-buffer-find-displayed-node-by-data/name (node-data &optionaltree-buffer-find-displayed-node-by-data/name681,27034
(defun tree-buffer-search-displayed-node-list (search-fcn)tree-buffer-search-displayed-node-list713,28827
(defun tree-buffer-displayed-node-nr (node)tree-buffer-displayed-node-nr721,29154
(defun tree-buffer-displayed-node-linenr (node)tree-buffer-displayed-node-linenr727,29438
(defsubst tree-buffer-add-to-displayed-nodes (node)tree-buffer-add-to-displayed-nodes732,29619
(defsubst tree-buffer-displayed-nodes-remove-nth (n)tree-buffer-displayed-nodes-remove-nth737,29845
(defsubst tree-buffer-displayed-nodes-remove-node (node)tree-buffer-displayed-nodes-remove-node741,30038
(defsubst tree-buffer-displayed-nodes-replace-nth (n new-node)tree-buffer-displayed-nodes-replace-nth746,30254
(defun tree-buffer-displayed-nodes-replace-node (node new-node)tree-buffer-displayed-nodes-replace-node751,30481
(defsubst tree-buffer-set-displayed-nodes (displayed-nodes)tree-buffer-set-displayed-nodes759,30802
(defsubst tree-buffer-displayed-nodes-copy ()tree-buffer-displayed-nodes-copy765,31073
(defsubst tree-buffer-map-displayed-nodes (function)tree-buffer-map-displayed-nodes770,31311
(defvar tree-buffer-frame niltree-buffer-frame780,31684
(defvar tree-buffer-key-map niltree-buffer-key-map784,31806
(defvar tree-buffer-highlighted-node niltree-buffer-highlighted-node788,31935
(defun tree-buffer-highlighted-node-matches-data/name-p (data name)tree-buffer-highlighted-node-matches-data/name-p798,32318
(defvar tree-buffer-highlight-overlay niltree-buffer-highlight-overlay811,32979
(defvar tree-buffer-general-overlay niltree-buffer-general-overlay815,33147
(defvar tree-buffer-spec niltree-buffer-spec819,33316
(defvar tree-buffer-hscroll-number 0tree-buffer-hscroll-number822,33399
(defvar tree-buffer-sticky-parent-node-function niltree-buffer-sticky-parent-node-function826,33544
(defun* tree-buffer-spec-new (&keytree-buffer-spec-new869,35185
(defconst tree-buffer-incr-searchpattern-expand-prefixtree-buffer-incr-searchpattern-expand-prefix963,40370
(defvar tree-buffer-incr-searchpattern niltree-buffer-incr-searchpattern967,40531
(defvar tree-buffer-last-incr-searchpattern niltree-buffer-last-incr-searchpattern971,40689
(defvar tree-buffer-incr-searchpattern-indent-prefix niltree-buffer-incr-searchpattern-indent-prefix980,41179
(defvar tree-buffer-data-store niltree-buffer-data-store990,41656
(defsubst tree-buffer-set-data-store (data)tree-buffer-set-data-store995,41855
(defsubst tree-buffer-get-data-store ()tree-buffer-get-data-store999,41980
(defvar tree-buffer-local-image-cache niltree-buffer-local-image-cache1005,42180
(defvar tree-buffer-images-can-be-used niltree-buffer-images-can-be-used1009,42336
(defvar tree-buffer-images-can-be-used-init-p niltree-buffer-images-can-be-used-init-p1011,42418
(defun tree-buffer-images-can-be-used ()tree-buffer-images-can-be-used1014,42508
(defvar tree-buffer-image-properties-emacstree-buffer-image-properties-emacs1026,42995
(defvar tree-buffer-image-properties-xemacstree-buffer-image-properties-xemacs1030,43116
(defvar tree-buffer-enable-xemacs-image-bug-hacktree-buffer-enable-xemacs-image-bug-hack1034,43201
(defconst tree-buffer-image-formatstree-buffer-image-formats1058,44134
(defconst tree-buffer-expand-symbol-length 3)tree-buffer-expand-symbol-length1062,44255
(defconst tree-buffer-indent-with-images 3)tree-buffer-indent-with-images1063,44301
(defconst tree-buffer-indent-w/o-images-before-min 3)tree-buffer-indent-w/o-images-before-min1064,44345
(defconst tree-buffer-indent-w/o-images-after-min 2)tree-buffer-indent-w/o-images-after-min1065,44399
(defconst tree-buffer-tree-image-namestree-buffer-tree-image-names1067,44453
(defun tree-buffer-real-style (&optional style)tree-buffer-real-style1103,46160
(defsubst tree-buffer-ascii-symbol-4-image-name (name)tree-buffer-ascii-symbol-4-image-name1117,46818
(defun tree-buffer-add-image-icon-maybe (start len str image-icon)tree-buffer-add-image-icon-maybe1140,48112
(defsubst tree-buffer-image-cache-get (tree-image-name)tree-buffer-image-cache-get1174,49959
(defsubst tree-buffer-image-cache-put (tree-image-name image)tree-buffer-image-cache-put1178,50093
(defun tree-buffer-find-image (tree-image-name)tree-buffer-find-image1183,50284
(defvar tree-buffers nil)tree-buffers1235,53234
(defvar tree-buffer-syntax-table niltree-buffer-syntax-table1237,53261
(defun tree-buffer-get-node-name-start-column (node)tree-buffer-get-node-name-start-column1255,54004
(defun tree-buffer-get-node-name-start-point (node)tree-buffer-get-node-name-start-point1279,55027
(defun tree-buffer-get-node-name-end-point (node)tree-buffer-get-node-name-end-point1290,55527
(defun tree-buffer-point-at-expand-symbol-p (node p)tree-buffer-point-at-expand-symbol-p1297,55862
(defun tree-buffer-point-at-node-name-p (node p)tree-buffer-point-at-node-name-p1316,56929
(defun tree-buffer-get-node-at-point (&optional p)tree-buffer-get-node-at-point1323,57297
(defun tree-buffer-select (mouse-button additional-key-list)tree-buffer-select1329,57535
(defun tree-buffer-node-data-equal-p (node-data-1 node-data-2)tree-buffer-node-data-equal-p1392,61568
(defun tree-buffer-get-node-facer (node)tree-buffer-get-node-facer1402,62033
(defun tree-buffer-pos-hor-visible-p (pos window)tree-buffer-pos-hor-visible-p1409,62245
(defun tree-buffer-get-event-column (e &optional include-fringe-scrollbar)tree-buffer-get-event-column1417,62563
(defun tree-buffer-hscroll (amount)tree-buffer-hscroll1430,63181
(defun tree-buffer-mouse-hscroll (e)tree-buffer-mouse-hscroll1439,63513
(defun tree-buffer-count-subnodes-to-display (node)tree-buffer-count-subnodes-to-display1455,64273
(defun tree-buffer-recenter (node window)tree-buffer-recenter1480,65147
(defun tree-buffer-remove-highlight ()tree-buffer-remove-highlight1580,70959
(defun tree-buffer-highlight-node-by-data/name (node-data &optional node-name start-nodetree-buffer-highlight-node-by-data/name1586,71196
(defun tree-buffer-help-echo-fn (win obj pos)tree-buffer-help-echo-fn1630,73447
(defun tree-buffer-merge-face (face start end &optional text)tree-buffer-merge-face1644,74011
(defun tree-buffer-insert-text (text &optional facer help-echo mouse-highlight)tree-buffer-insert-text1697,76658
(defun tree-buffer-node-display-name (node)tree-buffer-node-display-name1716,77475
(defun tree-buffer-insert-node-display (node &optional no-newline)tree-buffer-insert-node-display1784,81286
(defun tree-buffer-gen-guide-strings ()tree-buffer-gen-guide-strings1830,83848
(defun tree-buffer-add-node (node indent-str-first-segs indent-str-last-segtree-buffer-add-node1868,86139
(defun tree-buffer-update-node (node name shrink-name type data expandabletree-buffer-update-node1954,90463
(defun tree-buffer-clear-tree ()tree-buffer-clear-tree2008,93753
(defun tree-buffer-remove-node (node &optional redisplay empty-parent-types)tree-buffer-remove-node2013,93961
(defun tree-buffer-build-tree-buffer-display ()tree-buffer-build-tree-buffer-display2049,95975
(defun tree-buffer-display-in-general-face ()tree-buffer-display-in-general-face2058,96393
(defun tree-buffer-empty-p ()tree-buffer-empty-p2068,96883
(defun tree-buffer-run-after-update-hook ()tree-buffer-run-after-update-hook2072,96997
(defun tree-buffer-update (&optional node content)tree-buffer-update2077,97200
(defun tree-buffer-scroll-window (point window-start)tree-buffer-scroll-window2116,98982
(defun tree-buffer-expand-node (node leveltree-buffer-expand-node2122,99230
(defun tree-buffer-expand-node-internal (node current-level leveltree-buffer-expand-node-internal2176,102108
(defun tree-buffer-set-root (root)tree-buffer-set-root2201,103543
(defun tree-buffer-get-root ()tree-buffer-get-root2208,103840
(defun tree-buffer-gen-searchpattern-indent-prefix (&optional count)tree-buffer-gen-searchpattern-indent-prefix2212,103941
(defun tree-buffer-find-common-substring (lis subs &optional only-prefix)tree-buffer-find-common-substring2229,104620
(defun tree-buffer-incremental-node-search ()tree-buffer-incremental-node-search2262,106506
(defun tree-buffer-create-menu-emacs (menu-def menu-name)tree-buffer-create-menu-emacs2346,110700
(defun tree-buffer-create-menu-xemacs (menu-def &optional node-commands-p)tree-buffer-create-menu-xemacs2373,111704
(defun tree-buffer-create-menu (menu-items &optional node-commands-p)tree-buffer-create-menu2398,112894
(defun tree-buffer-create-menus (menus &optional node-commands-p)tree-buffer-create-menus2435,114740
(defun tree-buffer-show-node-menu-keyboard (&optional use-tmm)tree-buffer-show-node-menu-keyboard2452,115616
(defun tree-buffer-popup-menu (event menu menu-title &optional node)tree-buffer-popup-menu2480,117184
(defun tree-buffer-show-node-menu (event)tree-buffer-show-node-menu2507,118502
(defun tree-buffer-show-modeline-menu (event)tree-buffer-show-modeline-menu2530,119749
(defmacro tree-buffer-defpopup-command (name docstring &rest body)tree-buffer-defpopup-command2541,120322
(defun tree-buffer-follow-mouse (event)tree-buffer-follow-mouse2594,123113
(defun tree-buffer-activate-follow-mouse ()tree-buffer-activate-follow-mouse2613,124095
(defun tree-buffer-deactivate-follow-mouse ()tree-buffer-deactivate-follow-mouse2626,124687
(defun tree-buffer-tab-pressed ()tree-buffer-tab-pressed2635,124985
(defun tree-buffer-arrow-pressed ()tree-buffer-arrow-pressed2655,125924
(defun tree-buffer-sticky-default-indent-string ()tree-buffer-sticky-default-indent-string2697,127743
(defconst tree-buffer-stickynode-header-line-formattree-buffer-stickynode-header-line-format2759,129709
(defun tree-buffer-goto-sticky-node ()tree-buffer-goto-sticky-node2775,130295
(defun tree-buffer-stickynode-fetch-stickyline ()tree-buffer-stickynode-fetch-stickyline2797,131283
(defun tree-buffer-create-mouse-key (button trigger &optional modifier key-qualifier)tree-buffer-create-mouse-key2826,132377
(defun* tree-buffer-create (nametree-buffer-create2858,134052
(defun tree-buffer-destroy (tree-buffer-name)tree-buffer-destroy3482,167428
(defconst tree-buffer-font-lock-keywordstree-buffer-font-lock-keywords3492,167878

ecb_snap-20110605/ecb-examples.el,2416
(defgroup ecb-examples nilecb-examples76,2974
(defcustom ecb-examples-bufferinfo-buffer-sync 'basicecb-examples-bufferinfo-buffer-sync92,3624
(defcustom ecb-examples-bufferinfo-buffer-sync-delay 'basicecb-examples-bufferinfo-buffer-sync-delay112,4535
(defcustom ecb-examples-bufferinfo-buffer-sync-hook nilecb-examples-bufferinfo-buffer-sync-hook134,5681
(defconst ecb-examples-bufferinfo-buffer-name " *ECB buffer info*")ecb-examples-bufferinfo-buffer-name166,7079
(defvar ecb-examples-bufferinfo-last-file-buffer nil)ecb-examples-bufferinfo-last-file-buffer167,7147
(defun ecb-examples-print-file-attributes (buffer filename)ecb-examples-print-file-attributes171,7268
(defun ecb-examples-print-non-filebuffer (buffer buffer-name)ecb-examples-print-non-filebuffer189,8183
(defecb-autocontrol/sync-function ecb-examples-bufferinfo-buffer-syncecb-examples-bufferinfo-buffer-sync200,8662
(defun ecb-maximize-bufferinfo-window ()ecb-maximize-bufferinfo-window265,11769
(defun ecb-goto-bufferinfo-window ()ecb-goto-bufferinfo-window273,12126
(defecb-window-dedicator-to-ecb-buffer ecb-examples-set-bufferinfo-bufferecb-examples-set-bufferinfo-buffer282,12423
(defconst ecb-examples-action-buffer-name " *ECB action buffer*")ecb-examples-action-buffer-name304,13674
(defvar ecb-examples-action-buffer-keymap nil)ecb-examples-action-buffer-keymap305,13740
(defun ecb-examples-insert-text-in-action-buffer (text)ecb-examples-insert-text-in-action-buffer312,13880
(defun ecb-examples-action-buffer-create ()ecb-examples-action-buffer-create319,14133
(defun ecb-examples-action-buffer-clicked (e)ecb-examples-action-buffer-clicked362,15885
(defun ecb-maximize-action-window ()ecb-maximize-action-window382,16628
(defun ecb-goto-action-window ()ecb-goto-action-window390,16973
(defecb-window-dedicator-to-ecb-buffer ecb-examples-set-action-bufferecb-examples-set-action-buffer399,17254
(defvar ecb-examples-preact-layout nil)ecb-examples-preact-layout468,20327
(defvar ecb-examples-preact-windows-height nil)ecb-examples-preact-windows-height469,20367
(defvar ecb-examples-preact-compile-window-height nil)ecb-examples-preact-compile-window-height470,20415
(defun ecb-examples-preactivation-state(action)ecb-examples-preactivation-state471,20470
(defun ecb-examples-activate ()ecb-examples-activate499,21765
(defun ecb-examples-deactivate ()ecb-examples-deactivate532,22993

ecb_snap-20110605/ecb-common-browser.el,10118
(defgroup ecb-tree-buffer nilecb-tree-buffer58,1785
(defcustom ecb-bucket-node-display '("" "" ecb-bucket-node-face)ecb-bucket-node-display63,1905
(defcustom ecb-use-speedbar-instead-native-tree-buffer nilecb-use-speedbar-instead-native-tree-buffer91,3367
(defvar ecb-tree-do-not-leave-window-after-select--internal nilecb-tree-do-not-leave-window-after-select--internal128,5068
(defcustom ecb-tree-do-not-leave-window-after-select nilecb-tree-do-not-leave-window-after-select133,5329
(defcustom ecb-tree-indent 4ecb-tree-indent168,7361
(defcustom ecb-tree-expand-symbol-before tecb-tree-expand-symbol-before176,7600
(defcustom ecb-tree-buffer-style 'imageecb-tree-buffer-style206,8653
(defcustom ecb-tree-image-icons-directoriesecb-tree-image-icons-directories264,10657
(defcustom ecb-tree-truncate-lines '(ecb-directories-buffer-nameecb-tree-truncate-lines311,13472
(defcustom ecb-tree-easy-hor-scroll 5ecb-tree-easy-hor-scroll336,14728
(defcustom ecb-tree-make-parent-node-sticky tecb-tree-make-parent-node-sticky360,15966
(defcustom ecb-tree-stickynode-indent-string (tree-buffer-sticky-default-indent-string)ecb-tree-stickynode-indent-string377,16673
(defcustom ecb-truncate-long-names tecb-truncate-long-names396,17500
(defcustom ecb-tree-incremental-search 'prefixecb-tree-incremental-search405,17880
(defcustom ecb-tree-navigation-by-arrow tecb-tree-navigation-by-arrow418,18485
(defun ecb-show-any-node-info-by-mouse-moving-p ()ecb-show-any-node-info-by-mouse-moving-p435,19320
(defcustom ecb-primary-secondary-mouse-buttons 'mouse-2--C-mouse-2ecb-primary-secondary-mouse-buttons450,20052
(defcustom ecb-tree-mouse-action-trigger 'button-releaseecb-tree-mouse-action-trigger498,22387
(defcustom ecb-mouse-click-destination 'last-pointecb-mouse-click-destination511,23006
(defcustom ecb-common-tree-buffer-after-create-hook nilecb-common-tree-buffer-after-create-hook543,24572
(defcustom ecb-basic-buffer-sync '(Info-mode dired-mode)ecb-basic-buffer-sync557,25123
(defcustom ecb-basic-buffer-sync-delay 0.25ecb-basic-buffer-sync-delay589,26658
(defcustom ecb-basic-buffer-sync-hook nilecb-basic-buffer-sync-hook607,27553
(defvar ecb-adviced-function-sets nilecb-adviced-function-sets641,28936
(defvar ecb-adviced-permanent-function-sets nilecb-adviced-permanent-function-sets649,29232
(defvar ecb-adviced-functions nilecb-adviced-functions656,29511
(defvar ecb-advices-debug-error nilecb-advices-debug-error663,29718
(defun ecb-advices-debug-error (advice class action &rest args)ecb-advices-debug-error666,29836
(defmacro defecb-advice-set (advice-set docstring &optional permanent)defecb-advice-set684,30634
(defmacro defecb-advice (adviced-function advice-class advice-set advice-docstring &rest body)defecb-advice724,32550
(defun ecb-enable-ecb-advice (function-symbol advice-class arg)ecb-enable-ecb-advice771,34682
(defun ecb-enable-advices (adviced-function-set-var)ecb-enable-advices788,35463
(defun ecb-disable-advices (adviced-function-set-var &optional force-permanent)ecb-disable-advices802,36221
(defmacro ecb-with-ecb-advice (function-symbol advice-class &rest body)ecb-with-ecb-advice835,37921
(defmacro ecb-with-original-adviced-function-set (adviced-function-set-var &rest body)ecb-with-original-adviced-function-set891,40777
(defecb-advice-set ecb-always-disabled-advicesecb-always-disabled-advices945,43454
(defun ecb-source-make (filename &optional buffer)ecb-source-make952,43734
(defun ecb-source-get-filename (source)ecb-source-get-filename965,44289
(defun ecb-source-get-buffername (source)ecb-source-get-buffername973,44570
(defun ecb-source-get-buffer (source)ecb-source-get-buffer980,44842
(defvar ecb-path-selected-directory nilecb-path-selected-directory997,45595
(defvar ecb-path-selected-source nilecb-path-selected-source1000,45679
(defun ecb-path-selected-source-set (filename buffer)ecb-path-selected-source-set1012,46110
(defun ecb-path-selected-source (&optional type)ecb-path-selected-source1021,46585
(defvar ecb-tree-buffer-creators nilecb-tree-buffer-creators1041,47433
(defun ecb-tree-buffer-creators-init ()ecb-tree-buffer-creators-init1047,47740
(defun ecb-tree-buffer-creators-register (name-symbol fn)ecb-tree-buffer-creators-register1052,47903
(defun ecb-tree-buffer-creators-run ()ecb-tree-buffer-creators-run1056,48097
(defmacro defecb-tree-buffer-creator (creatordefecb-tree-buffer-creator1063,48340
(defvar ecb-ecb-buffer-registry nilecb-ecb-buffer-registry1098,50036
(defun ecb-ecb-buffer-registry-init ()ecb-ecb-buffer-registry-init1128,51403
(defun ecb-ecb-buffer-registry-add (name name-symbol tree-buffer-p &optional set-fcn-symbol)ecb-ecb-buffer-registry-add1131,51481
(defsubst ecb-ecb-buffer-registry-name-list (&optional only-tree-buffers)ecb-ecb-buffer-registry-name-list1138,51839
(defsubst ecb-ecb-buffer-registry-symbol-list (&optional only-tree-buffers)ecb-ecb-buffer-registry-symbol-list1145,52170
(defsubst ecb-ecb-buffer-registry-buffer-list (&optional only-tree-buffers)ecb-ecb-buffer-registry-buffer-list1152,52503
(defsubst ecb-ecb-buffer-registry-get-symbol (name)ecb-ecb-buffer-registry-get-symbol1159,52855
(defsubst ecb-ecb-buffer-registry-get-set-fcn (name)ecb-ecb-buffer-registry-get-set-fcn1162,52956
(defvar ecb-tree-buffer-callbacks '((expand . nil) (select . nil))ecb-tree-buffer-callbacks1166,53059
(defun ecb-tree-buffer-callbacks-add (type buffer-name-symbol callback)ecb-tree-buffer-callbacks-add1176,53438
(defun ecb-tree-buffer-callbacks-alist-of-type (type)ecb-tree-buffer-callbacks-alist-of-type1188,54059
(defmacro defecb-tree-buffer-callback (callbackdefecb-tree-buffer-callback1195,54307
(defecb-multicache ecb-filename-cache 500 nil '(FILES-AND-SUBDIRSecb-filename-cache1288,58984
(defun ecb-filename-cache-init ()ecb-filename-cache-init1362,61873
(defconst ecb-directory-sep-charecb-directory-sep-char1369,62089
(defsubst ecb-directory-sep-char (&optional refdir)ecb-directory-sep-char1375,62238
(defsubst ecb-directory-sep-string (&optional refdir)ecb-directory-sep-string1381,62395
(defvar ecb-autotrace-autocontrol/sync-functions nilecb-autotrace-autocontrol/sync-functions1386,62577
(defvar ecb-bodytrace-autocontrol/sync-functions nilecb-bodytrace-autocontrol/sync-functions1398,63234
(defun ecb-autotrace-autocontrol/sync-fcn-error (autocontrol-fcn &rest args)ecb-autotrace-autocontrol/sync-fcn-error1412,63927
(defun ecb-bodytrace-autocontrol/sync-fcn-error (autocontrol-fcn &rest args)ecb-bodytrace-autocontrol/sync-fcn-error1426,64734
(defvar ecb-autocontrol/sync-fcn-register nilecb-autocontrol/sync-fcn-register1444,65669
(defvar ecb-idle-timer-alist nilecb-idle-timer-alist1449,65958
(defvar ecb-post-command-hooks nilecb-post-command-hooks1451,66030
(defvar ecb-pre-command-hooks nilecb-pre-command-hooks1453,66146
(defun ecb-register-autocontrol/sync-function (fcn-symbol buffer-name-symbol)ecb-register-autocontrol/sync-function1456,66261
(defun ecb-stop-all-autocontrol/sync-functions ()ecb-stop-all-autocontrol/sync-functions1459,66429
(defun ecb-stop-autocontrol/sync-function (fcn-symbol)ecb-stop-autocontrol/sync-function1463,66593
(defun ecb-activate-ecb-autocontrol-function (value func)ecb-activate-ecb-autocontrol-function1475,67120
(defmacro defecb-autocontrol/sync-function (fcn buffer-name-symboldefecb-autocontrol/sync-function1503,68390
(defecb-autocontrol/sync-function ecb-monitor-autocontrol-functions nil nil nilecb-monitor-autocontrol-functions1643,75413
(defun ecb-expand-file-name (name &optional default-dir)ecb-expand-file-name1680,76801
(defun ecb-fix-path (path)ecb-fix-path1687,77079
(defsubst ecb-fixed-filename-cache-put (path filename fixed-filename)ecb-fixed-filename-cache-put1704,77788
(defsubst ecb-fixed-filename-cache-get (path filename)ecb-fixed-filename-cache-get1712,78147
(defun ecb-fixed-filename-cache-dump (&optional no-nil-value)ecb-fixed-filename-cache-dump1720,78517
(defun ecb-fix-filename (path &optional filename substitute-env-vars)ecb-fix-filename1732,79194
(defun ecb-format-bucket-name (name &optional ignore-prefix-suffix ignore-bucket-face)ecb-format-bucket-name1795,82770
(defun ecb-toggle-do-not-leave-window-after-select ()ecb-toggle-do-not-leave-window-after-select1819,84242
(defun ecb-common-tree-buffer-modeline-menu-creator (buf-name)ecb-common-tree-buffer-modeline-menu-creator1845,85787
(defun ecb-common-after-tree-buffer-create-actions ()ecb-common-after-tree-buffer-create-actions1850,86039
(defun ecb-tree-buffer-node-select-callback (nodeecb-tree-buffer-node-select-callback1870,86781
(defun ecb-tree-buffer-node-collapsed-callback (nodeecb-tree-buffer-node-collapsed-callback1934,89899
(defun ecb-tree-buffer-node-expand-callback (nodeecb-tree-buffer-node-expand-callback1951,90746
(defun ecb-interpret-mouse-click (mouse-buttonecb-interpret-mouse-click1983,92195
(defun ecb-show-minibuffer-info (node window when-spec)ecb-show-minibuffer-info2022,94054
(defvar ecb-stealthy-function-list nilecb-stealthy-function-list2039,94662
(defvar ecb-stealthy-function-state-alist nilecb-stealthy-function-state-alist2043,94839
(defun ecb-stealthy-function-list-add (fcn)ecb-stealthy-function-list-add2048,95068
(defun ecb-stealthy-function-state-alist-add (fcn)ecb-stealthy-function-state-alist-add2051,95162
(defun ecb-stealthy-function-state-get (fcn)ecb-stealthy-function-state-get2055,95298
(defun ecb-stealthy-function-state-set (fcn state)ecb-stealthy-function-state-set2060,95495
(defun ecb-stealthy-function-p (fcn)ecb-stealthy-function-p2065,95718
(defun ecb-stealthy-function-state-init (&optional fcn state)ecb-stealthy-function-state-init2070,95880
(defmacro defecb-stealthy (name docstring &rest body)defecb-stealthy2081,96504
(defvar ecb-stealthy-update-running nilecb-stealthy-update-running2117,98532
(defecb-autocontrol/sync-function ecb-stealthy-updates nil nil nilecb-stealthy-updates2120,98633
(defun ecb-generate-node-name (text-name first-chars icon-name name-of-buffer)ecb-generate-node-name2146,99868

ecb_snap-20110605/ecb-layout.el,22035
(defvar ecb-layouts-reload-needed t)ecb-layouts-reload-needed167,6929
(defun ecb-load-layouts ()ecb-load-layouts168,6966
(defgroup ecb-layout nilecb-layout176,7224
(defgroup ecb-compilation nilecb-compilation181,7344
(defconst ecb-layout-option-set-functionecb-layout-option-set-function187,7459
(defcustom ecb-select-edit-window-on-redraw nilecb-select-edit-window-on-redraw204,8159
(defcustom ecb-new-ecb-frame nilecb-new-ecb-frame209,8305
(defcustom ecb-activate-before-new-frame-created-hook nilecb-activate-before-new-frame-created-hook215,8458
(defvar ecb-last-selected-layout nilecb-last-selected-layout222,8703
(defcustom ecb-layout-name "left8"ecb-layout-name227,8915
(defun ecb-enable-temp-buffer-shrink-to-fit (arg)ecb-enable-temp-buffer-shrink-to-fit270,10563
(defcustom ecb-compile-window-height nilecb-compile-window-height307,12159
(defcustom ecb-compile-window-width 'frameecb-compile-window-width374,15698
(defcustom ecb-change-layout-preserves-compwin-state tecb-change-layout-preserves-compwin-state436,18814
(defcustom ecb-compile-window-temporally-enlarge 'after-displayecb-compile-window-temporally-enlarge444,19142
(defcustom ecb-maximize-ecb-window-after-selection nilecb-maximize-ecb-window-after-selection475,20610
(defcustom ecb-maximize-next-after-maximized-select nilecb-maximize-next-after-maximized-select484,21063
(defcustom ecb-compile-window-prevent-shrink-below-height tecb-compile-window-prevent-shrink-below-height530,23707
(defcustom ecb-enlarged-compilation-window-max-height 'bestecb-enlarged-compilation-window-max-height545,24276
(defcustom ecb-scroll-other-window-scrolls-compile-window nilecb-scroll-other-window-scrolls-compile-window576,25504
(defcustom ecb-ignore-special-display 'compile-windowecb-ignore-special-display583,25802
(defsubst ecb-ignore-special-display ()ecb-ignore-special-display600,26656
(defcustom ecb-ignore-pop-up-frames 'compile-windowecb-ignore-pop-up-frames605,26848
(defsubst ecb-ignore-pop-up-frames ()ecb-ignore-pop-up-frames618,27505
(defcustom ecb-ignore-display-buffer-function 'alwaysecb-ignore-display-buffer-function623,27691
(defsubst ecb-ignore-display-buffer-function ()ecb-ignore-display-buffer-function643,28822
(defcustom ecb-split-edit-window-after-start 'before-deactivationecb-split-edit-window-after-start648,29038
(defcustom ecb-windows-width 0.33ecb-windows-width695,31785
(defcustom ecb-windows-height 0.33ecb-windows-height703,32086
(defcustom ecb-fix-window-size nilecb-fix-window-size712,32377
(defun ecb-get-window-fix-type (layout-name)ecb-get-window-fix-type762,35062
(defun ecb-set-window-size-fixed (fix)ecb-set-window-size-fixed773,35479
(defmacro ecb-do-with-unfixed-ecb-buffers (&rest body)ecb-do-with-unfixed-ecb-buffers787,36073
(defmacro ecb-do-with-fixed-ecb-buffers (&rest body)ecb-do-with-fixed-ecb-buffers798,36601
(defcustom ecb-other-window-behavior 'smartecb-other-window-behavior811,37125
(defcustom ecb-advice-window-functions-signal-error nilecb-advice-window-functions-signal-error901,41101
(defcustom ecb-layout-always-operate-in-edit-windowecb-layout-always-operate-in-edit-window917,41866
(defcustom ecb-layout-window-sizes nilecb-layout-window-sizes952,43605
(defcustom ecb-redraw-layout-quickly nilecb-redraw-layout-quickly996,46218
(defcustom ecb-major-modes-show-or-hide (cons nil nil)ecb-major-modes-show-or-hide1002,46430
(defcustom ecb-toggle-layout-sequence '("left9" "left14")ecb-toggle-layout-sequence1017,47190
(defcustom ecb-hide-ecb-windows-before-hook nilecb-hide-ecb-windows-before-hook1055,49079
(defcustom ecb-hide-ecb-windows-after-hook nilecb-hide-ecb-windows-after-hook1069,49689
(defcustom ecb-show-ecb-windows-before-hook nilecb-show-ecb-windows-before-hook1081,50204
(defcustom ecb-show-ecb-windows-after-hook nilecb-show-ecb-windows-after-hook1100,51050
(defcustom ecb-redraw-layout-after-hook '(ecb-eshell-recenter)ecb-redraw-layout-after-hook1120,51904
(defcustom ecb-redraw-layout-before-hook nilecb-redraw-layout-before-hook1127,52170
(defcustom ecb-layout-debug-mode nilecb-layout-debug-mode1132,52313
(defvar ecb-frame nilecb-frame1150,53175
(defvar ecb-edit-window nilecb-edit-window1155,53379
(defvar ecb-last-edit-window-with-point nilecb-last-edit-window-with-point1159,53531
(defvar ecb-last-source-buffer nilecb-last-source-buffer1163,53657
(defvar ecb-last-compile-buffer-in-compile-window nilecb-last-compile-buffer-in-compile-window1166,53754
(defvar ecb-compile-window nilecb-compile-window1169,53880
(defvar ecb-compile-window-height-lines nilecb-compile-window-height-lines1179,54410
(defvar ecb-compile-window-was-selected-before-command nilecb-compile-window-was-selected-before-command1186,54751
(defvar ecb-layout-default-window-sizes nilecb-layout-default-window-sizes1190,54898
(defvar ecb-windows-hidden nilecb-windows-hidden1195,55166
(defconst ecb-windows-hidden-all-value 'all)ecb-windows-hidden-all-value1199,55304
(defconst ecb-windows-hidden-none-value 'none)ecb-windows-hidden-none-value1200,55349
(defvar ecb-windows-hidden-state ecb-windows-hidden-none-valueecb-windows-hidden-state1202,55397
(defun ecb-windows-all-hidden (&optional hidden-state)ecb-windows-all-hidden1222,56374
(defun ecb-windows-all-displayed (&optional hidden-state)ecb-windows-all-displayed1242,57313
(defun ecb-windows-hidden-state-list (&optional hidden-state)ecb-windows-hidden-state-list1254,57885
(defvar ecb-special-ecb-buffers-of-current-layout nilecb-special-ecb-buffers-of-current-layout1274,58706
(defvar ecb-ecb-buffer-name-selected-before-command nilecb-ecb-buffer-name-selected-before-command1278,58872
(defvar ecb-layout-prevent-handle-ecb-window-selection nilecb-layout-prevent-handle-ecb-window-selection1282,59079
(defun ecb-canonical-ecb-windows-list (&optional winlist)ecb-canonical-ecb-windows-list1286,59215
(defun ecb-canonical-edit-windows-list (&optional winlist)ecb-canonical-edit-windows-list1305,60199
(defun ecb-canonical-residual-windows-list (&optional winlist)ecb-canonical-residual-windows-list1322,61239
(defvar ecb-last-major-mode nil)ecb-last-major-mode1342,62307
(defecb-autocontrol/sync-function ecb-handle-major-mode-visibilty nil nil nilecb-handle-major-mode-visibilty1344,62341
(defun ecb-initialize-layout ()ecb-initialize-layout1393,65243
(defun ecb-layout-debug-error (&rest args)ecb-layout-debug-error1411,66034
(defun ecb-compile-window-live-p (&optional display-msg)ecb-compile-window-live-p1419,66366
(defun ecb-get-compile-window-buffer ()ecb-get-compile-window-buffer1431,66853
(defun ecb-edit-window-live-p ()ecb-edit-window-live-p1439,67222
(defun ecb-window-live-p (buffer-name)ecb-window-live-p1443,67307
(defecb-advice-set ecb-layout-basic-adviced-functionsecb-layout-basic-adviced-functions1449,67571
(defecb-advice delete-frame around ecb-layout-basic-adviced-functionsdelete-frame1452,67697
(defecb-advice compilation-set-window-height around ecb-layout-basic-adviced-functionscompilation-set-window-height1477,69140
(defecb-advice scroll-other-window around ecb-layout-basic-adviced-functionsscroll-other-window1527,72111
(defun ecb-toggle-scroll-other-window-scrolls-compile (&optional arg)ecb-toggle-scroll-other-window-scrolls-compile1579,74521
(defun ecb-edit-window-splitted (&optional edit-windows-list)ecb-edit-window-splitted1596,75325
(defvar ecb-temp-buffer-shrink-to-fit nilecb-temp-buffer-shrink-to-fit1615,76298
(defun ecb-display-buffer-xemacs (buffer &optional not-this-window-pecb-display-buffer-xemacs1899,91065
(defun ecb-temp-buffer-show-function-emacs (buf)ecb-temp-buffer-show-function-emacs2244,109167
(defvar ecb-temp-buffer-show-function-old nil)ecb-temp-buffer-show-function-old2281,111217
(defun ecb-enable-own-temp-buffer-show-function (arg)ecb-enable-own-temp-buffer-show-function2283,111265
(defmacro ecb-with-original-basic-functions (&rest body)ecb-with-original-basic-functions2301,111960
(defecb-advice-set ecb-permanent-adviced-layout-functionsecb-permanent-adviced-layout-functions2309,112413
(defmacro ecb-with-original-permanent-layout-functions (&rest body)ecb-with-original-permanent-layout-functions2314,112587
(defun ecb-where-is-point (&optional win-list)ecb-where-is-point2322,113105
(defun ecb-point-in-ecb-window-number (&optional ecb-windows-list)ecb-point-in-ecb-window-number2382,115931
(defun ecb-point-in-edit-window-number (&optional edit-windows-list)ecb-point-in-edit-window-number2395,116693
(defmacro ecb-when-point-in-edit-window-ecb-windows-visible (&rest body)ecb-when-point-in-edit-window-ecb-windows-visible2407,117462
(defun ecb-display-source (source other-edit-window)ecb-display-source2414,117750
(defun ecb-get-edit-window-by-number (edit-win-nr &optional edit-win-list)ecb-get-edit-window-by-number2428,118396
(defun ecb-get-window-by-number (win-nr &optional win-list)ecb-get-window-by-number2435,118817
(defun ecb-get-ecb-window-by-number (ecb-win-nr &optional ecb-win-list)ecb-get-ecb-window-by-number2442,119173
(defun ecb-combine-ecb-button/edit-win-nr (ecb-button edit-window-nr)ecb-combine-ecb-button/edit-win-nr2449,119581
(defun ecb-get-edit-window (other-edit-window)ecb-get-edit-window2459,119932
(defun ecb-point-in-compile-window ()ecb-point-in-compile-window2486,121172
(defun ecb-point-in-ecb-tree-buffer ()ecb-point-in-ecb-tree-buffer2492,121403
(defun ecb-point-in-dedicated-special-buffer ()ecb-point-in-dedicated-special-buffer2507,122228
(defun ecb-buffer-is-dedicated-special-buffer-p (buffer-or-name)ecb-buffer-is-dedicated-special-buffer-p2517,122772
(defun ecb-goto-ecb-window (ecb-buffer-name)ecb-goto-ecb-window2525,123090
(defun ecb-goto-window-edit-last ()ecb-goto-window-edit-last2549,124378
(defun ecb-goto-window-edit1 ()ecb-goto-window-edit12559,124740
(defun ecb-goto-window-edit2 ()ecb-goto-window-edit22567,124963
(defun ecb-goto-window-edit-by-smart-selection (&optional use-immediate-completion)ecb-goto-window-edit-by-smart-selection2575,125200
(defun ecb-goto-window-ecb-by-smart-selection (&optional use-immediate-completion)ecb-goto-window-ecb-by-smart-selection2599,126608
(defun ecb-goto-window-by-smart-selection--internal (win-list &optional use-immediate-completion)ecb-goto-window-by-smart-selection--internal2623,128066
(defun ecb-goto-window-compilation ()ecb-goto-window-compilation2678,131473
(defun ecb-select-ecb-frame ()ecb-select-ecb-frame2688,131771
(defun ecb-select-edit-window (&optional edit-window-number)ecb-select-edit-window2697,132049
(defun ecb-layout-window-sync (&optional ecb-window-list)ecb-layout-window-sync2723,133501
(defecb-autocontrol/sync-function ecb-layout-pre-command-hook nil nil nilecb-layout-pre-command-hook2753,135016
(defvar ecb-layout-prevent-handle-compile-window-selection nil)ecb-layout-prevent-handle-compile-window-selection2782,136543
(defvar ecb-last-edit-area-creators nil)ecb-last-edit-area-creators2783,136607
(defecb-autocontrol/sync-function ecb-layout-post-command-hook nil nil nilecb-layout-post-command-hook2784,136648
(defun ecb-check-for-special-buffer (buffer-or-name)ecb-check-for-special-buffer2875,141849
(defun ecb-check-for-same-window-buffer (buffer-or-name)ecb-check-for-same-window-buffer2909,143337
(defvar ecb-layout-temporary-dedicated-windows nilecb-layout-temporary-dedicated-windows2953,145120
(defecb-advice display-buffer around ecb-layout-basic-adviced-functionsdisplay-buffer3001,147431
(defun ecb-get-other-window-minibuf-active (win-listecb-get-other-window-minibuf-active3473,176542
(defun ecb-get-other-window-smart (win-listecb-get-other-window-smart3503,177942
(defun ecb-get-other-window (nth-window)ecb-get-other-window3553,180275
(defecb-advice other-window around ecb-layout-basic-adviced-functionsother-window3627,184224
(defecb-advice delete-windows-on around ecb-layout-basic-adviced-functionsdelete-windows-on3642,184779
(defvar ecb-edit-area-creators nil)ecb-edit-area-creators3695,187480
(defsubst ecb-edit-area-creators-init ()ecb-edit-area-creators-init3697,187517
(defsubst ecb-edit-area-creators-add (creator)ecb-edit-area-creators-add3700,187596
(defun ecb-restore-edit-area ()ecb-restore-edit-area3703,187724
(defun ecb-edit-area-creators-number-of-edit-windows ()ecb-edit-area-creators-number-of-edit-windows3709,187941
(defecb-advice delete-window before ecb-permanent-adviced-layout-functionsdelete-window3720,188496
(defecb-advice delete-window around ecb-layout-basic-adviced-functionsdelete-window3749,190163
(defecb-advice delete-other-windows before ecb-permanent-adviced-layout-functionsdelete-other-windows3821,194146
(defecb-advice delete-other-windows around ecb-layout-basic-adviced-functionsdelete-other-windows3845,195569
(defecb-advice split-window-horizontally around ecb-layout-basic-adviced-functionssplit-window-horizontally3933,200332
(defecb-advice split-window-vertically around ecb-layout-basic-adviced-functionssplit-window-vertically3952,201234
(defecb-advice split-window before ecb-permanent-adviced-layout-functionssplit-window3969,201988
(defecb-advice split-window around ecb-layout-basic-adviced-functionssplit-window3996,203528
(defecb-advice switch-to-buffer-other-window around ecb-layout-basic-adviced-functionsswitch-to-buffer-other-window4032,205264
(defecb-advice switch-to-buffer around ecb-layout-basic-adviced-functionsswitch-to-buffer4074,207344
(defecb-advice other-window-for-scrolling around ecb-layout-basic-adviced-functionsother-window-for-scrolling4127,210294
(defecb-advice walk-windows around ecb-always-disabled-adviceswalk-windows4155,211616
(defecb-advice balance-windows around ecb-layout-basic-adviced-functionsbalance-windows4181,213010
(defun ecb-split-hor (amount &optional dont-switch-window use-frame)ecb-split-hor4207,214244
(defun ecb-split-hor-abs (amount &optional dont-switch-window)ecb-split-hor-abs4217,214817
(defun ecb-split-ver (amount &optional dont-switch-window use-frame)ecb-split-ver4222,214987
(defun ecb-split-ver-abs (amount &optional dont-switch-window)ecb-split-ver-abs4232,215563
(defun ecb-dedicated-special-buffers ()ecb-dedicated-special-buffers4244,215957
(defun ecb-get-current-visible-ecb-buffers (&optional ecb-window-list)ecb-get-current-visible-ecb-buffers4261,216803
(defun ecb-buffer-is-visible-ecb-buffer-p (buffer-or-name)ecb-buffer-is-visible-ecb-buffer-p4272,217373
(defun ecb-buffer-is-ecb-buffer-of-current-layout-p (buffer-or-name)ecb-buffer-is-ecb-buffer-of-current-layout-p4279,217696
(defun ecb-buffer-is-the-only-visible-ecb-buffer-p (buffer-or-name)ecb-buffer-is-the-only-visible-ecb-buffer-p4287,218142
(defun ecb-set-minor-mode-text ()ecb-set-minor-mode-text4294,218505
(defun ecb-toggle-ecb-windows (&optional arg)ecb-toggle-ecb-windows4305,219055
(defun ecb-hide-ecb-windows ()ecb-hide-ecb-windows4347,221192
(defun ecb-show-ecb-windows ()ecb-show-ecb-windows4352,221318
(defvar ecb-current-maximized-ecb-buffer-name nilecb-current-maximized-ecb-buffer-name4358,221431
(defun ecb-redraw-layout-preserving-compwin-state ()ecb-redraw-layout-preserving-compwin-state4365,221736
(defun ecb-toggle-maximize-ecb-window-with-mouse ()ecb-toggle-maximize-ecb-window-with-mouse4373,222023
(defun ecb-toggle-maximize-ecb-window (&optional ecb-buffer-name)ecb-toggle-maximize-ecb-window4378,222188
(defun ecb-undo-maximize-ecb-buffer (&optional preserve-selected-window)ecb-undo-maximize-ecb-buffer4391,222909
(defun ecb-maximized-ecb-buffer-name ()ecb-maximized-ecb-buffer-name4410,223765
(defun ecb-buffer-is-maximized-p (&optional ecb-buffer-name)ecb-buffer-is-maximized-p4414,223931
(defun ecb-maximize-ecb-buffer (ecb-buffer-name &optional preserve-selected-window)ecb-maximize-ecb-buffer4454,226115
(defvar ecb-cycle-ecb-buffer-state nilecb-cycle-ecb-buffer-state4485,227804
(defun ecb-cycle-maximized-ecb-buffers ()ecb-cycle-maximized-ecb-buffers4491,228128
(defun ecb-window-configuration-data ()ecb-window-configuration-data4517,229301
(defmacro ecb-with-dedicated-window (&rest body)ecb-with-dedicated-window4558,231505
(defmacro defecb-window-dedicator-to-ecb-bufferdefecb-window-dedicator-to-ecb-buffer4568,231934
(defvar ecb-default-buffer-name " *ECB-default-buffer*"ecb-default-buffer-name4611,233848
(defecb-window-dedicator-to-ecb-buffer ecb-set-default-ecb-buffer ecb-default-buffer-name nilecb-set-default-ecb-buffer4614,233947
(defun ecb-delete-window-ecb-windows-left (window edit-win-list)ecb-delete-window-ecb-windows-left4642,235067
(defalias 'ecb-delete-window-ecb-windows-left-rightecb-delete-window-ecb-windows-left-right4659,235888
(defun ecb-delete-window-ecb-windows-right (window edit-win-list)ecb-delete-window-ecb-windows-right4664,236017
(defun ecb-delete-window-ecb-windows-top (window edit-win-list)ecb-delete-window-ecb-windows-top4669,236140
(defconst ecb-layout-types '(left right top left-right))ecb-layout-types4680,236635
(defun ecb-layout-type-p (type &optional err)ecb-layout-type-p4682,236693
(defvar ecb-available-layouts nilecb-available-layouts4689,236897
(defun ecb-available-layouts-of-type (type)ecb-available-layouts-of-type4696,237232
(defun ecb-available-layouts-member-p (layout-name)ecb-available-layouts-member-p4707,237750
(defun ecb-available-layouts-add (name type)ecb-available-layouts-add4712,237958
(defun ecb-available-layouts-remove (name)ecb-available-layouts-remove4721,238355
(defun ecb-get-layout-type (&optional name)ecb-get-layout-type4730,238720
(defun ecb-layout-left-p (&optional name)ecb-layout-left-p4735,238905
(defun ecb-layout-leftright-p (&optional name)ecb-layout-leftright-p4739,239061
(defun ecb-layout-right-p (&optional name)ecb-layout-right-p4743,239234
(defun ecb-layout-top-p (&optional name)ecb-layout-top-p4747,239393
(defmacro ecb-layout-define (name type doc &rest create-code)ecb-layout-define4752,239585
(defun ecb-layout-undefine (name)ecb-layout-undefine4887,246180
(defun ecb-choose-layout-name (layout-list require-match)ecb-choose-layout-name4896,246560
(defun ecb-layout-switch (name)ecb-layout-switch4908,247131
(defun ecb-change-layout (&optional preselect-type)ecb-change-layout4917,247457
(defun ecb-show-layout-help ()ecb-show-layout-help4937,248404
(defvar ecb-window-config-cache-size 200)ecb-window-config-cache-size4952,249000
(defvar ecb-window-config-cache nilecb-window-config-cache4953,249042
(defun ecb-window-config-cache-add (ecb-window-config)ecb-window-config-cache-add4958,249274
(defun ecb-window-config-cache-get (emacs-window-config)ecb-window-config-cache-get4965,249643
(defun ecb-window-config-cache-get-latest ()ecb-window-config-cache-get-latest4974,250131
(defun ecb-window-config-cache-init ()ecb-window-config-cache-init4980,250374
(defun ecb-window-config-cache-clear ()ecb-window-config-cache-clear4987,250655
(defun ecb-window-configuration-invalidp (window-config)ecb-window-configuration-invalidp4993,250791
(defecb-advice current-window-configuration after ecb-layout-basic-adviced-functionscurrent-window-configuration5003,251219
(defecb-advice set-window-configuration after ecb-layout-basic-adviced-functionsset-window-configuration5038,252926
(defun ecb-current-window-configuration ()ecb-current-window-configuration5085,255479
(defun ecb-set-window-configuration (ecb-window-config)ecb-set-window-configuration5091,255658
(defmacro ecb-save-window-excursion (&rest body)ecb-save-window-excursion5097,255933
(defun ecb-redraw-layout (&optional arg)ecb-redraw-layout5136,257533
(defecb-autocontrol/sync-function ecb-repair-only-ecb-window-layout nil nil nilecb-repair-only-ecb-window-layout5200,260440
(defun ecb-get-ecb-window-location (&optional ecb-window residual-window)ecb-get-ecb-window-location5278,264887
(defun ecb-delete-ecb-windows (side &optional residual-window except-ecb-window-or-buffer)ecb-delete-ecb-windows5307,266355
(defun ecb-draw-compile-window (&optional height)ecb-draw-compile-window5354,269025
(defun ecb-redraw-layout-full (&optional no-buffer-sync ecb-windows-creatorecb-redraw-layout-full5382,270412
(defun ecb-redraw-layout-quickly ()ecb-redraw-layout-quickly5701,286811
(defvar ecb-toggle-layout-state 0ecb-toggle-layout-state5711,287197
(defun ecb-toggle-layout (&optional last-one)ecb-toggle-layout5713,287293
(defun ecb-store-window-sizes (&optional fix)ecb-store-window-sizes5736,288503
(defun ecb-restore-window-sizes ()ecb-restore-window-sizes5770,290442
(defun ecb-restore-default-window-sizes ()ecb-restore-default-window-sizes5777,290747
(defun ecb-get-window-size (window &optional fix ref-size)ecb-get-window-size5787,291236
(defun ecb-get-ecb-window-sizes (&optional fix ecb-win-list)ecb-get-ecb-window-sizes5809,292264
(defun ecb-set-window-size (window size &optional ref-size)ecb-set-window-size5838,293849
(defun ecb-set-ecb-window-sizes (window-sizes)ecb-set-ecb-window-sizes5869,295624
(defun ecb-get-edit-area-size (&optional win-list)ecb-get-edit-area-size5914,298189
(defvar ecb-compile-window-specified-height-config nilecb-compile-window-specified-height-config5969,301109
(defvar ecb-use-window-config-for-compwin-shrink nil)ecb-use-window-config-for-compwin-shrink5978,301578
(defun ecb-store-compile-window-specified-height-config ()ecb-store-compile-window-specified-height-config5980,301633
(defun ecb-reset-compile-window-specified-height-config ()ecb-reset-compile-window-specified-height-config5995,302452
(defalias 'ecb-toggle-enlarged-compilation-windowecb-toggle-enlarged-compilation-window6008,303115
(defun ecb-toggle-compile-window-height (&optional arg)ecb-toggle-compile-window-height6011,303203
(defun ecb-set-compile-window-height ()ecb-set-compile-window-height6132,310709
(defun ecb-compile-window-state ()ecb-compile-window-state6152,311590
(defun ecb-toggle-compile-window (&optional arg)ecb-toggle-compile-window6163,311985

ecb_snap-20110605/ecb-eshell.el,1556
(defgroup ecb-eshell nilecb-eshell89,3205
(defcustom ecb-eshell-enlarge-when-eshell tecb-eshell-enlarge-when-eshell94,3322
(defcustom ecb-eshell-fit-window-to-command-output tecb-eshell-fit-window-to-command-output100,3527
(defcustom ecb-eshell-auto-activate nilecb-eshell-auto-activate108,3850
(defcustom ecb-eshell-buffer-sync 'basicecb-eshell-buffer-sync117,4246
(defcustom ecb-eshell-buffer-sync-delay 'basicecb-eshell-buffer-sync-delay142,5291
(defvar ecb-eshell-pre-command-point nilecb-eshell-pre-command-point165,6366
(defvar ecb-eshell-buffer-list nilecb-eshell-buffer-list168,6473
(defecb-advice-set ecb-eshell-adviced-functionsecb-eshell-adviced-functions174,6662
(defecb-advice eshell around ecb-eshell-adviced-functionseshell178,6796
(defun ecb-eshell-activate-integration ()ecb-eshell-activate-integration248,10245
(defun ecb-eshell-deactivate-integration ()ecb-eshell-deactivate-integration253,10498
(defecb-autocontrol/sync-function ecb-eshell-buffer-sync nil ecb-eshell-buffer-sync tecb-eshell-buffer-sync261,10945
(defmacro ecb-eshell-save-buffer-history (&rest body)ecb-eshell-save-buffer-history305,13149
(defun ecb-eshell-recenter(&optional display-errors)ecb-eshell-recenter317,13745
(defun ecb-eshell-precommand-hook ()ecb-eshell-precommand-hook333,14381
(defun ecb-eshell-fit-window-to-output()ecb-eshell-fit-window-to-output338,14521
(defun ecb-eshell-auto-activate-hook()ecb-eshell-auto-activate-hook379,16764
(defun ecb-eshell-window-size-change(frame)ecb-eshell-window-size-change384,16947

ecb_snap-20110605/ecb-method-browser.el,16676
(defvar ecb-selected-tag nilecb-selected-tag70,2147
(defvar ecb-methods-root-node nilecb-methods-root-node74,2266
(defconst ecb-methods-nodetype-tag 0)ecb-methods-nodetype-tag77,2341
(defconst ecb-methods-nodetype-bucket 1)ecb-methods-nodetype-bucket78,2379
(defconst ecb-methods-nodetype-externtag 2)ecb-methods-nodetype-externtag79,2420
(defun ecb-method-browser-initialize-caches ()ecb-method-browser-initialize-caches81,2465
(defun ecb-method-browser-initialize (&optional no-caches)ecb-method-browser-initialize85,2599
(defgroup ecb-methods nilecb-methods99,3157
(defgroup ecb-non-semantic nilecb-non-semantic105,3280
(defcustom ecb-methods-buffer-name " *ECB Methods*"ecb-methods-buffer-name111,3405
(defcustom ecb-auto-expand-tag-tree 'expand-spececb-auto-expand-tag-tree125,3904
(defcustom ecb-auto-expand-tag-tree-collapse-other nilecb-auto-expand-tag-tree-collapse-other145,4888
(defcustom ecb-expand-methods-switch-off-auto-expand tecb-expand-methods-switch-off-auto-expand162,5839
(defcustom ecb-auto-update-methods-after-save nilecb-auto-update-methods-after-save178,6591
(defcustom ecb-font-lock-tags tecb-font-lock-tags184,6756
(defsubst ecb-font-lock-tags ()ecb-font-lock-tags195,7169
(defcustom ecb-tag-jump-sets-mark tecb-tag-jump-sets-mark200,7336
(defconst ecb-tag->text-functionsecb-tag->text-functions206,7520
(defcustom ecb-tag-display-function '((default . ecb-format-tag-uml-prototype))ecb-tag-display-function219,8049
(defun ecb-get-tag-display-function ()ecb-get-tag-display-function294,11968
(defcustom ecb-type-tag-display nilecb-type-tag-display302,12312
(defun ecb-get-face-for-type-tag (type-specifier)ecb-get-face-for-type-tag389,17239
(defun ecb-get-remove-specifier-flag-for-type-tag (type-specifier)ecb-get-remove-specifier-flag-for-type-tag399,17680
(defcustom ecb-type-tag-expansionecb-type-tag-expansion408,18154
(defun ecb-type-tag-expansion (type-specifier)ecb-type-tag-expansion462,21095
(defun ecb-get-type-specifier (tag)ecb-get-type-specifier473,21664
(defcustom ecb-find-external-tag-functionsecb-find-external-tag-functions562,26976
(defcustom ecb-display-image-icons-for-semantic-tags tecb-display-image-icons-for-semantic-tags647,31732
(defsubst ecb-use-images-for-semantic-tags ()ecb-use-images-for-semantic-tags654,32015
(defcustom ecb-post-process-semantic-taglistecb-post-process-semantic-taglist659,32189
(defcustom ecb-default-tag-filter nilecb-default-tag-filter687,33634
(defcustom ecb-show-only-positioned-tags nilecb-show-only-positioned-tags722,35620
(defcustom ecb-force-reparse-when-semantic-idle-scheduler-off nilecb-force-reparse-when-semantic-idle-scheduler-off737,36309
(defcustom ecb-show-tagsecb-show-tags772,38303
(defun ecb-get-show-tags-list ()ecb-get-show-tags-list895,43384
(defcustom ecb-methods-separate-prototypes tecb-methods-separate-prototypes903,43734
(defcustom ecb-methods-filter-replace-existing 'neverecb-methods-filter-replace-existing919,44658
(defcustom ecb-methods-nodes-expand-spec '(type variable function sectionecb-methods-nodes-expand-spec936,45601
(defcustom ecb-methods-nodes-collapse-spec 'allecb-methods-nodes-collapse-spec963,46925
(defcustom ecb-methods-show-node-info '(if-too-long . name+type)ecb-methods-show-node-info974,47378
(defcustom ecb-exclude-parents-regexps nilecb-exclude-parents-regexps1000,48546
(defsubst ecb-check-parent-for-exclude (parent-name)ecb-check-parent-for-exclude1013,49053
(defcustom ecb-highlight-tag-with-point 'highlight-scrollecb-highlight-tag-with-point1016,49174
(defcustom ecb-highlight-tag-with-point-delay 0.25ecb-highlight-tag-with-point-delay1036,50035
(defvar ecb-method-overlay (ecb-make-overlay 1 1)ecb-method-overlay1060,51209
(defcustom ecb-tag-visit-post-actions '((default . (ecb-tag-visit-smart-tag-startecb-tag-visit-post-actions1065,51383
(defun ecb-tag-visit-function-member-p (fnc)ecb-tag-visit-function-member-p1116,54249
(defcustom ecb-methods-menu-user-extension nilecb-methods-menu-user-extension1120,54437
(defcustom ecb-methods-menu-user-extension-function 'ignoreecb-methods-menu-user-extension-function1134,55040
(defcustom ecb-methods-menu-sorter nilecb-methods-menu-sorter1151,55860
(defcustom ecb-methods-buffer-after-create-hook nilecb-methods-buffer-after-create-hook1215,58720
(defcustom ecb-process-non-semantic-files (if (locate-library "speedbar")ecb-process-non-semantic-files1225,59154
(defcustom ecb-non-semantic-parsing-function nilecb-non-semantic-parsing-function1235,59492
(defcustom ecb-non-semantic-methods-initial-expand nilecb-non-semantic-methods-initial-expand1266,61155
(defcustom ecb-auto-save-before-etags-methods-rebuild tecb-auto-save-before-etags-methods-rebuild1277,61596
(defcustom ecb-non-semantic-exclude-modes '(sh-mode fundamental-mode text-mode)ecb-non-semantic-exclude-modes1296,62603
(defcustom ecb-rebuild-non-semantic-methods-before-hook nilecb-rebuild-non-semantic-methods-before-hook1312,63486
(defun ecb-enter-debugger (&rest error-args)ecb-enter-debugger1334,64419
(defun ecb-semantic-assert-valid-tag (tag &optional no-reparse)ecb-semantic-assert-valid-tag1345,64886
(defun ecb-semantic-tag-buffer (tag)ecb-semantic-tag-buffer1427,69562
(defun ecb-semantic-tag-start (tag)ecb-semantic-tag-start1434,69850
(defun ecb-semantic-tag-end (tag)ecb-semantic-tag-end1442,70137
(defun ecb-semantic-current-nonterminal ()ecb-semantic-current-nonterminal1454,70679
(defun ecb-goto-window-methods ()ecb-goto-window-methods1464,71066
(defun ecb-maximize-window-methods ()ecb-maximize-window-methods1473,71427
(defecb-window-dedicator-to-ecb-buffer ecb-set-methods-buffer ecb-methods-buffer-name tecb-set-methods-buffer1483,71876
(defun ecb-create-node (parent-node display name data type)ecb-create-node1505,72943
(defun ecb-get-tag-type-display (tag-type)ecb-get-tag-type-display1517,73280
(defun ecb-get-tag-parent-names (parents)ecb-get-tag-parent-names1528,73567
(defun ecb-get-tag-parents (tag)ecb-get-tag-parents1544,74147
(defun ecb-get-tag-name (tag &optional parent-tag)ecb-get-tag-name1553,74497
(defun ecb-find-add-tag-bucket (node type display sort-method bucketsecb-find-add-tag-bucket1564,74957
(defsubst ecb-forbid-tag-display (tag)ecb-forbid-tag-display1580,75796
(defsubst ecb-allow-tag-display (tag)ecb-allow-tag-display1583,75891
(defsubst ecb-tag-forbidden-display-p (tag)ecb-tag-forbidden-display-p1586,75985
(defsubst ecb-show-at-least-one-tag-p (taglist)ecb-show-at-least-one-tag-p1589,76081
(defun ecb-apply-user-filter-to-tags (taglist)ecb-apply-user-filter-to-tags1601,76471
(defun ecb-tag-generate-node-name (text-name first-chars icon-name)ecb-tag-generate-node-name1643,78644
(defun ecb-add-tag-bucket (node bucket display sort-methodecb-add-tag-bucket1653,79059
(defconst ecb-tag-image-name-alias-alistecb-tag-image-name-alias-alist1707,81979
(defsubst ecb-get-icon-for-tag (abstract-p static-p type protection)ecb-get-icon-for-tag1860,93859
(defun ecb-displayed-tag-name (tag &optional parent-tag)ecb-displayed-tag-name1874,94526
(defun ecb-children-tags (parent-tag)ecb-children-tags1905,96203
(defun ecb-update-tag-node (tag node &optional parent-tag no-bucketize)ecb-update-tag-node1922,96983
(defun ecb-post-process-taglist (taglist)ecb-post-process-taglist1943,98000
(defun ecb-apply-tag-table-filters (taglist)ecb-apply-tag-table-filters1957,98657
(defun ecb-methods-filter-perform-current-type (filter taglist)ecb-methods-filter-perform-current-type1968,99081
(defun ecb-group-function-tags-with-parents (taglist)ecb-group-function-tags-with-parents2004,101063
(defun ecb-filter-c-prototype-tags (taglist)ecb-filter-c-prototype-tags2014,101543
(defvar ecb-methods-user-filter-alist nilecb-methods-user-filter-alist2043,102884
(defun ecb-methods-filter-by-prot (inverse source-buffer &optional prot)ecb-methods-filter-by-prot2053,103347
(defun ecb-methods-filter-by-tag-class (inverse source-bufferecb-methods-filter-by-tag-class2065,103911
(defun ecb-methods-filter-by-regexp (inverse source-buffer &optional regexp)ecb-methods-filter-by-regexp2093,105374
(defun ecb-methods-filter-by-function (inverse source-buffer &optional fcn-name)ecb-methods-filter-by-function2113,106405
(defun ecb-get-type-node-of-node (node)ecb-get-type-node-of-node2144,107974
(defun ecb-get-type-name-hierarchy-of-current-node ()ecb-get-type-name-hierarchy-of-current-node2159,108590
(defun ecb-get-type-tag-of-tag (&optional tag table always-parent-type)ecb-get-type-tag-of-tag2180,109756
(defun ecb-get-type-name-hierarchy-of-current-tag (&optional tag)ecb-get-type-name-hierarchy-of-current-tag2232,112643
(defun ecb-methods-filter-by-current-type (inverse source-buffer &optionalecb-methods-filter-by-current-type2250,113656
(defun ecb-get-source-buffer-for-tag-filter ()ecb-get-source-buffer-for-tag-filter2288,115998
(defun ecb-methods-filter-inverse ()ecb-methods-filter-inverse2300,116548
(defun ecb-methods-filter-protection (&optional inverse)ecb-methods-filter-protection2306,116756
(defun ecb-methods-filter-tagclass (&optional inverse)ecb-methods-filter-tagclass2313,117063
(defun ecb-methods-filter-current-type ()ecb-methods-filter-current-type2320,117366
(defun ecb-methods-filter-regexp (&optional inverse)ecb-methods-filter-regexp2326,117592
(defun ecb-methods-filter-function (&optional inverse)ecb-methods-filter-function2333,117889
(defun ecb-methods-filter-nofilter ()ecb-methods-filter-nofilter2340,118192
(defun ecb-methods-filter-delete-last ()ecb-methods-filter-delete-last2346,118388
(defun ecb-methods-filter (&optional inverse)ecb-methods-filter2352,118601
(defun ecb-methods-filter-internal (inverse &optional filter-type)ecb-methods-filter-internal2416,122020
(defun ecb-methods-filter-apply (filtertype filter inverse filter-type-displayecb-methods-filter-apply2453,123923
(defun ecb-methods-filter-modeline-prefix (buffer-name sel-dir sel-source)ecb-methods-filter-modeline-prefix2518,127514
(defun ecb-default-tag-filter-for-current-source ()ecb-default-tag-filter-for-current-source2548,128985
(defun ecb-apply-default-tag-filter ()ecb-apply-default-tag-filter2562,129547
(defun ecb-find-file-hook ()ecb-find-file-hook2603,131515
(defun ecb-add-tags (node tags &optional parent-tag no-bucketize)ecb-add-tags2610,131770
(defun ecb-access-order (access)ecb-access-order2628,132499
(defun ecb-sort-tags (sort-method tags)ecb-sort-tags2641,132746
(defun ecb-add-tag-buckets (node parent-tag buckets &optional no-bucketize)ecb-add-tag-buckets2657,133244
(defvar ecb-partial-reparse-always-full-fetch nilecb-partial-reparse-always-full-fetch2709,136146
(defvar ecb-partial-reparse-debug nilecb-partial-reparse-debug2715,136374
(defun ecb-partial-reparse-debug (&rest args)ecb-partial-reparse-debug2718,136491
(defun ecb-update-after-partial-reparse (updated-tags)ecb-update-after-partial-reparse2725,136825
(defun ecb-semantic-active-for-file (filename)ecb-semantic-active-for-file2931,149701
(defun ecb-update-methods-after-saving ()ecb-update-methods-after-saving2939,149983
(defun ecb-fetch-semantic-tags (&optional full)ecb-fetch-semantic-tags2956,150818
(defvar ecb-method-buffer-needs-rebuild tecb-method-buffer-needs-rebuild2975,151694
(defvar ecb-method-buffer-rebuild-allowed-for-invisible-buffers nilecb-method-buffer-rebuild-allowed-for-invisible-buffers2980,151885
(defun ecb-update-methods-buffer--internal (&optional scroll-to-topecb-update-methods-buffer--internal2986,152103
(defvar ecb-tag-tree-cache nilecb-tag-tree-cache3082,157683
(defun ecb-clear-tag-tree-cache (&optional source-name)ecb-clear-tag-tree-cache3089,157998
(defvar ecb-current-post-processed-tag-table nilecb-current-post-processed-tag-table3097,158325
(defun ecb-get-current-tag-table ()ecb-get-current-tag-table3103,158656
(defun ecb-set-current-tag-table (table)ecb-set-current-tag-table3110,158995
(defun ecb-methods-get-data-store (key)ecb-methods-get-data-store3116,159174
(defun ecb-rebuild-methods-buffer-with-tagcache (updated-cacheecb-rebuild-methods-buffer-with-tagcache3122,159399
(defun ecb-save-without-auto-update-methods ()ecb-save-without-auto-update-methods3345,172370
(defun ecb-rebuild-methods-buffer-for-non-semantic ()ecb-rebuild-methods-buffer-for-non-semantic3350,172489
(defun ecb-rebuild-methods-buffer-for-semantic (&optional clear-cache)ecb-rebuild-methods-buffer-for-semantic3387,174333
(defun ecb-rebuild-methods-buffer (&optional clear-cache)ecb-rebuild-methods-buffer3402,174984
(defun ecb-rebuild-methods-buffer-fully (&optional clear-cache)ecb-rebuild-methods-buffer-fully3448,177285
(defvar ecb-auto-expand-tag-tree-old 'expand-spec)ecb-auto-expand-tag-tree-old3464,178121
(defun ecb-toggle-auto-expand-tag-tree (&optional arg)ecb-toggle-auto-expand-tag-tree3466,178173
(defun ecb-get-real-curr-tag ()ecb-get-real-curr-tag3496,179734
(defun ecb-try-highlight-tag (highlight-tag curr-tag table)ecb-try-highlight-tag3519,180772
(defvar ecb-tag-sync-do-nothing nilecb-tag-sync-do-nothing3623,187122
(defecb-autocontrol/sync-function ecb-tag-sync ecb-methods-buffer-name nil nilecb-tag-sync3629,187376
(defun ecb-string-make-singular (string)ecb-string-make-singular3712,192294
(defun ecb-methods-node-get-semantic-type (node)ecb-methods-node-get-semantic-type3718,192450
(defun ecb-expand-methods-nodes (&optional force-all)ecb-expand-methods-nodes3726,192760
(defun ecb-expand-methods-node-internal (node levelecb-expand-methods-node-internal3779,195342
(defun ecb-normalize-expand-spec (spec)ecb-normalize-expand-spec3843,198249
(defun ecb-search-type-tag-by-semantic-analyzer (tag)ecb-search-type-tag-by-semantic-analyzer3853,198536
(defun ecb-search-type-tag-by-semanticdb (tag)ecb-search-type-tag-by-semanticdb3867,199145
(defun ecb-next-tag-parent-node (node)ecb-next-tag-parent-node3881,199730
(defecb-tree-buffer-callback ecb-method-clicked ecb-methods-buffer-name selectecb-method-clicked3894,200185
(defun ecb-tag-visit-smart-tag-start (tag)ecb-tag-visit-smart-tag-start4018,207286
(defun ecb-start-of-tag-doc (tag)ecb-start-of-tag-doc4049,208506
(defun ecb-tag-visit-display-doc-start (tag)ecb-tag-visit-display-doc-start4062,209062
(defalias 'ecb-tag-visit-goto-doc-start 'ecb-tag-visit-display-doc-start)ecb-tag-visit-goto-doc-start4089,210266
(defvar ecb-unhighlight-hook-called nilecb-unhighlight-hook-called4091,210341
(defun ecb-unhighlight-tag-header ()ecb-unhighlight-tag-header4096,210537
(defun ecb-tag-visit-highlight-tag-header (tag)ecb-tag-visit-highlight-tag-header4106,210940
(defun ecb-display-tag (source tag &optional windowecb-display-tag4120,211429
(defun ecb-mouse-over-method-node (node &optional window no-message click-force)ecb-mouse-over-method-node4191,214892
(defun ecb-call-tag-visit-function (tag fcn)ecb-call-tag-visit-function4216,216082
(defun ecb-tag-visit-narrow-tag (tag)ecb-tag-visit-narrow-tag4231,216753
(defun ecb-tag-visit-recenter (tag)ecb-tag-visit-recenter4245,217248
(defun ecb-tag-visit-recenter-top (tag)ecb-tag-visit-recenter-top4258,217730
(defun ecb-methods-menu-activate-hs ()ecb-methods-menu-activate-hs4287,218891
(defvar ecb-common-methods-menu nilecb-common-methods-menu4375,222544
(defvar ecb-methods-tag-menu nil)ecb-methods-tag-menu4398,223524
(defvar ecb-methods-menu-title-creatorecb-methods-menu-title-creator4409,223994
(defun ecb-methods-menu-editwin-entries ()ecb-methods-menu-editwin-entries4428,224820
(defun ecb-methods-menu-tagfilter-entries ()ecb-methods-menu-tagfilter-entries4444,225513
(defun ecb-methods-menu-creator (tree-buffer-name node)ecb-methods-menu-creator4560,232210
(defconst ecb-methods-incr-searchpattern-node-prefixecb-methods-incr-searchpattern-node-prefix4592,233941
(defun ecb-compare-methods-buffer-node-data (l r)ecb-compare-methods-buffer-node-data4612,234944
(defun ecb-methods-node-mouse-highlighted-p (node)ecb-methods-node-mouse-highlighted-p4623,235300
(defecb-tree-buffer-creator ecb-create-methods-tree-buffer ecb-methods-buffer-nameecb-create-methods-tree-buffer4631,235709
(defun ecb-dump-semantic-toplevel ()ecb-dump-semantic-toplevel4700,239374
(defun ecb-dump-semantic-tags-internal (table parent source-buffer indent)ecb-dump-semantic-tags-internal4712,239854
(defecb-advice-set ecb-methods-browser-advicesecb-methods-browser-advices4730,240764
(defecb-advice make-indirect-buffer after ecb-methods-browser-advicesmake-indirect-buffer4733,240873
(defecb-advice custom-save-all around ecb-methods-browser-advicescustom-save-all4749,241636

ecb_snap-20110605/ecb-file-browser.el,20927
(defgroup ecb-directories nilecb-directories66,2045
(defgroup ecb-sources nilecb-sources71,2175
(defgroup ecb-history nilecb-history76,2298
(defgroup ecb-version-control nilecb-version-control81,2420
(defcustom ecb-source-path nilecb-source-path86,2544
(defcustom ecb-add-path-for-not-matching-files '(t . nil)ecb-add-path-for-not-matching-files114,3776
(defvar ecb-source-path-functions nilecb-source-path-functions141,5253
(defcustom ecb-display-default-dir-after-start tecb-display-default-dir-after-start148,5550
(defcustom ecb-show-sources-in-directories-buffer '("left7" "left13"ecb-show-sources-in-directories-buffer166,6479
(defcustom ecb-directories-show-node-info '(if-too-long . path)ecb-directories-show-node-info185,7346
(defcustom ecb-directories-update-speedbar 'autoecb-directories-update-speedbar216,8862
(defun ecb-show-sources-in-directories-buffer-p ()ecb-show-sources-in-directories-buffer-p260,11120
(defcustom ecb-cache-directory-contents '(("^/\\([^:/]*@\\)?\\([^@:/]*\\):.*" . 0)ecb-cache-directory-contents271,11503
(defcustom ecb-cache-directory-contents-not nilecb-cache-directory-contents-not321,13890
(defcustom ecb-ping-program "ping"ecb-ping-program344,15067
(defcustom ecb-ping-optionsecb-ping-options352,15354
(defcustom ecb-host-accessible-check-valid-time nilecb-host-accessible-check-valid-time379,16582
(defcustom ecb-prescan-directories-for-emptyness 'unless-remoteecb-prescan-directories-for-emptyness400,17787
(defcustom ecb-prescan-directories-exclude-regexps nilecb-prescan-directories-exclude-regexps436,19788
(defsubst ecb-directory-should-prescanned-p (dir)ecb-directory-should-prescanned-p444,20172
(defcustom ecb-grep-function (cond ((fboundp 'lgrep)ecb-grep-function454,20701
(defcustom ecb-grep-recursive-function (cond ((fboundp 'rgrep)ecb-grep-recursive-function484,22122
(defcustom ecb-after-directory-change-hook nilecb-after-directory-change-hook500,22778
(defcustom ecb-sources-perform-read-only-check 'unless-remoteecb-sources-perform-read-only-check521,23896
(defcustom ecb-read-only-check-exclude-regexps nilecb-read-only-check-exclude-regexps543,24984
(defsubst ecb-sources-read-only-check-p (dir)ecb-sources-read-only-check-p552,25409
(defcustom ecb-directories-buffer-name " *ECB Directories*"ecb-directories-buffer-name562,25938
(defcustom ecb-excluded-directories-regexps '("^\\(CVS\\|\\.[^xX]*\\)$")ecb-excluded-directories-regexps576,26457
(defsubst ecb-check-dir-exclude (dir)ecb-check-dir-exclude582,26747
(defcustom ecb-auto-expand-directory-tree 'bestecb-auto-expand-directory-tree585,26850
(defcustom ecb-sources-buffer-name " *ECB Sources*"ecb-sources-buffer-name600,27416
(defcustom ecb-sources-show-node-info '(if-too-long . name)ecb-sources-show-node-info613,27914
(defcustom ecb-sources-exclude-cvsignore nilecb-sources-exclude-cvsignore640,29184
(defcustom ecb-source-file-regexpsecb-source-file-regexps655,29852
(defcustom ecb-show-source-file-extension tecb-show-source-file-extension712,33129
(defcustom ecb-sources-sort-method 'nameecb-sources-sort-method717,33260
(defcustom ecb-sources-sort-ignore-case tecb-sources-sort-ignore-case732,33859
(defcustom ecb-history-buffer-name " *ECB History*"ecb-history-buffer-name738,34047
(defcustom ecb-history-exclude-file-regexps '("TAGS$" "semantic\\.cache$")ecb-history-exclude-file-regexps751,34545
(defsubst ecb-check-filename-for-history-exclude (filename)ecb-check-filename-for-history-exclude758,34915
(defcustom ecb-history-show-node-info '(always . name-path)ecb-history-show-node-info761,35045
(defcustom ecb-history-make-buckets 'directory-with-source-pathecb-history-make-buckets787,36260
(defcustom ecb-history-stick-indirect-buffers-to-basebuffer tecb-history-stick-indirect-buffers-to-basebuffer828,38306
(defcustom ecb-history-sort-method 'nameecb-history-sort-method851,39256
(defcustom ecb-history-sort-ignore-case tecb-history-sort-ignore-case876,40337
(defcustom ecb-kill-buffer-clears-history nilecb-kill-buffer-clears-history889,40837
(defcustom ecb-directories-menu-user-extensionecb-directories-menu-user-extension904,41527
(defcustom ecb-directories-menu-user-extension-function 'ignoreecb-directories-menu-user-extension-function949,43875
(defcustom ecb-sources-menu-user-extensionecb-sources-menu-user-extension965,44634
(defcustom ecb-sources-menu-user-extension-function 'ignoreecb-sources-menu-user-extension-function991,45815
(defcustom ecb-history-menu-user-extensionecb-history-menu-user-extension1007,46542
(defcustom ecb-history-menu-user-extension-function 'ignoreecb-history-menu-user-extension-function1038,48009
(defcustom ecb-directories-menu-sorter nilecb-directories-menu-sorter1054,48736
(defcustom ecb-sources-menu-sorter nilecb-sources-menu-sorter1072,49691
(defcustom ecb-history-menu-sorter nilecb-history-menu-sorter1088,50415
(defcustom ecb-directories-buffer-after-create-hook nilecb-directories-buffer-after-create-hook1104,51139
(defcustom ecb-sources-buffer-after-create-hook nilecb-sources-buffer-after-create-hook1117,51679
(defcustom ecb-history-buffer-after-create-hook nilecb-history-buffer-after-create-hook1127,52113
(defvar ecb-vc-needed-vc-package-available-pecb-vc-needed-vc-package-available-p1136,52546
(defcustom ecb-vc-enable-support (and ecb-vc-needed-vc-package-available-pecb-vc-enable-support1141,52788
(defcustom ecb-vc-directory-exclude-regexps nilecb-vc-directory-exclude-regexps1169,54264
(defsubst ecb-vc-directory-should-be-checked-p (dir)ecb-vc-directory-should-be-checked-p1178,54656
(defcustom ecb-vc-state-mapping '((up-to-date       . up-to-date)ecb-vc-state-mapping1189,55196
(defcustom ecb-vc-supported-backendsecb-vc-supported-backends1285,60750
(defconst ecb-directories-nodetype-directory 100)ecb-directories-nodetype-directory1383,65936
(defconst ecb-directories-nodetype-sourcefile 200)ecb-directories-nodetype-sourcefile1384,65986
(defconst ecb-directories-nodetype-sourcepath 300)ecb-directories-nodetype-sourcepath1385,66037
(defconst ecb-sources-nodetype-sourcefile 400)ecb-sources-nodetype-sourcefile1386,66088
(defconst ecb-history-nodetype-bucket 500)ecb-history-nodetype-bucket1387,66135
(defconst ecb-history-nodetype-filebuffer 600)ecb-history-nodetype-filebuffer1388,66178
(defconst ecb-history-nodetype-indirect-filebuffer 700)ecb-history-nodetype-indirect-filebuffer1389,66225
(defun ecb-files-and-subdirs-cache-add (dir cached-value)ecb-files-and-subdirs-cache-add1394,66329
(defun ecb-files-and-subdirs-cache-get (dir)ecb-files-and-subdirs-cache-get1399,66554
(defun ecb-files-and-subdirs-cache-remove (dir)ecb-files-and-subdirs-cache-remove1403,66745
(defun ecb-files-and-subdirs-cache-clear ()ecb-files-and-subdirs-cache-clear1407,66900
(defun ecb-files-and-subdirs-cache-dump (&optional no-nil-value)ecb-files-and-subdirs-cache-dump1411,67064
(defun ecb-directory-empty-cache-add (dir cached-value)ecb-directory-empty-cache-add1422,67526
(defun ecb-directory-empty-cache-get (dir)ecb-directory-empty-cache-get1427,67749
(defun ecb-directory-empty-cache-remove (dir)ecb-directory-empty-cache-remove1431,67919
(defun ecb-directory-empty-cache-remove-all (dir)ecb-directory-empty-cache-remove-all1435,68078
(defun ecb-directory-empty-cache-clear ()ecb-directory-empty-cache-clear1455,69019
(defun ecb-directory-empty-cache-dump (&optional no-nil-value)ecb-directory-empty-cache-dump1459,69169
(defun ecb-sources-cache-remove (dir)ecb-sources-cache-remove1470,69561
(defun ecb-sources-cache-add-full (dir cache-elem-full)ecb-sources-cache-add-full1474,69716
(defun ecb-sources-cache-add-filtered (dir cache-elem-filtered)ecb-sources-cache-add-filtered1487,70306
(defun ecb-sources-cache-get-full (dir)ecb-sources-cache-get-full1500,70932
(defun ecb-sources-cache-get-filtered (dir)ecb-sources-cache-get-filtered1506,71254
(defun ecb-sources-cache-clear ()ecb-sources-cache-clear1513,71599
(defun ecb-sources-cache-dump (&optional no-nil-value)ecb-sources-cache-dump1517,71733
(defun ecb-vc-cache-add-file (file state checked-buffer-names)ecb-vc-cache-add-file1526,72070
(defun ecb-vc-cache-add-dir (dir backend)ecb-vc-cache-add-dir1533,72363
(defun ecb-vc-cache-get (file)ecb-vc-cache-get1537,72482
(defun ecb-vc-cache-remove (file)ecb-vc-cache-remove1540,72573
(defun ecb-vc-cache-remove-files-of-dir (dir)ecb-vc-cache-remove-files-of-dir1544,72704
(defun ecb-vc-cache-clear ()ecb-vc-cache-clear1569,73817
(defun ecb-vc-cache-dump (&optional no-nil-value)ecb-vc-cache-dump1573,73936
(defun ecb-remote-path-cache-add (path remote-path)ecb-remote-path-cache-add1582,74267
(defun ecb-remote-path-cache-get (path)ecb-remote-path-cache-get1587,74496
(defun ecb-remote-path-cache-dump (&optional no-nil-value)ecb-remote-path-cache-dump1591,74670
(defun ecb-host-accessible-cache-add (host accessible-p)ecb-host-accessible-cache-add1600,75032
(defun ecb-host-accessible-cache-get (host valid-time)ecb-host-accessible-cache-get1605,75303
(defun ecb-host-accessible-cache-dump (&optional no-nil-value)ecb-host-accessible-cache-dump1617,75843
(defun ecb-file-browser-initialize-caches ()ecb-file-browser-initialize-caches1627,76244
(defun ecb-file-browser-initialize (&optional no-caches)ecb-file-browser-initialize1632,76402
(defun ecb-goto-window-directories ()ecb-goto-window-directories1640,76746
(defun ecb-goto-window-sources ()ecb-goto-window-sources1649,77113
(defun ecb-goto-window-history ()ecb-goto-window-history1658,77474
(defun ecb-maximize-window-directories ()ecb-maximize-window-directories1663,77626
(defun ecb-maximize-window-sources ()ecb-maximize-window-sources1673,78088
(defun ecb-maximize-window-history ()ecb-maximize-window-history1683,78537
(defecb-window-dedicator-to-ecb-buffer ecb-set-directories-bufferecb-set-directories-buffer1691,78880
(defecb-window-dedicator-to-ecb-buffer ecb-set-sources-bufferecb-set-sources-buffer1713,79989
(defecb-window-dedicator-to-ecb-buffer ecb-set-history-buffer ecb-history-buffer-name tecb-set-history-buffer1735,81060
(defecb-autocontrol/sync-function ecb-basic-buffer-sync nil ecb-basic-buffer-sync nilecb-basic-buffer-sync1739,81271
(defun ecb-expand-directory-tree (path node)ecb-expand-directory-tree1847,86965
(defun ecb-check-directory-for-caching (dir number-of-contents)ecb-check-directory-for-caching1871,88154
(defun ecb-check-directory-for-source-regexps (dir)ecb-check-directory-for-source-regexps1893,89066
(defun ecb-files-from-cvsignore (dir)ecb-files-from-cvsignore1900,89334
(defun ecb-check-directory-for-cvsignore-exclude (dir)ecb-check-directory-for-cvsignore-exclude1914,89888
(defun ecb-get-sources-sort-function (sort-method &optional ignore-case)ecb-get-sources-sort-function1918,90084
(defun ecb-get-files-and-subdirs (dir)ecb-get-files-and-subdirs1938,90864
(defun ecb-update-sources-buffer (dir-before-update)ecb-update-sources-buffer1980,93044
(defun ecb-sources-filter-by-ext (ext-str)ecb-sources-filter-by-ext2036,95922
(defun ecb-sources-filter-by-regexp (&optional regexp filter-display)ecb-sources-filter-by-regexp2053,96572
(defun ecb-sources-filter ()ecb-sources-filter2071,97402
(defun ecb-sources-filter-modeline-prefix (buffer-name sel-dir sel-source)ecb-sources-filter-modeline-prefix2092,98541
(defun ecb-apply-filter-to-sources-buffer (filter-regexp &optional filter-display)ecb-apply-filter-to-sources-buffer2101,99014
(defun ecb-normed-source-paths ()ecb-normed-source-paths2163,102407
(defun ecb-matching-source-paths (path-to-match &optional sorted)ecb-matching-source-paths2180,103224
(defun ecb-get-best-matching-source-path (path)ecb-get-best-matching-source-path2203,104367
(defun ecb-set-selected-directory (path &optional force)ecb-set-selected-directory2209,104606
(defun ecb-get-source-name (filename)ecb-get-source-name2300,109941
(defun ecb-select-source (&optional force)ecb-select-source2307,110161
(defvar ecb-history-filter nilecb-history-filter2326,110972
(defun ecb-reset-history-filter ()ecb-reset-history-filter2334,111341
(defun ecb-history-filter-reset-p ()ecb-history-filter-reset-p2341,111623
(defun ecb-indirect-buffers-of-buffer (&optional buffer-or-name)ecb-indirect-buffers-of-buffer2346,111724
(defun ecb-history-kill-buffer-clear (curr-buf)ecb-history-kill-buffer-clear2365,112651
(defun ecb-add-all-buffers-to-history ()ecb-add-all-buffers-to-history2391,114189
(defalias 'ecb-clear-history 'ecb-add-all-buffers-to-history)ecb-clear-history2405,114830
(defun ecb-history-content-all-dead-buffers-alist ()ecb-history-content-all-dead-buffers-alist2407,114893
(defun ecb-add-buffers-to-history-new (&optional no-dead-buffers ignore-buffername-list)ecb-add-buffers-to-history-new2421,115582
(defun ecb-history-filter-modeline-prefix (buffer-name sel-dir sel-source)ecb-history-filter-modeline-prefix2740,135196
(defun ecb-set-selected-source (source other-edit-windowecb-set-selected-source2748,135556
(defun ecb-update-directory-node (node)ecb-update-directory-node2781,137336
(defecb-tree-buffer-callback ecb-directory-expand ecb-directories-buffer-name expand nilecb-directory-expand2804,138539
(defun ecb-get-source-paths-from-functions ()ecb-get-source-paths-from-functions2809,138767
(defun ecb-update-directories-buffer ()ecb-update-directories-buffer2823,139170
(defsubst ecb-host-accessible-valid-time (host)ecb-host-accessible-valid-time2860,140742
(defun ecb-host-accessible-p (host)ecb-host-accessible-p2870,141202
(defun ecb-remote-path (path)ecb-remote-path2897,142276
(defun ecb-check-emptyness-of-dir (dir)ecb-check-emptyness-of-dir2948,144752
(defecb-stealthy ecb-stealthy-empty-dir-checkecb-stealthy-empty-dir-check2977,146031
(defun ecb-stealthy-read-only-check--internal (state)ecb-stealthy-read-only-check--internal3025,148808
(defecb-stealthy ecb-stealthy-ro-check-in-directories-bufecb-stealthy-ro-check-in-directories-buf3081,151458
(defecb-stealthy ecb-stealthy-ro-check-in-sources-bufecb-stealthy-ro-check-in-sources-buf3109,152475
(defecb-advice-set ecb-vc-advices ecb-vc-advices3120,152879
(defconst ecb-vc-state-icon-alist '((up-to-date . ("vc-up-to-date" "(u)"))ecb-vc-state-icon-alist3137,153822
(defsubst ecb-vc-get-image-name-for-vc-state (state)ecb-vc-get-image-name-for-vc-state3151,154771
(defsubst ecb-vc-get-ascii-icon-for-vc-state (state)ecb-vc-get-ascii-icon-for-vc-state3156,154966
(defconst ecb-vc-incr-searchpattern-node-prefixecb-vc-incr-searchpattern-node-prefix3162,155154
(defun ecb-vc-check-state (file tree-buffer-name vc-state-fcn)ecb-vc-check-state3171,155518
(defun ecb-vc-update-sources-cache (dir)ecb-vc-update-sources-cache3244,159664
(defun ecb-vc-dir-managed-by-CVS (directory)ecb-vc-dir-managed-by-CVS3298,162656
(defun ecb-vc-dir-managed-by-RCS (directory)ecb-vc-dir-managed-by-RCS3306,162909
(defun ecb-vc-dir-managed-by-SVN (directory)ecb-vc-dir-managed-by-SVN3314,163162
(defun ecb-vc-dir-managed-by-SCCS (directory)ecb-vc-dir-managed-by-SCCS3326,163663
(defun ecb-vc-dir-managed-by-BZR (directory) ecb-vc-dir-managed-by-BZR3340,164130
(defun ecb-vc-dir-managed-by-HG (directory)ecb-vc-dir-managed-by-HG3352,164524
(defun ecb-vc-dir-managed-by-GIT (directory)ecb-vc-dir-managed-by-GIT3369,165124
(defun ecb-vc-dir-managed-by-MTN (directory)ecb-vc-dir-managed-by-MTN3399,166219
(defun ecb-vc-dir-managed-by-CC (directory)ecb-vc-dir-managed-by-CC3421,166999
(defun ecb-vc-check-CC-state (file)ecb-vc-check-CC-state3428,167273
(defecb-advice clearcase-sync-from-disk after ecb-vc-advicesclearcase-sync-from-disk3447,167870
(defun ecb-vc-state (file)ecb-vc-state3458,168382
(defalias 'ecb-vc-recompute-state 'vc-recompute-state)ecb-vc-recompute-state3470,168950
(defun ecb-vc-get-state-fcn-for-dir (directory)ecb-vc-get-state-fcn-for-dir3472,169006
(defalias 'ecb-vc-managed-dir-p 'ecb-vc-get-state-fcn-for-dir)ecb-vc-managed-dir-p3498,170226
(defun ecb-vc-generate-node-name (name state)ecb-vc-generate-node-name3500,170290
(defun ecb-get-sourcename-of-nodename (nodename)ecb-get-sourcename-of-nodename3525,171662
(defun ecb-stealthy-vc-check--dir/history (state)ecb-stealthy-vc-check--dir/history3542,172477
(defun ecb-stealthy-vc-check--sources (state)ecb-stealthy-vc-check--sources3603,175770
(defecb-stealthy ecb-stealthy-vc-check-in-history-bufecb-stealthy-vc-check-in-history-buf3677,179806
(defecb-stealthy ecb-stealthy-vc-check-in-sources-bufecb-stealthy-vc-check-in-sources-buf3687,180196
(defecb-stealthy ecb-stealthy-vc-check-in-directories-bufecb-stealthy-vc-check-in-directories-buf3696,180590
(defun ecb-vc-reset-vc-stealthy-checks ()ecb-vc-reset-vc-stealthy-checks3707,181093
(defvar ecb-checkedin-file nilecb-checkedin-file3749,183510
(defecb-advice vc-checkin after ecb-vc-advicesvc-checkin3758,183885
(defun ecb-vc-checkin-hook ()ecb-vc-checkin-hook3764,184139
(defun ecb-vc-after-revert-hook ()ecb-vc-after-revert-hook3772,184468
(defun ecb-vc-enable-internals (arg)ecb-vc-enable-internals3780,184805
(defun ecb-stealth-tasks-after-directories-update ()ecb-stealth-tasks-after-directories-update3798,185596
(defun ecb-stealth-tasks-after-sources-update ()ecb-stealth-tasks-after-sources-update3806,186000
(defun ecb-stealth-tasks-after-history-update ()ecb-stealth-tasks-after-history-update3813,186321
(defun ecb-tree-node-add-filesecb-tree-node-add-files3821,186609
(defun ecb-new-child (old-children name type dataecb-new-child3857,188221
(defun ecb-add-source-path (&optional dir alias no-prompt-for-future-session)ecb-add-source-path3873,188936
(defun ecb-delete-s (child children sources)ecb-delete-s3905,190330
(defun ecb-remove-dir-from-caches (dir)ecb-remove-dir-from-caches3925,191147
(defun ecb-directory-update-speedbar (dir)ecb-directory-update-speedbar3931,191368
(defecb-tree-buffer-callback ecb-directory-or-source-clicked ecb-directories-buffer-name select nilecb-directory-or-source-clicked3946,192180
(defun ecb-source-item-clicked (node ecb-button edit-window-nr shift-mode meta-mode)ecb-source-item-clicked4010,195441
(defecb-tree-buffer-callback ecb-source-clicked ecb-sources-buffer-name select nilecb-source-clicked4033,196472
(defecb-tree-buffer-callback ecb-history-clicked ecb-history-buffer-name select nilecb-history-clicked4039,196787
(defun ecb-expand-directory-nodes (level)ecb-expand-directory-nodes4051,197367
(defun ecb-get-file-info-text (file)ecb-get-file-info-text4065,197923
(defun ecb-mouse-over-directory-node (node &optional window no-message click-force)ecb-mouse-over-directory-node4080,198411
(defun ecb-mouse-over-source-node (node &optional window no-message click-force)ecb-mouse-over-source-node4106,199895
(defun ecb-mouse-over-history-node (node &optional window no-message click-force)ecb-mouse-over-history-node4124,200816
(defun ecb-grep-directory-internal (node find)ecb-grep-directory-internal4172,203050
(defun ecb-create-directory (parent-node)ecb-create-directory4199,204197
(defun ecb-dired-directory-internal (node &optional other)ecb-dired-directory-internal4215,204763
(defun ecb-dir-run-cvs-op (node op op-arg-list)ecb-dir-run-cvs-op4239,205550
(defvar ecb-common-directories-menu nil)ecb-common-directories-menu4259,206166
(defvar ecb-directories-menu nilecb-directories-menu4278,206740
(defvar ecb-directories-menu-title-creatorecb-directories-menu-title-creator4289,207110
(defun ecb-dir/source/hist-menu-editwin-entries ()ecb-dir/source/hist-menu-editwin-entries4329,209143
(defun ecb-directories-menu-creator (tree-buffer-name node)ecb-directories-menu-creator4345,209849
(defvar ecb-source-path-menu nilecb-source-path-menu4375,211364
(defvar ecb-sources-menu nilecb-sources-menu4445,214043
(defvar ecb-sources-menu-title-creatorecb-sources-menu-title-creator4466,214813
(defun ecb-sources-menu-creator (tree-buffer-name node)ecb-sources-menu-creator4472,215032
(defun ecb-history-filter-by-ext (ext-str)ecb-history-filter-by-ext4501,216342
(defun ecb-history-filter-by-regexp (&optional regexp filter-display)ecb-history-filter-by-regexp4528,217585
(defun ecb-history-filter ()ecb-history-filter4604,220912
(defvar ecb-history-common-menu nilecb-history-common-menu4622,221797
(defvar ecb-history-menu nilecb-history-menu4638,222519
(defvar ecb-history-menu-title-creatorecb-history-menu-title-creator4658,223289
(defun ecb-history-menu-creator (tree-buffer-name node)ecb-history-menu-creator4664,223479
(defecb-tree-buffer-creator ecb-create-directories-tree-bufferecb-create-directories-tree-buffer4691,224863
(defecb-tree-buffer-creator ecb-create-sources-tree-buffer ecb-sources-buffer-nameecb-create-sources-tree-buffer4754,228353
(defecb-tree-buffer-creator ecb-create-history-tree-buffer ecb-history-buffer-nameecb-create-history-tree-buffer4814,231428

ecb_snap-20110605/ecb-semantic.el,453
(defun ecb-semanticdb-find-result-nth-with-file (result n)ecb-semanticdb-find-result-nth-with-file38,1335
(defun ecb-get-definition-list-by-semanticdb (tag-name &optional tag-class)ecb-get-definition-list-by-semanticdb52,2043
(defun ecb-search-tag-by-semanticdb (tag-name &optional tag-class)ecb-search-tag-by-semanticdb99,4708
(defun ecb-search-tag-by-semantic-analyzer (tag-name &optional tag-class)ecb-search-tag-by-semantic-analyzer125,5983

ecb_snap-20110605/ecb-face.el,6594
(defgroup ecb-face-options nilecb-face-options49,1665
(defgroup ecb-faces nilecb-faces54,1769
(defmacro ecb-face-default (&optional height bold-p italic-pecb-face-default60,1889
(defface ecb-default-general-face (ecb-face-default 1.0)ecb-default-general-face107,4966
(defface ecb-tree-guide-line-face (ecb-face-default 1.0 nil nilecb-tree-guide-line-face125,5845
(defcustom ecb-tree-guide-line-face 'ecb-tree-guide-line-faceecb-tree-guide-line-face131,6127
(defface ecb-directories-general-face (ecb-face-default 1.0 nil nilecb-directories-general-face135,6269
(defcustom ecb-directories-general-face 'ecb-default-general-faceecb-directories-general-face142,6575
(defface ecb-sources-general-face (ecb-face-default 1.0 nil nilecb-sources-general-face157,7262
(defcustom ecb-sources-general-face 'ecb-default-general-faceecb-sources-general-face164,7556
(defface ecb-methods-general-face (ecb-face-default 1.0 nil nilecb-methods-general-face180,8239
(defcustom ecb-methods-general-face 'ecb-default-general-faceecb-methods-general-face187,8533
(defface ecb-history-general-face (ecb-face-default 1.0 nil nilecb-history-general-face202,9202
(defcustom ecb-history-general-face 'ecb-default-general-faceecb-history-general-face209,9496
(defface ecb-history-bucket-node-face (ecb-face-default nil nil nilecb-history-bucket-node-face224,10165
(defcustom ecb-history-bucket-node-face 'ecb-history-bucket-node-faceecb-history-bucket-node-face236,10753
(defface ecb-history-bucket-node-dir-soure-path-face (ecb-face-default nil nil nilecb-history-bucket-node-dir-soure-path-face249,11362
(defcustom ecb-history-bucket-node-dir-soure-path-face 'ecb-history-bucket-node-dir-soure-path-faceecb-history-bucket-node-dir-soure-path-face264,12293
(defface ecb-history-indirect-buffer-face (ecb-face-default nil nil tecb-history-indirect-buffer-face279,13059
(defcustom ecb-history-indirect-buffer-face 'ecb-history-indirect-buffer-faceecb-history-indirect-buffer-face291,13673
(defface ecb-history-dead-buffer-face (ecb-face-default nil nil nilecb-history-dead-buffer-face300,14077
(defcustom ecb-history-dead-buffer-face 'ecb-history-dead-buffer-faceecb-history-dead-buffer-face316,14935
(defface ecb-default-highlight-face (ecb-face-default nil nil nilecb-default-highlight-face326,15330
(defface ecb-directory-face (ecb-face-default nil nil nilecb-directory-face345,16430
(defcustom ecb-directory-face 'ecb-default-highlight-faceecb-directory-face353,16848
(defface ecb-source-face (ecb-face-default nil nil nilecb-source-face367,17476
(defcustom ecb-source-face 'ecb-default-highlight-faceecb-source-face375,17882
(defface ecb-method-face (ecb-face-default nil nil nilecb-method-face389,18494
(defcustom ecb-method-face 'ecb-default-highlight-faceecb-method-face397,18897
(defface ecb-method-non-semantic-face (ecb-face-default nil nil nilecb-method-non-semantic-face411,19505
(defcustom ecb-method-non-semantic-face 'speedbar-tag-faceecb-method-non-semantic-face417,19817
(defface ecb-history-face (ecb-face-default nil nil nilecb-history-face429,20311
(defcustom ecb-history-face 'ecb-default-highlight-faceecb-history-face437,20721
(defface ecb-analyse-face (ecb-face-default nil nil nilecb-analyse-face451,21333
(defcustom ecb-analyse-face 'ecb-default-highlight-faceecb-analyse-face459,21743
(defface ecb-analyse-general-face (ecb-face-default 1.0 nil nilecb-analyse-general-face473,22355
(defcustom ecb-analyse-general-face 'ecb-default-general-faceecb-analyse-general-face480,22649
(defface ecb-analyse-bucket-element-face (ecb-face-default nil nil nilecb-analyse-bucket-element-face495,23318
(defcustom ecb-analyse-bucket-element-face 'ecb-analyse-bucket-element-faceecb-analyse-bucket-element-face508,23990
(defface ecb-analyse-bucket-node-face (ecb-face-default nil t nilecb-analyse-bucket-node-face521,24611
(defcustom ecb-analyse-bucket-node-face 'ecb-analyse-bucket-node-faceecb-analyse-bucket-node-face533,25193
(defface ecb-symboldef-symbol-face (ecb-face-default nil t nilecb-symboldef-symbol-face546,25775
(defcustom ecb-symboldef-symbol-face 'use-font-lock-faceecb-symboldef-symbol-face558,26361
(defface ecb-symboldef-prototype-face (ecb-face-default nil t nilecb-symboldef-prototype-face573,27091
(defcustom ecb-symboldef-prototype-face nilecb-symboldef-prototype-face585,27689
(defface ecb-tag-header-face (ecb-face-default nil nil nil nil nil nilecb-tag-header-face598,28255
(defcustom ecb-tag-header-face 'ecb-tag-header-faceecb-tag-header-face606,28666
(defface ecb-source-in-directories-buffer-face (ecb-face-default nil nil nilecb-source-in-directories-buffer-face614,28963
(defcustom ecb-source-in-directories-buffer-face 'ecb-source-in-directories-buffer-faceecb-source-in-directories-buffer-face623,29534
(defface ecb-source-read-only-face (ecb-face-default nil nil tecb-source-read-only-face629,29745
(defcustom ecb-source-read-only-face 'ecb-source-read-only-faceecb-source-read-only-face634,29964
(defface ecb-directory-not-accessible-face (ecb-face-default nil nil nilecb-directory-not-accessible-face641,30152
(defcustom ecb-directory-not-accessible-face 'ecb-directory-not-accessible-faceecb-directory-not-accessible-face650,30704
(defface ecb-type-tag-class-face (ecb-face-default nil t)ecb-type-tag-class-face656,30914
(defface ecb-type-tag-interface-face (ecb-face-default nil t)ecb-type-tag-interface-face660,31052
(defface ecb-type-tag-struct-face (ecb-face-default nil t)ecb-type-tag-struct-face664,31194
(defface ecb-type-tag-typedef-face (ecb-face-default nil t)ecb-type-tag-typedef-face668,31333
(defface ecb-type-tag-union-face (ecb-face-default nil t)ecb-type-tag-union-face672,31473
(defface ecb-type-tag-enum-face (ecb-face-default nil t)ecb-type-tag-enum-face676,31611
(defface ecb-type-tag-group-face (ecb-face-default nil t nil nilecb-type-tag-group-face680,31748
(defface ecb-bucket-node-face (ecb-face-default nil t nilecb-bucket-node-face690,32302
(defface ecb-mode-line-win-nr-face (ecb-face-default nil t)ecb-mode-line-win-nr-face717,33653
(defcustom ecb-mode-line-win-nr-face 'ecb-mode-line-win-nr-faceecb-mode-line-win-nr-face722,33835
(defface ecb-mode-line-prefix-face (ecb-face-default nil nil nil nilecb-mode-line-prefix-face735,34406
(defcustom ecb-mode-line-prefix-face 'ecb-mode-line-prefix-faceecb-mode-line-prefix-face742,34712
(defface ecb-mode-line-data-face (ecb-face-default)ecb-mode-line-data-face753,35141
(defcustom ecb-mode-line-data-face 'ecb-mode-line-data-faceecb-mode-line-data-face758,35289

ecb_snap-20110605/ecb-help.el,1216
(defconst ecb-help-info-start-file "ecb.info")ecb-help-info-start-file58,1898
(defconst ecb-help-html-start-file "ecb.html")ecb-help-html-start-file59,1945
(defconst ecb-help-info-subdir "./info-help/")ecb-help-info-subdir60,1992
(defconst ecb-help-html-subdir "./html-help/")ecb-help-html-subdir61,2039
(defgroup ecb-help nilecb-help63,2087
(defcustom ecb-show-help-format 'infoecb-show-help-format67,2163
(defcustom ecb-help-info-path (concatecb-help-info-path82,2747
(defcustom ecb-help-html-pathecb-help-html-path107,4003
(defun ecb-info (info-file &optional no-file-not-exist-err)ecb-info142,5493
(defun ecb-browse-html-file (html-file &optional no-file-not-exist-err)ecb-browse-html-file153,5954
(defun ecb-show-help (&optional format)ecb-show-help173,6874
(defvar ecb-problem-report-mail-address "ecb-list@lists.sourceforge.net" )ecb-problem-report-mail-address219,9175
(defconst ecb-problem-report-messageecb-problem-report-message221,9251
(defun ecb-submit-problem-report()ecb-submit-problem-report224,9343
(defun ecb-problem-report-post-hook()ecb-problem-report-post-hook277,11713
(defun ecb-problem-report-list-all-variables()ecb-problem-report-list-all-variables365,15844

ecb_snap-20110605/ecb-makedef.mk,929
RM=rm -fRM26,1087
CP=cpCP27,1096
MV=mv -fMV28,1102
MKDIR=mkdir -pMKDIR29,1111
EBATCH=$(EMACS) -batch -no-site-fileEBATCH31,1127
ecb_LISP_EL=tree-buffer.el ecb-util.el ecb-mode-line.el ecb-help.el \ecb_LISP_EL33,1165
ecb_LISP_ELC=$(ecb_LISP_EL:.el=.elc)ecb_LISP_ELC43,1746
ecb_AUTOLOADS=ecb-autoloads.elecb_AUTOLOADS45,1784
ecb_ETC=NEWS README RELEASE_NOTES ecb-makedef.mk Makefile make.batecb_ETC47,1816
ecb_TEXI=ecb.texiecb_TEXI49,1884
ecb_INFO=$(ecb_TEXI:.texi=.info)ecb_INFO51,1903
ecb_HTML=$(ecb_TEXI:.texi=.html)ecb_HTML52,1936
ecb_HTML_DIR=html-helpecb_HTML_DIR53,1969
ecb_INFO_DIR=info-helpecb_INFO_DIR54,1992
ecb_DVI=$(ecb_TEXI:.texi=.dvi)ecb_DVI56,2016
ecb_PS=$(ecb_TEXI:.texi=.ps)ecb_PS57,2047
ecb_PDF=$(ecb_TEXI:.texi=.pdf)ecb_PDF58,2076
ecb_IMAGE_DIR=ecb-imagesecb_IMAGE_DIR60,2108
ecb_DISTRIB_FILES=$(ecb_LISP_EL) $(ecb_AUTOLOADS) $(ecb_TEXI) $(ecb_ETC)ecb_DISTRIB_FILES62,2134

ecb_snap-20110605/ecb-create-layout.el,5306
(defgroup ecb-create-layout nilecb-create-layout61,1912
(defcustom ecb-create-layout-file "~/.ecb-user-layouts.el"ecb-create-layout-file66,2041
(defcustom ecb-create-layout-frame-width 140ecb-create-layout-frame-width71,2219
(defcustom ecb-create-layout-frame-height 51ecb-create-layout-frame-height76,2358
(defconst ecb-create-layout-buf-prefix " *ECB-LC-")ecb-create-layout-buf-prefix85,2529
(defconst ecb-create-layout-frame-name "Creation of a new ECB-layout")ecb-create-layout-frame-name86,2581
(defconst ecb-create-layout-all-buf-typesecb-create-layout-all-buf-types87,2652
(defconst ecb-create-layout-help-text-left-rightecb-create-layout-help-text-left-right90,2778
(defconst ecb-create-layout-help-text-topecb-create-layout-help-text-top129,4159
(defconst ecb-create-layout-file-headerecb-create-layout-file-header156,5459
(defvar ecb-create-layout-frame nil)ecb-create-layout-frame191,6717
(defvar ecb-create-layout-edit-window nil)ecb-create-layout-edit-window192,6754
(defvar ecb-create-layout-old-global-map nil)ecb-create-layout-old-global-map194,6798
(defvar ecb-create-layout-old-minor-mode-map-alist nil)ecb-create-layout-old-minor-mode-map-alist195,6844
(defvar ecb-create-layout-old-hscroll nil)ecb-create-layout-old-hscroll196,6900
(defvar ecb-create-layout-old-debug-on-error nil)ecb-create-layout-old-debug-on-error197,6943
(defvar ecb-create-layout-old-frame nil)ecb-create-layout-old-frame198,6993
(defvar ecb-create-layout-old-vertical-div-map nil)ecb-create-layout-old-vertical-div-map199,7034
(defvar ecb-create-layout-old-modeline-map nil)ecb-create-layout-old-modeline-map200,7086
(defvar ecb-create-layout-old-after-frame-h nil)ecb-create-layout-old-after-frame-h201,7134
(defvar ecb-create-layout-old-before-frame-h nil)ecb-create-layout-old-before-frame-h202,7183
(defvar ecb-create-layout-generated-lisp nil)ecb-create-layout-generated-lisp204,7234
(defvar ecb-create-layout-gen-counter 0)ecb-create-layout-gen-counter205,7280
(defvar ecb-create-layout-buf-types nil)ecb-create-layout-buf-types207,7322
(defvar ecb-create-layout-type 'left)ecb-create-layout-type210,7409
(defun ecb-create-layout-initilize ()ecb-create-layout-initilize212,7448
(defvar ecb-create-layout-frame-deleted nil)ecb-create-layout-frame-deleted232,8193
(defadvice delete-frame (before ecb-create-layout)delete-frame234,8239
(defadvice delete-frame (after ecb-create-layout)delete-frame243,8667
(defun ecb-create-layout-frame-ok ()ecb-create-layout-frame-ok253,9020
(defun ecb-create-layout-cancel (&rest ignore)ecb-create-layout-cancel259,9262
(defun ecb-create-layout-clear-all (&optional delete-frame)ecb-create-layout-clear-all267,9582
(defun ecb-create-layout-save-and-quit (&rest ignore)ecb-create-layout-save-and-quit311,11606
(defun ecb-create-layout-ready-for-save-p ()ecb-create-layout-ready-for-save-p328,12348
(defmacro ecb-create-layout-insert-line (line)ecb-create-layout-insert-line339,12736
(defun ecb-create-layout-insert-file-header ()ecb-create-layout-insert-file-header345,12889
(defun ecb-create-layout-save-layout ()ecb-create-layout-save-layout350,13110
(defun ecb-create-layout-gen-lisp (lisp-statement)ecb-create-layout-gen-lisp392,14991
(defun ecb-create-layout-split-ver (&optional fraction)ecb-create-layout-split-ver396,15149
(defun ecb-create-layout-split-hor (&optional fraction)ecb-create-layout-split-hor404,15471
(defun ecb-create-layout-add-to-buf-types (type)ecb-create-layout-add-to-buf-types413,15807
(defun ecb-create-layout-remove-from-buf-type (type)ecb-create-layout-remove-from-buf-type420,16096
(defun ecb-create-layout-buffer-type ()ecb-create-layout-buffer-type425,16286
(defun ecb-create-layout-buffer-factor ()ecb-create-layout-buffer-factor428,16386
(defun ecb-create-layout-set-buffer-type (type)ecb-create-layout-set-buffer-type431,16490
(defun ecb-create-layout-set-buffer-factor (factor)ecb-create-layout-set-buffer-factor436,16678
(defun ecb-create-layout-gen-lisp-for-buffer-type (type)ecb-create-layout-gen-lisp-for-buffer-type442,16875
(defun ecb-create-layout-set-buffer-to-type (&optional type)ecb-create-layout-set-buffer-to-type450,17132
(defun ecb-create-layout-select-edit-window ()ecb-create-layout-select-edit-window473,18265
(defun ecb-create-layout-split ()ecb-create-layout-split484,18763
(defun ecb-create-layout-forward-char ()ecb-create-layout-forward-char521,20416
(defun ecb-create-layout-next-window ()ecb-create-layout-next-window531,20858
(defun ecb-create-layout-previous-window ()ecb-create-layout-previous-window545,21489
(defun ecb-create-layout-delete-window ()ecb-create-layout-delete-window561,22223
(defvar ecb-create-layout-mode-map nilecb-create-layout-mode-map590,23825
(defun ecb-create-layout-new-buffer (&optional do-not-fill)ecb-create-layout-new-buffer649,26108
(defun ecb-create-layout-mode ()ecb-create-layout-mode666,26653
(defun ecb-create-layout-init-layout (&optional new)ecb-create-layout-init-layout676,27031
(defun ecb-create-layout-make-frame ()ecb-create-layout-make-frame714,28569
(defun ecb-create-new-layout ()ecb-create-new-layout751,30378
(defun ecb-delete-new-layout ()ecb-delete-new-layout803,32054
(defun ecb-create-layout-debug ()ecb-create-layout-debug844,33946

ecb_snap-20110605/ecb-compatibility.el,1142
(defecb-advice-set ecb-compatibility-advicesecb-compatibility-advices56,2029
(defecb-advice bs-show before ecb-compatibility-advicesbs-show61,2212
(defecb-advice one-window-p around ecb-always-disabled-advicesone-window-p77,2971
(defecb-advice Electric-pop-up-window around ecb-compatibility-advicesElectric-pop-up-window90,3647
(defecb-advice electric-command-history before ecb-compatibility-adviceselectric-command-history108,4529
(defecb-advice electric-buffer-list before ecb-compatibility-adviceselectric-buffer-list115,4825
(defecb-advice electric-buffer-list after ecb-compatibility-adviceselectric-buffer-list122,5117
(defecb-advice scroll-all-function-all around ecb-compatibility-advicesscroll-all-function-all169,7266
(defvar ecb-before-ediff-window-config nil)ecb-before-ediff-window-config228,9871
(defun ecb-ediff-before-setup-hook ()ecb-ediff-before-setup-hook234,10146
(defun ecb-ediff-quit-hook ()ecb-ediff-quit-hook256,11295
(defun ecb-activate-ediff-compatibility ()ecb-activate-ediff-compatibility269,11850
(defun ecb-deactivate-ediff-compatibility ()ecb-deactivate-ediff-compatibility281,12388

ecb_snap-20110605/ecb-mode-line.el,713
(defgroup ecb-mode-line nilecb-mode-line55,1768
(defcustom ecb-mode-line-prefixes '((ecb-directories-buffer-name . nil)ecb-mode-line-prefixes61,1954
(defcustom ecb-mode-line-display-window-number tecb-mode-line-display-window-number112,4791
(defcustom ecb-mode-line-data '((ecb-directories-buffer-name . sel-dir)ecb-mode-line-data138,5908
(defun ecb-mode-line-format ()ecb-mode-line-format193,8916
(defun ecb-mode-line-make-modeline-str (str face)ecb-mode-line-make-modeline-str267,13595
(defun ecb-mode-line-set (buffer-name frame prefix &optional text no-win-nr)ecb-mode-line-set285,14360
(defun ecb-mode-line-update-buffer (buffer-name new-mode-line-format)ecb-mode-line-update-buffer326,16591

ecb_snap-20110605/ecb-symboldef.el,2068
(defgroup ecb-symboldef nilecb-symboldef72,2397
(defcustom ecb-symboldef-buffer-name " *ECB Symboldefinition*"ecb-symboldef-buffer-name77,2531
(defcustom ecb-symboldef-find-functionsecb-symboldef-find-functions91,3071
(defcustom ecb-symboldef-minimum-symbol-length 3ecb-symboldef-minimum-symbol-length128,5021
(defcustom ecb-symboldef-buffer-sync 'basicecb-symboldef-buffer-sync146,5874
(defcustom ecb-symboldef-buffer-sync-delay 'basicecb-symboldef-buffer-sync-delay167,6760
(defcustom ecb-symboldef-buffer-sync-hook nilecb-symboldef-buffer-sync-hook188,7835
(defvar ecb-symboldef-last-symbol nilecb-symboldef-last-symbol219,9153
(defun ecb-symboldef-get-find-function ()ecb-symboldef-get-find-function222,9236
(defun ecb-symboldef-find-null (symbol-name edit-buffer)ecb-symboldef-find-null230,9581
(defconst ecb-symboldef-temp-buffer-name " *ecb-symboldef-temp-buffer")ecb-symboldef-temp-buffer-name241,10161
(defun ecb-symboldef-get-doc-for-fsymbol (fsymbol edit-buffer)ecb-symboldef-get-doc-for-fsymbol244,10257
(defun ecb-symboldef-get-doc-for-vsymbol (vsymbol edit-buffer)ecb-symboldef-get-doc-for-vsymbol261,10990
(defun ecb-function-at-point ()ecb-function-at-point302,13059
(defun ecb-symboldef-function-at-point ()ecb-symboldef-function-at-point327,13952
(defun ecb-symboldef-find-lisp-doc (symbol-name edit-buffer)ecb-symboldef-find-lisp-doc333,14160
(defun ecb-symboldef-find-tag-by-semanticdb (symbol-name edit-buffer)ecb-symboldef-find-tag-by-semanticdb502,21043
(defun ecb-symboldef-find-tag-by-etags (symbol-name edit-buffer)ecb-symboldef-find-tag-by-etags519,21936
(defun ecb-symboldef-find-definition (symbol-name edit-buffer)ecb-symboldef-find-definition535,22628
(defecb-autocontrol/sync-function ecb-symboldef-buffer-syncecb-symboldef-buffer-sync576,24494
(defecb-window-dedicator-to-ecb-buffer ecb-set-symboldef-bufferecb-set-symboldef-buffer621,26685
(defun ecb-maximize-window-symboldef ()ecb-maximize-window-symboldef629,27112
(defun ecb-goto-window-symboldef ()ecb-goto-window-symboldef637,27477

ecb_snap-20110605/ecb-autoloads.el,83
(defconst ecb-running-xemacs (featurep (quote xemacs)))ecb-running-xemacs56,1766

ecb_snap-20110605/ecb-tod.el,333
(defcustom ecb-tip-of-the-day tecb-tip-of-the-day46,1478
(defcustom ecb-tip-of-the-day-file "~/.ecb-tip-of-day.el"ecb-tip-of-the-day-file51,1598
(defconst ecb-tod-tip-listecb-tod-tip-list56,1743
(defun ecb-show-tip-of-the-day ()ecb-show-tip-of-the-day124,8232
(defun ecb-tod-move-cursor (cursor)ecb-tod-move-cursor139,8804

ecb_snap-20110605/ecb-speedbar.el,2485
(defgroup ecb-speedbar nilecb-speedbar85,2768
(defcustom ecb-speedbar-before-activate-hook nilecb-speedbar-before-activate-hook90,2886
(defcustom ecb-speedbar-buffer-sync 'basicecb-speedbar-buffer-sync99,3248
(defcustom ecb-speedbar-buffer-sync-delay 'basicecb-speedbar-buffer-sync-delay121,4136
(defcustom ecb-speedbar-buffer-sync-hook nilecb-speedbar-buffer-sync-hook142,5215
(defecb-advice-set ecb-speedbar-adviced-functions ecb-speedbar-adviced-functions171,6470
(defconst ecb-speedbar-buffer-name " SPEEDBAR"ecb-speedbar-buffer-name174,6592
(defun ecb-speedbar-buffer-selected ()ecb-speedbar-buffer-selected177,6678
(defecb-advice speedbar-click around ecb-speedbar-adviced-functionsspeedbar-click180,6788
(defecb-advice speedbar-frame-mode around ecb-speedbar-adviced-functionsspeedbar-frame-mode203,7971
(defecb-advice speedbar-get-focus around ecb-speedbar-adviced-functionsspeedbar-get-focus211,8266
(defecb-advice dframe-mouse-set-point around ecb-speedbar-adviced-functionsdframe-mouse-set-point225,8987
(defecb-advice dframe-select-attached-frame after ecb-speedbar-adviced-functionsdframe-select-attached-frame246,10028
(defun ecb-speedbar-dframe-select-attached-window ()ecb-speedbar-dframe-select-attached-window252,10346
(defun ecb-speedbar-select-speedbar-window ()ecb-speedbar-select-speedbar-window263,10765
(defecb-window-dedicator-to-ecb-buffer ecb-set-speedbar-bufferecb-set-speedbar-buffer268,10972
(defvar ecb-speedbar-verbosity-level-old nil)ecb-speedbar-verbosity-level-old279,11369
(defvar ecb-speedbar-select-frame-method-old nil)ecb-speedbar-select-frame-method-old280,11415
(defvar ecb-speedbar-update-flag-old -1)ecb-speedbar-update-flag-old281,11465
(defun ecb-speedbar-activate()ecb-speedbar-activate283,11507
(defun ecb-speedbar-deactivate ()ecb-speedbar-deactivate368,14837
(defun ecb-speedbar-active-p ()ecb-speedbar-active-p399,15854
(defun ecb-speedbar-update-contents ()ecb-speedbar-update-contents404,16089
(defecb-autocontrol/sync-function ecb-speedbar-buffer-syncecb-speedbar-buffer-sync409,16199
(defun ecb-goto-window-speedbar ()ecb-goto-window-speedbar427,17120
(defun ecb-maximize-window-speedbar ()ecb-maximize-window-speedbar434,17356
(defun ecb-speedbar-sb-tag-p (tag)ecb-speedbar-sb-tag-p447,17875
(defun ecb-create-non-semantic-tree (node tag-list)ecb-create-non-semantic-tree453,18088
(defun ecb-get-tags-for-non-semantic-files ()ecb-get-tags-for-non-semantic-files529,21539

ecb_snap-20110605/ecb_snap-autoloads.el,76
(defconst ecb-running-xemacs (featurep 'xemacs))ecb-running-xemacs60,1817

ecb_snap-20110605/ecb-autogen.el,467
(defconst ecb-autogen-headerecb-autogen-header65,1985
(defconst ecb-autogen-file "ecb-autoloads.el"ecb-autogen-file69,2098
(defconst ecb-autoload-feature "ecb-autoloads"ecb-autoload-feature72,2193
(defvar ecb-autogen-subdirs nilecb-autogen-subdirs75,2276
(defun ecb-autogen-update-header ()ecb-autogen-update-header78,2353
(defun ecb-batch-update-autoloads ()ecb-batch-update-autoloads104,3332
(defun ecb-update-autoloads ()ecb-update-autoloads120,3966

ecb_snap-20110605/ecb-advice-test.el,1027
(defecb-advice-set ecb-advice-test-setecb-advice-test-set48,1684
(defun ecb-advice-test-defun-1 ()ecb-advice-test-defun-151,1788
(defecb-advice ecb-advice-test-defun-1 around ecb-advice-test-setecb-advice-test-defun-154,1888
(defun ecb-advice-test-defun-2 ()ecb-advice-test-defun-258,2033
(defecb-advice ecb-advice-test-defun-2 before ecb-advice-test-setecb-advice-test-defun-261,2133
(defecb-advice ecb-advice-test-defun-2 after ecb-advice-test-setecb-advice-test-defun-265,2278
(defun ecb-advice-test-defun-3 ()ecb-advice-test-defun-369,2421
(defecb-advice ecb-advice-test-defun-3 around ecb-always-disabled-advicesecb-advice-test-defun-372,2521
(defecb-advice ecb-advice-test-defun-3 after ecb-always-disabled-advicesecb-advice-test-defun-376,2712
(defun ecb-advice-test-defun-4 ()ecb-advice-test-defun-480,2901
(defecb-advice ecb-advice-test-defun-4 around ecb-always-disabled-advicesecb-advice-test-defun-483,3001
(defun ecb-test-with-original-advice-set ()ecb-test-with-original-advice-set87,3192

ecb_snap-20110605/make.bat,95
set EMACS=C:/Programme/emacs-22.3/bin/emacs.exeEMACS47,2026
set CEDET=../cedetCEDET48,2075

ecb_snap-20110605/silentcomp.el,573
(defvar silentcomp-unbound-variables nil)silentcomp-unbound-variables123,4363
(defvar silentcomp-original-functions nil)silentcomp-original-functions124,4405
(defvar silentcomp-environment-set nil)silentcomp-environment-set125,4448
(defun silentcomp-restore-environment ()silentcomp-restore-environment127,4489
(defun silentcomp-is-compiling ()silentcomp-is-compiling155,5300
(defmacro silentcomp-defvar (var)silentcomp-defvar161,5507
(defmacro silentcomp-defun (fun)silentcomp-defun177,6065
(defmacro silentcomp-provide (feature)silentcomp-provide201,7023

ecb_snap-20110605/ecb_snap-pkg.el,53
(define-package "ecb_snap" "20110605""ecb_snap"1,0

ecb_snap-20110605/ecb-upgrade.el,6081
(defconst ecb-version "2.40"ecb-version158,7551
(defconst ecb-upgrade-newsecb-upgrade-news175,8088
(defconst ecb-upgradable-option-alistecb-upgradable-option-alist249,13510
(defun ecb-upgrade-compile-window-temporally-enlarge (old-val)ecb-upgrade-compile-window-temporally-enlarge355,20763
(defun ecb-upgrade-window-sync (old-val)ecb-upgrade-window-sync363,21013
(defun ecb-upgrade-layout-window-sizes (old-val)ecb-upgrade-layout-window-sizes368,21151
(defun ecb-upgrade-layout-nr2name (number)ecb-upgrade-layout-nr2name373,21351
(defun ecb-upgrade-layout-nr (old-val)ecb-upgrade-layout-nr398,22421
(defun ecb-upgrade-toggle-layout-sequence (old-val)ecb-upgrade-toggle-layout-sequence404,22586
(defun ecb-upgrade-use-speedbar-for-directories (old-val)ecb-upgrade-use-speedbar-for-directories409,22752
(defun ecb-upgrade-major-modes-activate (old-val)ecb-upgrade-major-modes-activate413,22838
(defun ecb-upgrade-cache-directory-contents (old-val)ecb-upgrade-cache-directory-contents423,23138
(defun ecb-upgrade-truncate-lines (old-val)ecb-upgrade-truncate-lines428,23305
(defun ecb-upgrade-alway-operate-in-edit-window (old-val)ecb-upgrade-alway-operate-in-edit-window453,24223
(defun ecb-upgrade-mode-line-prefixes (old-val)ecb-upgrade-mode-line-prefixes458,24378
(defun ecb-upgrade-mode-line-data (old-val)ecb-upgrade-mode-line-data468,24713
(defun ecb-upgrade-menu-extension (old-list)ecb-upgrade-menu-extension484,25293
(defun ecb-upgrade-directories-menu-ext (old-val)ecb-upgrade-directories-menu-ext489,25428
(defun ecb-upgrade-sources-menu-ext (old-val)ecb-upgrade-sources-menu-ext494,25646
(defun ecb-upgrade-methods-menu-ext (old-val)ecb-upgrade-methods-menu-ext499,25856
(defun ecb-upgrade-history-menu-ext (old-val)ecb-upgrade-history-menu-ext504,26066
(defun ecb-upgrade-token-display-function (old-val)ecb-upgrade-token-display-function509,26276
(defun ecb-upgrade-type-token-display (old-val)ecb-upgrade-type-token-display537,28151
(defun ecb-upgrade-post-process-semantic-tokenlist (old-val)ecb-upgrade-post-process-semantic-tokenlist554,28962
(defun ecb-upgrade-token-visit-post-actions (old-val)ecb-upgrade-token-visit-post-actions564,29376
(defun ecb-upgrade-token-header-face (old-val)ecb-upgrade-token-header-face582,30318
(defun ecb-upgrade-post-process-semantic-taglist (old-val)ecb-upgrade-post-process-semantic-taglist587,30452
(defun ecb-upgrade-split-edit-window (old-val)ecb-upgrade-split-edit-window594,30639
(defun ecb-upgrade-other-window-jump-behavior (old-val)ecb-upgrade-other-window-jump-behavior599,30750
(defun ecb-upgrade-show-tags (old-val)ecb-upgrade-show-tags605,30943
(defun ecb-upgrade-sort-history-items (old-val)ecb-upgrade-sort-history-items609,31064
(defun ecb-upgrade-excluded-directories-regexp (old-val)ecb-upgrade-excluded-directories-regexp612,31153
(defun ecb-upgrade-source-file-regexps (old-val)ecb-upgrade-source-file-regexps615,31229
(defun ecb-upgrade-exclude-parents-regexp (old-val)ecb-upgrade-exclude-parents-regexp621,31412
(defun ecb-upgrade-auto-expand-tag-tree-collapse-other (old-val)ecb-upgrade-auto-expand-tag-tree-collapse-other624,31496
(defun ecb-upgrade-prescan-directories-for-emptyness (old-val)ecb-upgrade-prescan-directories-for-emptyness629,31608
(defun ecb-upgrade-sources-perform-read-only-check (old-val)ecb-upgrade-sources-perform-read-only-check632,31707
(defun ecb-upgrade-vc-enable-support (old-val)ecb-upgrade-vc-enable-support635,31806
(defun ecb-upgrade-tree-image-icons-directories (old-val)ecb-upgrade-tree-image-icons-directories638,31889
(defun ecb-upgrade-tree-RET-selects-edit-window (old-val)ecb-upgrade-tree-RET-selects-edit-window654,32606
(defgroup ecb-upgrade-internal nilecb-upgrade-internal671,33339
(defcustom ecb-options-version ecb-versionecb-options-version676,33490
(defun ecb-custom-file-writeable-p ()ecb-custom-file-writeable-p681,33648
(defun ecb-customize-save-variable (option value)ecb-customize-save-variable689,33966
(defun ecb-customize-set-variable (option value)ecb-customize-set-variable699,34442
(defun ecb-option-set-default (option)ecb-option-set-default702,34533
(defun ecb-option-upgrade (old-option)ecb-option-upgrade707,34747
(defun ecb-option-compatible-p (option)ecb-option-compatible-p756,37197
(defvar ecb-old-ecb-version nilecb-old-ecb-version763,37478
(defun ecb-options-version=ecb-version-p ()ecb-options-version=ecb-version-p767,37610
(defun ecb-store-current-options-version ()ecb-store-current-options-version773,37834
(defvar ecb-not-compatible-options nilecb-not-compatible-options780,38141
(defvar ecb-all-options nil)ecb-all-options788,38473
(defun ecb-get-all-ecb-options ()ecb-get-all-ecb-options790,38503
(defun ecb-check-not-compatible-options ()ecb-check-not-compatible-options798,38797
(defun ecb-upgrade-not-compatible-options ()ecb-upgrade-not-compatible-options817,39509
(defvar ecb-renamed-options nil)ecb-renamed-options839,40750
(defun ecb-upgrade-renamed-options ()ecb-upgrade-renamed-options841,40784
(defvar ecb-upgrade-button-keymapecb-upgrade-button-keymap878,42607
(defun ecb-not-compatible-or-renamed-options-detected ()ecb-not-compatible-or-renamed-options-detected891,43036
(defun ecb-upgrade-make-copy-of-custom-file ()ecb-upgrade-make-copy-of-custom-file894,43149
(defun ecb-display-upgraded-options ()ecb-display-upgraded-options907,43664
(defun ecb-display-news-for-upgrade (&optional full-news)ecb-display-news-for-upgrade1102,56236
(defun ecb-upgrade-options ()ecb-upgrade-options1133,57838
(defvar ecb-all-requirements-available nil)ecb-all-requirements-available1152,58651
(defun ecb-check-requirements ()ecb-check-requirements1154,58696
(defun ecb-package-version-str2list (ver-str)ecb-package-version-str2list1198,60819
(defun ecb-package-version-list< (ver1 ver2)ecb-package-version-list<1237,62405
(defun ecb-package-version-string< (ver1-str ver2-str)ecb-package-version-string<1259,62951
(defun ecb-package-version-list2str (ver)ecb-package-version-list2str1265,63226

ecb_snap-20110605/ecb-compilation.el,1610
(defcustom ecb-compilation-buffer-names `(("*Calculator*" . nil)ecb-compilation-buffer-names51,1683
(defvar ecb-compilation-buffer-names-internal nilecb-compilation-buffer-names-internal88,3777
(defun ecb-compilation-buffer-names ()ecb-compilation-buffer-names93,4031
(defun ecb-compilation-registered-buffer-p (name)ecb-compilation-registered-buffer-p100,4354
(defcustom ecb-compilation-major-modes '(compilation-mode)ecb-compilation-major-modes113,4796
(defvar ecb-compilation-major-modes-internal nilecb-compilation-major-modes-internal123,5283
(defun ecb-compilation-major-modes ()ecb-compilation-major-modes127,5480
(defcustom ecb-compilation-predicates '(comint-check-proc)ecb-compilation-predicates135,5791
(defvar ecb-compilation-predicates-internal nilecb-compilation-predicates-internal152,6604
(defun ecb-compilation-predicates ()ecb-compilation-predicates156,6789
(defun ecb-compilation-get-buffers()ecb-compilation-get-buffers165,7123
(defun ecb-compilation-buffer-p (buffer-or-name)ecb-compilation-buffer-p185,7806
(defvar ecb-compilation-update-menu-p nil)ecb-compilation-update-menu-p247,10701
(defvar ecb-compilation-buffer-list-cache nil)ecb-compilation-buffer-list-cache248,10744
(defvar ecb-compilation-update-idle-time 0.25)ecb-compilation-update-idle-time249,10791
(defun ecb-compilation-buffer-list-init ()ecb-compilation-buffer-list-init251,10839
(defecb-autocontrol/sync-function ecb-compilation-buffer-list-changed-p nil nil nilecb-compilation-buffer-list-changed-p257,11066
(defun ecb-compilation-update-menu()ecb-compilation-update-menu272,11819

ecb_snap-20110605/ecb-layout-defs.el,98
(defconst ecb-buildin-layouts (ecb-copy-list ecb-available-layouts)ecb-buildin-layouts985,46687

ecb_snap-20110605/Makefile,523
EMACS=emacsEMACS38,1616
CEDET=c:/Programme/emacs-23.1/site-lisp/package-development/cedetCEDET55,2175
LOADPATH=LOADPATH59,2348
MAKEINFO=/usr/bin/makeinfoMAKEINFO84,3390
TEXI2DVI=/C/Programme/texmf/miktex/bin/texi2dviTEXI2DVI85,3417
DVIPDFM=DVIPDFM88,3547
DVIPS=/C/Programme/texmf/miktex/bin/dvipsDVIPS91,3643
PS2PDF=/C/home/bin/ps2pdfPS2PDF92,3685
EMACSINFOPATH=/C/Programme/emacs-22.3/infoEMACSINFOPATH103,4163
INSTALLINFO=/usr/bin/install-infoINSTALLINFO108,4414
ecb_VERSION=2.41ecb_VERSION125,4985

ecb_snap-20110605/ecb-cedet-wrapper.el,2219
(defconst ecb-cedet-old-sourcetree-structure-detected-pecb-cedet-old-sourcetree-structure-detected-p50,1962
(defconst ecb-cedet-lib-registry '((cedet . cedet)ecb-cedet-lib-registry57,2330
(defconst ecb-cedet-required-version-min '(1 0 2 6)ecb-cedet-required-version-min75,3326
(defconst ecb-cedet-required-version-max '(1 0 4 9)ecb-cedet-required-version-max83,3616
(defun ecb-cedet-missing-libs ()ecb-cedet-missing-libs87,3783
(defun ecb-cedet-require (old-style-lib)ecb-cedet-require100,4282
(defconst ecb-cedet-missing-librariesecb-cedet-missing-libraries120,5368
(defconst ecb-compiled-in-semantic-versionecb-compiled-in-semantic-version134,5814
(defconst ecb-compiled-in-cedet-versionecb-compiled-in-cedet-version139,6062
(defun ecb-check-semantic-load ()ecb-check-semantic-load144,6298
(defun ecb-check-cedet-load ()ecb-check-cedet-load175,8319
(defconst ecb-semantic-2-loaded (ignore-errorsecb-semantic-2-loaded215,10974
(defsubst ecb--semantic-symbol->name-assoc-list ()ecb--semantic-symbol->name-assoc-list220,11172
(defsubst ecb--semantic-symbol->name-assoc-list-for-type-parts ()ecb--semantic-symbol->name-assoc-list-for-type-parts224,11336
(defsubst ecb--semantic-format-tag-functions ()ecb--semantic-format-tag-functions228,11545
(defsubst ecb--semantic-orphaned-member-metaparent-type ()ecb--semantic-orphaned-member-metaparent-type232,11696
(defsubst ecb--semantic-uml-colon-string ()ecb--semantic-uml-colon-string236,11884
(defsubst ecb--semantic-format-face-alist ()ecb--semantic-format-face-alist240,12027
(defsubst ecb--semantic-after-toplevel-cache-change-hook ()ecb--semantic-after-toplevel-cache-change-hook244,12173
(defsubst ecb--semantic-after-partial-cache-change-hook ()ecb--semantic-after-partial-cache-change-hook248,12352
(defsubst ecb--semantic--before-fetch-tags-hook ()ecb--semantic--before-fetch-tags-hook252,12528
(defsubst ecb--ezimage-use-images ()ecb--ezimage-use-images256,12680
(defsubst ecb--semantic-format-use-images-flag ()ecb--semantic-format-use-images-flag260,12780
(defconst ecb--cedet-function-listecb--cedet-function-list271,13177
(defconst ecb--semantic-format-function-listecb--semantic-format-function-list347,15392

ecb_snap-20110605/ecb_snap.el,0

paredit-22/paredit.el,10276
(defconst paredit-version 22)paredit-version192,9261
(defconst paredit-beta-p t)paredit-beta-p193,9291
(defvar paredit-mode-map (make-sparse-keymap)paredit-mode-map247,10910
(define-minor-mode paredit-modeparedit-mode251,11012
(defun enable-paredit-mode ()enable-paredit-mode276,12202
(defun disable-paredit-mode ()disable-paredit-mode281,12322
(defvar paredit-backward-delete-keyparedit-backward-delete-key286,12444
(defvar paredit-forward-delete-keysparedit-forward-delete-keys290,12560
(defvar paredit-commands nilparedit-commands300,12900
(defun paredit-define-keys ()paredit-define-keys520,21582
(defun paredit-function-documentation (fn)paredit-function-documentation526,21776
(defun paredit-annotate-mode-with-examples ()paredit-annotate-mode-with-examples533,22046
(defun paredit-annotate-functions-with-examples ()paredit-annotate-functions-with-examples560,23254
(defun paredit-insert-html-examples ()paredit-insert-html-examples577,23948
(defun paredit-html-quote (string)paredit-html-quote626,25983
(defvar paredit-wrap-commands '(paredit-wrap-sexp)paredit-wrap-commands686,28566
(define-paredit-pair ?\( ?\) "round")?\690,28732
(define-paredit-pair ?\[ ?\] "square")?\[691,28770
(define-paredit-pair ?\{ ?\} "curly")?\{692,28809
(define-paredit-pair ?\< ?\> "angled")?\<693,28847
(defalias 'paredit-open-parenthesis 'paredit-open-round)paredit-open-parenthesis697,28919
(defalias 'paredit-close-parenthesis 'paredit-close-round)paredit-close-parenthesis698,28976
(defalias 'paredit-close-parenthesis-and-newlineparedit-close-parenthesis-and-newline699,29035
(defalias 'paredit-open-bracket 'paredit-open-square)paredit-open-bracket702,29121
(defalias 'paredit-close-bracket 'paredit-close-square)paredit-close-bracket703,29175
(defalias 'paredit-close-bracket-and-newlineparedit-close-bracket-and-newline704,29231
(defun paredit-move-past-close (close)paredit-move-past-close707,29315
(defun paredit-move-past-close-and-newline (close)paredit-move-past-close-and-newline715,29585
(defun paredit-find-comment-on-line ()paredit-find-comment-on-line733,30191
(defun paredit-insert-pair (n open close forward)paredit-insert-pair755,31212
(defun paredit-region-safe-for-insert-p ()paredit-region-safe-for-insert-p777,32034
(defvar paredit-space-for-delimiter-predicates nilparedit-space-for-delimiter-predicates794,32805
(defun paredit-space-for-delimiter-p (endp delimiter)paredit-space-for-delimiter-p810,33707
(defun paredit-move-past-close-and-reindent (close)paredit-move-past-close-and-reindent829,34588
(defun paredit-missing-close ()paredit-missing-close862,36191
(defun paredit-delete-leading-whitespace ()paredit-delete-leading-whitespace870,36438
(defun paredit-blink-paren-match (another-line-p)paredit-blink-paren-match881,36919
(defun paredit-doublequote (&optional n)paredit-doublequote893,37340
(defun paredit-meta-doublequote (&optional n)paredit-meta-doublequote918,38523
(defun paredit-forward-for-quote (end)paredit-forward-for-quote935,39238
(defun paredit-backslash ()paredit-backslash968,40723
(defun paredit-escape (char)paredit-escape991,41749
(defun paredit-newline ()paredit-newline1001,42258
(defun paredit-reindent-defun (&optional argument)paredit-reindent-defun1026,43269
(defun paredit-semicolon (&optional n)paredit-semicolon1041,43722
(defun paredit-semicolon-find-line-break-point ()paredit-semicolon-find-line-break-point1062,44665
(defun paredit-semicolon-with-line-break (line-break-point n)paredit-semicolon-with-line-break1083,45490
(defun paredit-initialize-comment-dwim ()paredit-initialize-comment-dwim1108,46481
(defun paredit-comment-dwim (&optional argument)paredit-comment-dwim1122,47099
(defun paredit-comment-on-line-p ()paredit-comment-on-line-p1151,48569
(defun paredit-insert-comment ()paredit-insert-comment1169,49266
(defun paredit-forward-delete (&optional argument)paredit-forward-delete1201,50417
(defun paredit-forward-delete-in-string ()paredit-forward-delete-in-string1251,52635
(defun paredit-backward-delete (&optional argument)paredit-backward-delete1274,53817
(defun paredit-backward-delete-in-string ()paredit-backward-delete-in-string1320,55878
(defun paredit-kill (&optional argument)paredit-kill1345,57028
(defun paredit-kill-line-in-string ()paredit-kill-line-in-string1369,58066
(defun paredit-kill-sexps-on-line ()paredit-kill-sexps-on-line1381,58492
(defun paredit-forward-sexps-to-kill (beginning eol)paredit-forward-sexps-to-kill1409,59945
(defun paredit-kill-sexps-on-whole-line (beginning)paredit-kill-sexps-on-whole-line1444,61333
(defun paredit-forward-kill-word ()paredit-forward-kill-word1475,62871
(defun paredit-backward-kill-word ()paredit-backward-kill-word1504,64116
(defun paredit-kill-word-state (parse-state adjacent-char-fn)paredit-kill-word-state1533,65307
(defun paredit-kill-word-hack (old-state new-state parse-state)paredit-kill-word-hack1546,65860
(defun paredit-copy-as-kill ()paredit-copy-as-kill1568,66725
(defun paredit-copy-as-kill-in-string ()paredit-copy-as-kill-in-string1584,67377
(defun paredit-copy-sexps-as-kill ()paredit-copy-sexps-as-kill1592,67651
(defun paredit-kill-ring-save (beginning end)paredit-kill-ring-save1627,69387
(defun paredit-kill-region (beginning end &optional yank-handler)paredit-kill-region1637,69788
(defun paredit-check-region-state (beginning-state end-state)paredit-check-region-state1652,70472
(defun paredit-check-region-state-depth (beginning-state end-state)paredit-check-region-state-depth1658,70796
(defun paredit-check-region-state-string (beginning-state end-state)paredit-check-region-state-string1666,71129
(defun paredit-check-region-state-comment (beginning-state end-state)paredit-check-region-state-comment1674,71519
(defun paredit-check-region-state-char-quote (beginning-state end-state)paredit-check-region-state-char-quote1700,72863
(defun-saving-mark paredit-forward ()paredit-forward1724,73679
(defun-saving-mark paredit-backward ()paredit-backward1734,74140
(defun backward-down-list (&optional arg)backward-down-list1745,74597
(defun paredit-recentre-on-sexp (&optional n)paredit-recentre-on-sexp1754,74922
(defun paredit-focus-on-defun ()paredit-focus-on-defun1768,75454
(defun paredit-up/down (n vertical-direction)paredit-up/down1776,75642
(defun paredit-next-up/down-point (horizontal-direction vertical-direction)paredit-next-up/down-point1783,75899
(defun paredit-find-next-string-start (horizontal-direction limit)paredit-find-next-string-start1825,78003
(defun paredit-forward-down (&optional argument)paredit-forward-down1841,78681
(defun paredit-backward-up (&optional argument)paredit-backward-up1848,78952
(defun paredit-forward-up (&optional argument)paredit-forward-up1856,79289
(defun paredit-backward-down (&optional argument)paredit-backward-down1864,79618
(defun paredit-wrap-sexp (&optional argument open close)paredit-wrap-sexp1873,79960
(defun paredit-count-sexps-forward ()paredit-count-sexps-forward1898,81082
(defun paredit-yank-pop (&optional argument)paredit-yank-pop1907,81283
(defun paredit-splice-sexp (&optional argument)paredit-splice-sexp1943,82922
(defun paredit-kill-surrounding-sexps-for-splice (argument)paredit-kill-surrounding-sexps-for-splice1977,84639
(defun paredit-splice-sexp-killing-backward (&optional n)paredit-splice-sexp-killing-backward2009,86192
(defun paredit-splice-sexp-killing-forward (&optional n)paredit-splice-sexp-killing-forward2018,86590
(defun paredit-raise-sexp (&optional argument)paredit-raise-sexp2027,86991
(defun paredit-convolute-sexp (&optional n)paredit-convolute-sexp2056,88331
(defun paredit-splice-string (argument)paredit-splice-string2082,89425
(defun paredit-unescape-string (string)paredit-unescape-string2110,90617
(defun paredit-forward-slurp-sexp ()paredit-forward-slurp-sexp2125,91021
(defun paredit-forward-slurp-into-list ()paredit-forward-slurp-into-list2143,91752
(defun paredit-forward-slurp-into-string ()paredit-forward-slurp-into-string2159,92591
(defun paredit-forward-barf-sexp ()paredit-forward-barf-sexp2169,92978
(defun paredit-backward-slurp-sexp ()paredit-backward-slurp-sexp2191,94037
(defun paredit-backward-slurp-into-list ()paredit-backward-slurp-into-list2209,94757
(defun paredit-backward-slurp-into-string ()paredit-backward-slurp-into-string2228,95363
(defun paredit-backward-barf-sexp ()paredit-backward-barf-sexp2240,95747
(defun paredit-split-sexp ()paredit-split-sexp2268,96678
(defun paredit-join-sexps ()paredit-join-sexps2288,97475
(defun paredit-add-to-previous-list ()paredit-add-to-previous-list2332,99501
(defun paredit-add-to-next-list ()paredit-add-to-next-list2340,99767
(defun paredit-join-with-previous-list ()paredit-join-with-previous-list2349,100085
(defun paredit-join-with-next-list ()paredit-join-with-next-list2359,100451
(defun paredit-in-string-escape-p ()paredit-in-string-escape-p2371,100812
(defun paredit-in-char-p (&optional argument)paredit-in-char-p2383,101204
(defun paredit-indent-sexps ()paredit-indent-sexps2396,101855
(defun paredit-forward-and-indent ()paredit-forward-and-indent2403,102100
(defun paredit-skip-whitespace (trailing-p &optional limit)paredit-skip-whitespace2409,102287
(defalias 'paredit-region-active-pparedit-region-active-p2417,102709
(defun paredit-hack-kill-region (start end)paredit-hack-kill-region2423,102899
(defun paredit-current-parse-state ()paredit-current-parse-state2445,103880
(defun paredit-in-string-p (&optional state)paredit-in-string-p2454,104241
(defun paredit-string-start+end-points (&optional state)paredit-string-start+end-points2462,104586
(defun paredit-in-comment-p (&optional state)paredit-in-comment-p2476,105208
(defun paredit-point-at-sexp-boundary (n)paredit-point-at-sexp-boundary2485,105589
(defun paredit-point-at-sexp-start ()paredit-point-at-sexp-start2490,105754
(defun paredit-point-at-sexp-end ()paredit-point-at-sexp-end2496,105864
(defun paredit-lose-if-not-in-sexp (command)paredit-lose-if-not-in-sexp2502,105972
(defun paredit-check-region (start end)paredit-check-region2508,106174
(defun paredit-region-ok-p (start end)paredit-region-ok-p2518,106443

paredit-22/paredit-pkg.el,121
(define-package "paredit" "22" "minor mode for editing parentheses  -*- Mode: Emacs-Lisp -*-" (quote nil))"paredit"1,0

paredit-22/paredit-autoloads.el,0

all-1.0/all-autoloads.el,0

all-1.0/all.el,656
(defvar all-mode-mapall-mode-map49,1689
(defvar all-buffer nil)all-buffer54,1804
(define-derived-mode all-mode fundamental-mode "All"all-mode57,1870
(defun all-mode-find (pos)all-mode-find67,2278
(defun all-mode-find-overlay (pos)all-mode-find-overlay74,2525
(defun all-mode-goto ()all-mode-goto81,2775
(defvar all-initialization-p nil)all-initialization-p90,3045
(defun all-before-change-function (from to)all-before-change-function92,3080
(defun all-after-change-function (from to length)all-after-change-function101,3404
(defun all (regexp &optional nlines)all115,3831
(defun all-insert (start end regexp nlines)all-insert184,6077

all-1.0/all-pkg.el,92
(define-package "all" "1.0" "Edit all lines matching a given regexp" (quote nil))"all"1,0

move-text-1.0/move-text.el,229
(defun move-text-internal (arg)move-text-internal57,1772
(defun move-text-down (arg)move-text-down81,2468
(defun move-text-up (arg)move-text-up88,2640
(defun move-text-default-bindings ()move-text-default-bindings95,2812

move-text-1.0/move-text-autoloads.el,0

move-text-1.0/move-text-pkg.el,114
(define-package "move-text" "1.0" "Move current line or region with M-up or M-down." (quote nil))"move-text"1,0

rainbow-delimiters-1.3.21/rainbow-delimiters-pkg.el,161
(define-package "rainbow-delimiters" "1.3.21" "Highlight nested parens, brackets, braces a different color at each depth." (quote nil))"rainbow-delimiters"1,0

rainbow-delimiters-1.3.21/rainbow-delimiters-autoloads.el,84
(defvar global-rainbow-delimiters-mode nil "\global-rainbow-delimiters-mode21,575

rainbow-delimiters-1.3.21/rainbow-delimiters.el,2891
(defgroup rainbow-delimiters nilrainbow-delimiters149,5995
(defgroup rainbow-delimiters-faces nilrainbow-delimiters-faces156,6306
(defgroup rainbow-delimiters-toggle-delimiter-highlighting nilrainbow-delimiters-toggle-delimiter-highlighting168,6794
(defcustom rainbow-delimiters-highlight-parens-p trainbow-delimiters-highlight-parens-p175,7083
(defcustom rainbow-delimiters-highlight-brackets-p trainbow-delimiters-highlight-brackets-p184,7392
(defcustom rainbow-delimiters-highlight-braces-p trainbow-delimiters-highlight-braces-p193,7690
(defface rainbow-delimiters-unmatched-facerainbow-delimiters-unmatched-face206,8020
(defface rainbow-delimiters-depth-1-facerainbow-delimiters-depth-1-face213,8311
(defface rainbow-delimiters-depth-2-facerainbow-delimiters-depth-2-face220,8596
(defface rainbow-delimiters-depth-3-facerainbow-delimiters-depth-3-face226,8813
(defface rainbow-delimiters-depth-4-facerainbow-delimiters-depth-4-face232,9030
(defface rainbow-delimiters-depth-5-facerainbow-delimiters-depth-5-face238,9247
(defface rainbow-delimiters-depth-6-facerainbow-delimiters-depth-6-face244,9464
(defface rainbow-delimiters-depth-7-facerainbow-delimiters-depth-7-face250,9681
(defface rainbow-delimiters-depth-8-facerainbow-delimiters-depth-8-face256,9898
(defface rainbow-delimiters-depth-9-facerainbow-delimiters-depth-9-face262,10115
(defconst rainbow-delimiters-max-face-count 9rainbow-delimiters-max-face-count271,10431
(defsubst rainbow-delimiters-depth-face (depth)rainbow-delimiters-depth-face278,10627
(defvar rainbow-delimiters-all-delimiters-syntax-table nilrainbow-delimiters-all-delimiters-syntax-table300,11554
(defun rainbow-delimiters-make-syntax-table-all-delimiters (syntax-table)rainbow-delimiters-make-syntax-table-all-delimiters309,12041
(defun rainbow-delimiters-depth (point)rainbow-delimiters-depth320,12508
(defsubst rainbow-delimiters-propertize-delimiter (loc depth)rainbow-delimiters-propertize-delimiter334,12972
(defsubst rainbow-delimiters-unpropertize-delimiter (loc)rainbow-delimiters-unpropertize-delimiter353,13818
(defun rainbow-delimiters-char-ineligible-p (loc)rainbow-delimiters-char-ineligible-p361,14126
(defsubst rainbow-delimiters-apply-color (delim depth loc)rainbow-delimiters-apply-color382,15097
(defvar rainbow-delimiters-delim-regex "\\(\(\\|\)\\|\\[\\|\\]\\|\{\\|\}\\)"rainbow-delimiters-delim-regex399,15793
(defun rainbow-delimiters-propertize-region (start end)rainbow-delimiters-propertize-region403,15984
(defun rainbow-delimiters-unpropertize-region (start end)rainbow-delimiters-unpropertize-region440,17936
(define-minor-mode rainbow-delimiters-moderainbow-delimiters-mode453,18377
(defun rainbow-delimiters-mode-enable ()rainbow-delimiters-mode-enable466,19085
(define-globalized-minor-mode global-rainbow-delimiters-modeglobal-rainbow-delimiters-mode470,19173

sr-speedbar-0.1.8/sr-speedbar-pkg.el,91
(define-package "sr-speedbar" "0.1.8" "Same frame speedbar" (quote nil))"sr-speedbar"1,0

sr-speedbar-0.1.8/sr-speedbar-autoloads.el,0

sr-speedbar-0.1.8/sr-speedbar.el,3231
(defgroup sr-speedbar nilsr-speedbar244,8813
(defcustom sr-speedbar-width-x 24sr-speedbar-width-x248,8885
(defcustom sr-speedbar-width-console 24sr-speedbar-width-console253,9023
(defcustom sr-speedbar-max-width 50sr-speedbar-max-width258,9158
(defcustom sr-speedbar-auto-refresh tsr-speedbar-auto-refresh266,9394
(defcustom sr-speedbar-right-side tsr-speedbar-right-side274,9613
(defcustom sr-speedbar-delete-windows nilsr-speedbar-delete-windows283,9872
(defcustom sr-speedbar-skip-other-window-p nilsr-speedbar-skip-other-window-p293,10174
(defconst sr-speedbar-version "0.1.4"sr-speedbar-version312,10881
(defconst sr-speedbar-buffer-name "*SPEEDBAR*"sr-speedbar-buffer-name315,10942
(defvar sr-speedbar-width nilsr-speedbar-width319,11099
(defvar sr-speedbar-window nilsr-speedbar-window322,11169
(defvar sr-speedbar-last-refresh-dictionary nilsr-speedbar-last-refresh-dictionary325,11223
(defun sr-speedbar-toggle ()sr-speedbar-toggle329,11422
(defun sr-speedbar-open ()sr-speedbar-open341,11804
(defun sr-speedbar-close ()sr-speedbar-close392,14733
(defun sr-speedbar-select-window ()sr-speedbar-select-window413,15530
(defun sr-speedbar-refresh-turn-on ()sr-speedbar-refresh-turn-on420,15755
(defun sr-speedbar-refresh-turn-off ()sr-speedbar-refresh-turn-off426,15953
(defun sr-speedbar-refresh-toggle ()sr-speedbar-refresh-toggle432,16155
(defun sr-speedbar-exist-p ()sr-speedbar-exist-p439,16453
(defun sr-speedbar-window-p ()sr-speedbar-window-p445,16663
(defun sr-speedbar-remember-window-width ()sr-speedbar-remember-window-width450,16846
(defun sr-speedbar-recalculate-width ()sr-speedbar-recalculate-width458,17141
(defun sr-speedbar-get-window ()sr-speedbar-get-window467,17518
(defun sr-speedbar-before-visiting-file-hook ()sr-speedbar-before-visiting-file-hook485,18207
(defun sr-speedbar-before-visiting-tag-hook ()sr-speedbar-before-visiting-tag-hook489,18354
(defun sr-speedbar-visiting-file-hook ()sr-speedbar-visiting-file-hook493,18499
(defun sr-speedbar-visiting-tag-hook ()sr-speedbar-visiting-tag-hook497,18632
(defun sr-speedbar-kill-buffer-hook ()sr-speedbar-kill-buffer-hook501,18763
(defun sr-speedbar-refresh ()sr-speedbar-refresh513,19359
(defun sr-speedbar-handle-auto-refresh (activate &optional echo-show)sr-speedbar-handle-auto-refresh520,19696
(defun sr-speedbar-current-window-take-width (&optional window)sr-speedbar-current-window-take-width531,20233
(defun sr-speedbar-window-dedicated-only-one-p ()sr-speedbar-window-dedicated-only-one-p537,20455
(defun sr-speedbar-window-exist-p (window)sr-speedbar-window-exist-p552,20927
(defun sr-speedbar-buffer-exist-p (buffer)sr-speedbar-buffer-exist-p557,21073
(defun sr-speedbar-handle-other-window-advice (activate)sr-speedbar-handle-other-window-advice562,21219
(defadvice delete-other-windows (around sr-speedbar-delete-other-window-advice activate)delete-other-windows572,21694
(defadvice delete-window (before sr-speedbar-delete-window-advice activate)delete-window584,22281
(defadvice pop-to-buffer (before sr-speedbar-pop-to-buffer-advice activate)pop-to-buffer590,22600
(defadvice other-window (after sr-speedbar-other-window-advice)other-window610,23604

magit-1.0.0/magit.el,29665
(defgroup magit nilmagit89,3045
(defcustom magit-git-executable "git"magit-git-executable94,3134
(defcustom magit-git-standard-options '("--no-pager")magit-git-standard-options99,3242
(defcustom magit-repo-dirs nilmagit-repo-dirs104,3378
(defcustom magit-repo-dirs-depth 3magit-repo-dirs-depth111,3603
(defcustom magit-save-some-buffers tmagit-save-some-buffers118,3843
(defcustom magit-save-some-buffers-predicatemagit-save-some-buffers-predicate127,4214
(defcustom magit-commit-all-when-nothing-staged 'askmagit-commit-all-when-nothing-staged137,4618
(defcustom magit-commit-signoff nilmagit-commit-signoff150,5207
(defcustom magit-log-cutoff-length 100magit-log-cutoff-length155,5325
(defcustom magit-log-infinite-length 99999magit-log-infinite-length160,5473
(defcustom magit-process-popup-time -1magit-process-popup-time165,5624
(defcustom magit-revert-item-confirm tmagit-revert-item-confirm172,5878
(defcustom magit-log-edit-confirm-cancellation nilmagit-log-edit-confirm-cancellation177,6005
(defcustom magit-remote-ref-format 'branch-then-remotemagit-remote-ref-format182,6156
(defcustom magit-process-connection-type (not (eq system-type 'cygwin))magit-process-connection-type198,6846
(defcustom magit-completing-read-function 'magit-builtin-completing-readmagit-completing-read-function206,7142
(defgroup magit-faces nilmagit-faces213,7434
(defface magit-headermagit-header219,7551
(defface magit-section-titlemagit-section-title226,7693
(defface magit-branchmagit-branch231,7819
(defface magit-diff-file-headermagit-diff-file-header236,7942
(defface magit-diff-hunk-headermagit-diff-hunk-header241,8066
(defface magit-diff-addmagit-diff-add246,8204
(defface magit-diff-nonemagit-diff-none254,8435
(defface magit-diff-delmagit-diff-del259,8542
(defface magit-log-graphmagit-log-graph267,8777
(defface magit-log-sha1magit-log-sha1275,9010
(defface magit-log-messagemagit-log-message283,9244
(defface magit-item-highlightmagit-item-highlight288,9356
(defface magit-item-markmagit-item-mark296,9590
(defface magit-log-tag-labelmagit-log-tag-label304,9809
(defface magit-log-head-label-bisect-goodmagit-log-head-label-bisect-good312,10060
(defface magit-log-head-label-bisect-badmagit-log-head-label-bisect-bad324,10396
(defface magit-log-head-label-remotemagit-log-head-label-remote336,10716
(defface magit-log-head-label-tagsmagit-log-head-label-tags348,11058
(defface magit-log-head-label-patchesmagit-log-head-label-patches360,11394
(defvar magit-custom-options '()magit-custom-options372,11715
(defvar magit-read-rev-history nilmagit-read-rev-history375,11813
(defvar magit-omit-untracked-dir-contents nilmagit-omit-untracked-dir-contents378,11897
(defface magit-log-head-label-localmagit-log-head-label-local381,12025
(defface magit-menu-selected-optionmagit-menu-selected-option393,12368
(defvar magit-mode-mapmagit-mode-map401,12605
(defvar magit-commit-mode-mapmagit-commit-mode-map446,14963
(defvar magit-status-mode-mapmagit-status-mode-map453,15194
(defvar magit-stash-mode-mapmagit-stash-mode-map482,16616
(defvar magit-log-mode-mapmagit-log-mode-map492,17016
(defvar magit-reflog-mode-mapmagit-reflog-mode-map509,17799
(defvar magit-diff-mode-mapmagit-diff-mode-map521,18279
(defvar magit-wazzup-mode-mapmagit-wazzup-mode-map531,18678
(defvar magit-show-branches-mode-mapmagit-show-branches-mode-map546,19332
(defvar magit-bug-report-urlmagit-bug-report-url562,20093
(defun magit-bug-report (str)magit-bug-report565,20171
(defun magit-buffer-switch (buf)magit-buffer-switch571,20371
(defmacro magit-with-refresh (&rest body)magit-with-refresh578,20517
(defvar magit-submode nil)magit-submode594,20902
(defun magit-iswitchb-completing-read (prompt choices &optional predicate require-matchmagit-iswitchb-completing-read598,21014
(defun magit-builtin-completing-read (prompt choices &optional predicate require-matchmagit-builtin-completing-read609,21559
(defun magit-completing-read (prompt choices &optional predicate require-matchmagit-completing-read618,22076
(defun magit-use-region-p ()magit-use-region-p623,22327
(defun magit-goto-line (line)magit-goto-line628,22452
(defun magit-trim-line (str)magit-trim-line635,22611
(defun magit-split-lines (str)magit-split-lines642,22774
(defun magit-git-insert (args)magit-git-insert650,22983
(defun magit-git-output (args)magit-git-output656,23130
(defun magit-git-string (&rest args)magit-git-string662,23269
(defun magit-git-lines (&rest args)magit-git-lines665,23352
(defun magit-git-exit-code (&rest args)magit-git-exit-code668,23436
(defun magit-file-lines (file)magit-file-lines672,23579
(defun magit-write-file-lines (file lines)magit-write-file-lines681,23832
(defun magit-concat-with-delim (delim seqs)magit-concat-with-delim687,23965
(defun magit-get (&rest keys)magit-get695,24150
(defun magit-get-all (&rest keys)magit-get-all698,24247
(defun magit-set (val &rest keys)magit-set701,24359
(defun magit-remove-conflicts (alist)magit-remove-conflicts706,24556
(defun magit-git-repo-p (dir)magit-git-repo-p726,25189
(defun magit-no-commit-p ()magit-no-commit-p729,25269
(defun magit-list-repos* (dir level)magit-list-repos*734,25439
(defun magit-list-repos (dirs)magit-list-repos746,25824
(defun magit-get-top-dir (cwd)magit-get-top-dir756,26062
(defun magit-get-ref (ref)magit-get-ref764,26396
(defun magit-get-current-branch ()magit-get-current-branch767,26470
(defun magit-get-remote (branch)magit-get-remote774,26646
(defun magit-get-current-remote ()magit-get-current-remote782,27024
(defun magit-ref-exists-p (ref)magit-ref-exists-p789,27309
(defun magit-read-top-dir (rawp)magit-read-top-dir792,27399
(defun magit-rev-parse (ref)magit-rev-parse804,27871
(defun magit-ref-ambiguous-p (ref)magit-ref-ambiguous-p808,27972
(defun magit-name-rev (rev)magit-name-rev814,28205
(defun magit-put-line-property (prop val)magit-put-line-property842,29588
(defun magit-format-commit (commit format)magit-format-commit846,29724
(defun magit-current-line ()magit-current-line851,29866
(defun magit-insert-region (beg end buf)magit-insert-region855,29984
(defun magit-insert-current-line (buf)magit-insert-current-line860,30135
(defun magit-file-uptodate-p (file)magit-file-uptodate-p866,30338
(defun magit-anything-staged-p ()magit-anything-staged-p869,30434
(defun magit-everything-clean-p ()magit-everything-clean-p872,30535
(defun magit-commit-parents (commit)magit-commit-parents876,30665
(defun magit-choose-parent-id (commit op)magit-choose-parent-id881,30822
(defvar magit-current-range nilmagit-current-range889,31022
(defun magit-list-interesting-refs (&optional uninteresting)magit-list-interesting-refs899,31444
(defvar magit-uninteresting-refs '("refs/remotes/\\([^/]+\\)/HEAD$"))magit-uninteresting-refs934,33274
(defun magit-read-rev (prompt &optional def uninteresting)magit-read-rev939,33538
(defun magit-read-rev-range (op &optional def-beg def-end)magit-read-rev-range949,33979
(defun magit-rev-to-git (rev)magit-rev-to-git960,34349
(defun magit-rev-range-to-git (range)magit-rev-range-to-git967,34491
(defun magit-rev-describe (rev)magit-rev-describe978,34780
(defun magit-rev-range-describe (range things)magit-rev-range-describe985,34926
(defun magit-default-rev ()magit-default-rev996,35287
(defun magit-read-remote (&optional prompt def)magit-read-remote1004,35508
(defstruct magit-sectionmagit-section1026,36432
(defvar magit-top-section nilmagit-top-section1030,36538
(defvar magit-old-top-section nil)magit-old-top-section1035,36705
(defvar magit-section-hidden-default nil)magit-section-hidden-default1037,36741
(defun magit-new-section (title type)magit-new-section1039,36784
(defun magit-cancel-section (section)magit-cancel-section1060,37540
(defmacro magit-with-section (title type &rest body)magit-with-section1070,37885
(defun magit-set-section-info (info &optional section)magit-set-section-info1088,38538
(defun magit-set-section-needs-refresh-on-show (flag &optional section)magit-set-section-needs-refresh-on-show1091,38661
(defmacro magit-create-buffer-sections (&rest body)magit-create-buffer-sections1096,38821
(defun magit-propertize-section (section)magit-propertize-section1111,39380
(defun magit-find-section (path top)magit-find-section1119,39668
(defun magit-section-path (section)magit-section-path1130,40036
(defun magit-find-section-at (pos secs)magit-find-section-at1138,40281
(defun magit-find-section-after (pos secs)magit-find-section-after1150,40660
(defun magit-find-section-before (pos secs)magit-find-section-before1157,40891
(defun magit-current-section ()magit-current-section1166,41168
(defun magit-insert-section (section-title-and-typemagit-insert-section1171,41315
(defun magit-git-section (section-title-and-typemagit-git-section1214,42746
(defun magit-next-section (section)magit-next-section1226,43088
(defun magit-goto-next-section ()magit-goto-next-section1235,43360
(defun magit-prev-section (section)magit-prev-section1260,44129
(defun magit-goto-previous-section ()magit-goto-previous-section1274,44557
(defun magit-goto-parent-section ()magit-goto-parent-section1294,45285
(defun magit-goto-section (path)magit-goto-section1301,45503
(defun magit-for-all-sections (func &optional top)magit-for-all-sections1308,45727
(defun magit-section-set-hidden (section hidden)magit-section-set-hidden1318,46063
(defun magit-section-any-hidden (section)magit-section-any-hidden1335,46670
(defun magit-section-collapse (section)magit-section-collapse1343,46963
(defun magit-section-expand (section)magit-section-expand1349,47176
(defun magit-section-expand-all-aux (section)magit-section-expand-all-aux1355,47384
(defun magit-section-expand-all (section)magit-section-expand-all1361,47602
(defun magit-section-hideshow (flag-or-func)magit-section-hideshow1366,47767
(defun magit-show-section ()magit-show-section1378,48291
(defun magit-hide-section ()magit-hide-section1383,48395
(defun magit-collapse-section ()magit-collapse-section1388,48497
(defun magit-expand-section ()magit-expand-section1393,48644
(defun magit-toggle-file-section ()magit-toggle-file-section1398,48787
(defun magit-toggle-section ()magit-toggle-section1405,49043
(defun magit-expand-collapse-section ()magit-expand-collapse-section1412,49245
(defun magit-cycle-section ()magit-cycle-section1422,49523
(defun magit-section-lineage (s)magit-section-lineage1438,50042
(defun magit-section-show-level (section level threshold path)magit-section-show-level1443,50209
(defun magit-show-level (level all)magit-show-level1452,50604
(defun magit-show-only-files ()magit-show-only-files1462,51053
(defun magit-show-only-files-all ()magit-show-only-files-all1471,51349
(defmacro magit-define-level-shower-1 (level all)magit-define-level-shower-11480,51622
(defmacro magit-define-level-shower (level)magit-define-level-shower1493,52111
(defmacro magit-define-section-jumper (sym title)magit-define-section-jumper1500,52365
(defmacro magit-define-inserter (sym arglist &rest body)magit-define-inserter1511,52713
(defvar magit-highlight-overlay nil)magit-highlight-overlay1523,53151
(defvar magit-highlighted-section nil)magit-highlighted-section1525,53189
(defun magit-highlight-section ()magit-highlight-section1527,53229
(defun magit-section-context-type (section)magit-section-context-type1543,53852
(defun magit-prefix-p (prefix list)magit-prefix-p1554,54160
(defmacro magit-section-case (head &rest clauses)magit-section-case1565,54547
(defmacro magit-section-action (head &rest clauses)magit-section-action1613,56522
(defmacro magit-add-action (head &rest clauses)magit-add-action1618,56665
(defun magit-wash-sequence (func)magit-wash-sequence1636,57418
(defmacro magit-define-command (sym arglist &rest body)magit-define-command1643,57616
(defun magit-set-mode-line-process (str)magit-set-mode-line-process1675,58765
(defun magit-process-indicator-from-command (comps)magit-process-indicator-from-command1681,58953
(defvar magit-process nil)magit-process1691,59315
(defvar magit-process-client-buffer nil)magit-process-client-buffer1692,59342
(defvar magit-process-buffer-name "*magit-process*"magit-process-buffer-name1693,59383
(defun magit-run* (cmd-and-argsmagit-run*1696,59479
(defun magit-process-sentinel (process event)magit-process-sentinel1785,62608
(defun magit-password (proc string)magit-password1799,63128
(defun magit-process-filter (proc string)magit-process-filter1808,63577
(defun magit-run (cmd &rest args)magit-run1827,64291
(defun magit-run-git (&rest args)magit-run-git1831,64383
(defun magit-run-with-input (input cmd &rest args)magit-run-with-input1837,64540
(defun magit-run-git-with-input (input &rest args)magit-run-git-with-input1841,64671
(defun magit-run-git-async (&rest args)magit-run-git-async1848,64869
(defun magit-run-async-with-input (input cmd &rest args)magit-run-async-with-input1855,65111
(defun magit-display-process ()magit-display-process1858,65221
(defun magit-true (prompt)magit-true1880,65942
(defvar magit-mode-hook nil "Hook run by `magit-mode'.")magit-mode-hook1945,68034
(defvar magit-refresh-function nil)magit-refresh-function1949,68132
(defvar magit-refresh-args nil)magit-refresh-args1953,68271
(defvar last-point)last-point1957,68398
(defun magit-remember-point ()magit-remember-point1959,68419
(defun magit-invisible-region-end (pos)magit-invisible-region-end1962,68480
(defun magit-invisible-region-start (pos)magit-invisible-region-start1967,68635
(defun magit-correct-point-after-command ()magit-correct-point-after-command1972,68801
(defun magit-post-command-hook ()magit-post-command-hook1990,69463
(defun magit-mode ()magit-mode1994,69565
(defun magit-mode-init (dir submode refresh-func &rest refresh-args)magit-mode-init2014,70152
(defun magit-find-buffer (submode &optional dir)magit-find-buffer2022,70387
(defun magit-find-status-buffer (&optional dir)magit-find-status-buffer2032,70735
(defun magit-for-all-buffers (func &optional dir)magit-for-all-buffers2035,70819
(defun magit-refresh-buffer (&optional buffer)magit-refresh-buffer2043,71054
(defun magit-string-has-prefix-p (string prefix)magit-string-has-prefix-p2067,71927
(defun magit-revert-buffers (dir &optional ignore-modtime)magit-revert-buffers2070,72047
(defun magit-update-vc-modeline (dir)magit-update-vc-modeline2084,72605
(defvar magit-refresh-needing-buffers nil)magit-refresh-needing-buffers2096,73036
(defvar magit-refresh-pending nil)magit-refresh-pending2097,73079
(defun magit-refresh-wrapper (func)magit-refresh-wrapper2099,73115
(defun magit-need-refresh (&optional buffer)magit-need-refresh2114,73578
(defun magit-refresh ()magit-refresh2120,73826
(defun magit-refresh-all ()magit-refresh-all2128,74053
(defun magit-wash-untracked-file ()magit-wash-untracked-file2137,74341
(defun magit-wash-untracked-files ()magit-wash-untracked-files2147,74621
(defun magit-insert-untracked-files ()magit-insert-untracked-files2157,74972
(defvar magit-diff-context-lines 3)magit-diff-context-lines2169,75370
(defun magit-diff-U-arg ()magit-diff-U-arg2171,75407
(defun magit-diff-smaller-hunks (&optional count)magit-diff-smaller-hunks2174,75479
(defun magit-diff-larger-hunks (&optional count)magit-diff-larger-hunks2180,75696
(defun magit-diff-default-hunks ()magit-diff-default-hunks2186,75904
(defun magit-diff-line-file ()magit-diff-line-file2192,76068
(defun magit-wash-diffs ()magit-wash-diffs2200,76279
(defun magit-wash-diff-or-other-file ()magit-wash-diff-or-other-file2203,76364
(defun magit-wash-other-file ()magit-wash-other-file2207,76461
(defvar magit-hide-diffs nil)magit-hide-diffs2217,76746
(defun magit-insert-diff-title (status file file2)magit-insert-diff-title2219,76777
(defun magit-wash-diff-section ()magit-wash-diff-section2236,77227
(defun magit-wash-diff ()magit-wash-diff2279,78566
(defun magit-diff-item-kind (diff)magit-diff-item-kind2284,78736
(defun magit-diff-item-file (diff)magit-diff-item-file2287,78807
(defun magit-diff-item-file2 (diff)magit-diff-item-file22290,78879
(defun magit-wash-hunk ()magit-wash-hunk2293,78953
(defvar magit-diff-options nil)magit-diff-options2316,79729
(defun magit-insert-diff (file)magit-insert-diff2318,79762
(defvar magit-last-raw-diff nil)magit-last-raw-diff2334,80183
(defvar magit-ignore-unmerged-raw-diffs nil)magit-ignore-unmerged-raw-diffs2335,80216
(defun magit-wash-raw-diffs ()magit-wash-raw-diffs2337,80262
(defun magit-wash-raw-diff ()magit-wash-raw-diff2341,80379
(defun magit-hunk-item-diff (hunk)magit-hunk-item-diff2378,81917
(defun magit-diff-item-insert-header (diff buf)magit-diff-item-insert-header2384,82097
(defun magit-insert-diff-item-patch (diff buf)magit-insert-diff-item-patch2394,82448
(defun magit-insert-hunk-item-patch (hunk buf)magit-insert-hunk-item-patch2402,82690
(defun magit-insert-hunk-item-region-patch (hunk reverse beg end buf)magit-insert-hunk-item-region-patch2407,82898
(defun magit-hunk-item-is-conflict-p (hunk)magit-hunk-item-is-conflict-p2428,83672
(defun magit-hunk-item-target-line (hunk)magit-hunk-item-target-line2433,83851
(defvar magit-tmp-buffer-name " *magit-tmp*")magit-tmp-buffer-name2451,84437
(defmacro with-magit-tmp-buffer (var &rest body)with-magit-tmp-buffer2453,84484
(defun magit-apply-diff-item (diff &rest args)magit-apply-diff-item2461,84719
(defun magit-apply-hunk-item* (hunk reverse &rest args)magit-apply-hunk-item*2469,85009
(defun magit-apply-hunk-item (hunk &rest args)magit-apply-hunk-item2480,85425
(defun magit-apply-hunk-item-reverse (hunk &rest args)magit-apply-hunk-item-reverse2483,85523
(defvar magit-log-oneline-remagit-log-oneline-re2506,86413
(defvar magit-present-log-line-function 'magit-present-log-linemagit-present-log-line-function2517,86910
(defun magit-present-log-line (graph sha1 refs message)magit-present-log-line2522,87149
(defvar magit-log-count ()magit-log-count2567,89234
(defmacro magit-create-log-buffer-sections (&rest body)magit-create-log-buffer-sections2570,89341
(defun magit-wash-log-line ()magit-wash-log-line2584,89875
(defun magit-wash-log ()magit-wash-log2614,90824
(defvar magit-currently-shown-commit nil)magit-currently-shown-commit2618,90937
(defun magit-wash-commit ()magit-wash-commit2620,90980
(defun magit-refresh-commit-buffer (commit)magit-refresh-commit-buffer2628,91261
(define-minor-mode magit-commit-modemagit-commit-mode2639,91531
(defvar magit-commit-buffer-name "*magit-commit*"magit-commit-buffer-name2648,91714
(defun magit-show-commit (commit &optional scroll)magit-show-commit2651,91818
(defvar magit-marked-commit nil)magit-marked-commit2676,92647
(defvar magit-mark-overlay nil)magit-mark-overlay2678,92681
(defun magit-refresh-marked-commits ()magit-refresh-marked-commits2682,92808
(defun magit-refresh-marked-commits-in-buffer ()magit-refresh-marked-commits-in-buffer2685,92916
(defun magit-set-marked-commit (commit)magit-set-marked-commit2701,93464
(defun magit-marked-commit ()magit-marked-commit2705,93575
(defun magit-remote-branch-name (remote branch)magit-remote-branch-name2709,93667
(defun magit-remote-branch-for (local-branch &optional prepend-remote-name)magit-remote-branch-for2731,94388
(defvar magit-remote-string-hook nil)magit-remote-string-hook2746,95003
(defun magit-remote-string (remote remote-branch)magit-remote-string2748,95042
(defun magit-refresh-status ()magit-refresh-status2764,95450
(defun magit-init (dir)magit-init2805,97152
(define-minor-mode magit-status-modemagit-status-mode2822,97822
(defun magit-save-some-buffers (&optional msg pred)magit-save-some-buffers2831,98010
(defun magit-save-buffers-predicate-all ()magit-save-buffers-predicate-all2856,98974
(defun magit-save-buffers-predicate-tree-only ()magit-save-buffers-predicate-tree-only2860,99075
(defun magit-status (dir)magit-status2876,99692
(defun magit-stage-item (&optional ask)magit-stage-item2907,100818
(defun magit-unstage-item ()magit-unstage-item2934,101818
(defun magit-stage-all (&optional also-untracked-p)magit-stage-all2953,102494
(defun magit-unstage-all ()magit-unstage-all2962,102832
(defun magit-get-tracking-name (remote branch)magit-get-tracking-name2970,102996
(defun magit-maybe-create-local-tracking-branch (rev)magit-maybe-create-local-tracking-branch2986,103763
(defun magit-read-create-branch-args ()magit-read-create-branch-args3019,105232
(defun magit-delete-branch (branch)magit-delete-branch3040,105985
(defun magit-move-branch (old new)magit-move-branch3053,106543
(defun magit-guess-branch ()magit-guess-branch3063,106907
(defun magit-merge (revision)magit-merge3070,107122
(defun magit-rebase-info ()magit-rebase-info3084,107554
(defun magit-rebase-step ()magit-rebase-step3117,109002
(defun magit-read-rewrite-info ()magit-read-rewrite-info3187,111848
(defun magit-write-rewrite-info (info)magit-write-rewrite-info3194,112073
(defun magit-rewrite-set-commit-property (commit prop value)magit-rewrite-set-commit-property3221,112880
(defun magit-rewrite-set-used ()magit-rewrite-set-used3230,113185
(defun magit-rewrite-set-unused ()magit-rewrite-set-unused3236,113350
(defun magit-rewrite-start (from &optional onto)magit-rewrite-start3252,113820
(defun magit-rewrite-stop (&optional noconfirm)magit-rewrite-stop3266,114442
(defun magit-rewrite-abort ()magit-rewrite-abort3276,114723
(defun magit-rewrite-finish ()magit-rewrite-finish3288,115097
(defun magit-rewrite-finish-step (first-p)magit-rewrite-finish-step3293,115203
(defun magit-shell-command (command)magit-shell-command3340,116688
(defun magit-git-command (command)magit-git-command3350,116990
(defvar magit-log-edit-mode-hook nilmagit-log-edit-mode-hook3399,118703
(defvar magit-log-edit-buffer-name "*magit-edit-log*"magit-log-edit-buffer-name3402,118781
(defvar magit-log-edit-mode-mapmagit-log-edit-mode-map3405,118884
(defvar magit-pre-log-edit-window-configuration nil)magit-pre-log-edit-window-configuration3420,119643
(defun magit-log-fill-paragraph (&optional justify)magit-log-fill-paragraph3422,119697
(define-derived-mode magit-log-edit-mode text-mode "Magit Log Edit"magit-log-edit-mode3434,120176
(defun magit-log-edit-cleanup ()magit-log-edit-cleanup3438,120334
(defun magit-log-edit-append (str)magit-log-edit-append3446,120546
(defconst magit-log-header-end "-- End of Magit header --\n")magit-log-header-end3451,120704
(defun magit-log-edit-get-fields ()magit-log-edit-get-fields3453,120767
(defun magit-log-edit-set-fields (fields)magit-log-edit-set-fields3468,121228
(defun magit-log-edit-set-field (name value)magit-log-edit-set-field3484,121785
(defun magit-log-edit-get-field (name)magit-log-edit-get-field3496,122132
(defun magit-log-edit-toggle-field (name default)magit-log-edit-toggle-field3499,122221
(defun magit-log-edit-setup-author-env (author)magit-log-edit-setup-author-env3517,122853
(defun magit-log-edit-push-to-comment-ring (comment)magit-log-edit-push-to-comment-ring3534,123426
(defun magit-log-edit-commit ()magit-log-edit-commit3539,123642
(defun magit-log-edit-cancel-log-message ()magit-log-edit-cancel-log-message3585,125667
(defun magit-log-edit-toggle-amending ()magit-log-edit-toggle-amending3597,126145
(defun magit-log-edit-toggle-signoff ()magit-log-edit-toggle-signoff3605,126465
(defun magit-log-edit-toggle-allow-empty ()magit-log-edit-toggle-allow-empty3611,126708
(defun magit-pop-to-log-edit (operation)magit-pop-to-log-edit3617,126941
(defun magit-log-edit (amend-p)magit-log-edit3629,127396
(defun magit-add-log ()magit-add-log3658,128440
(defun magit-wash-stash ()magit-wash-stash3734,130765
(defun magit-wash-stashes ()magit-wash-stashes3750,131272
(defvar magit-currently-shown-stash nil)magit-currently-shown-stash3777,132311
(define-minor-mode magit-stash-modemagit-stash-mode3779,132353
(defvar magit-stash-buffer-name "*magit-stash*"magit-stash-buffer-name3788,132539
(defun magit-show-stash (stash &optional scroll)magit-show-stash3791,132629
(defun magit-commit-at-point (&optional nil-ok-p)magit-commit-at-point3820,133783
(defun magit-apply-commit (commit &optional docommit noerase revert)magit-apply-commit3831,134296
(defun magit-apply-item ()magit-apply-item3853,135057
(defun magit-cherry-pick-item ()magit-cherry-pick-item3872,135595
(defmacro magit-with-revert-confirmation (&rest body)magit-with-revert-confirmation3883,135909
(defun magit-revert-item ()magit-revert-item3888,136079
(defvar magit-have-graph 'unset)magit-have-graph3908,136714
(defvar magit-have-decorate 'unset)magit-have-decorate3909,136747
(defun magit-configure-have-graph ()magit-configure-have-graph3915,136970
(defun magit-configure-have-decorate ()magit-configure-have-decorate3920,137155
(defun magit-log-show-more-entries (&optional arg)magit-log-show-more-entries3925,137357
(defun magit-refresh-log-buffer (range style args)magit-refresh-log-buffer3942,137969
(define-minor-mode magit-log-modemagit-log-mode3958,138474
(defvar magit-log-buffer-name "*magit-log*"magit-log-buffer-name3967,138650
(defvar magit-log-grep-buffer-name "*magit-grep-log*"magit-log-grep-buffer-name3969,138739
(defvar magit-reflog-head nilmagit-reflog-head4009,140056
(defun magit-refresh-reflog-buffer (head args)magit-refresh-reflog-buffer4014,140226
(define-minor-mode magit-reflog-modemagit-reflog-mode4025,140591
(defun magit-refresh-diff-buffer (range args)magit-refresh-diff-buffer4052,141358
(define-minor-mode magit-diff-modemagit-diff-mode4060,141626
(defun magit-diff-with-mark ()magit-diff-with-mark4084,142376
(defvar magit-wazzup-head nilmagit-wazzup-head4091,142511
(defvar magit-wazzup-all-p nilmagit-wazzup-all-p4096,142687
(defun magit-wazzup-toggle-ignore (branch edit)magit-wazzup-toggle-ignore4101,142881
(defun magit-refresh-wazzup-buffer (head all)magit-refresh-wazzup-buffer4115,143435
(define-minor-mode magit-wazzup-modemagit-wazzup-mode4163,145066
(defun magit-wazzup (&optional all)magit-wazzup4172,145292
(defun magit-ignore-file (file edit local)magit-ignore-file4184,145640
(defun magit-ignore-item ()magit-ignore-item4198,146087
(defun magit-ignore-item-locally ()magit-ignore-item-locally4206,146328
(defun magit-discard-diff (diff stagedp)magit-discard-diff4212,146502
(defun magit-discard-item ()magit-discard-item4228,147097
(defun magit-add-change-log-entry (&optional whoami file-name other-windowmagit-add-change-log-entry4264,148396
(defun magit-add-change-log-entry-other-window (&optional whoami file-name)magit-add-change-log-entry-other-window4279,149034
(defun magit-visit-item (&optional other-window)magit-visit-item4286,149329
(defun magit-show-item-or-scroll-up ()magit-show-item-or-scroll-up4316,150283
(defun magit-show-item-or-scroll-down ()magit-show-item-or-scroll-down4326,150514
(defun magit-mark-item (&optional unmark)magit-mark-item4336,150753
(defun magit-describe-item ()magit-describe-item4346,151021
(defun magit-copy-item-as-kill ()magit-copy-item-as-kill4357,151379
(defun magit-server-running-p ()magit-server-running-p4367,151624
(defun magit-interactive-rebase ()magit-interactive-rebase4394,152567
(define-derived-mode magit-show-branches-mode fundamental-modemagit-show-branches-mode4411,153232
(defun magit-quit-branches-window ()magit-quit-branches-window4414,153316
(defun magit--branch-name-from-line (line)magit--branch-name-from-line4420,153457
(defun magit--branch-name-at-point ()magit--branch-name-at-point4424,153611
(defun magit-branches-window-checkout ()magit-branches-window-checkout4429,153815
(defun magit-remove-remote (ref)magit-remove-remote4435,153994
(defun magit-remove-branch (&optional force)magit-remove-branch4441,154144
(defun magit--remotes ()magit--remotes4457,154809
(defun magit--branches-for-remote-repo (remote)magit--branches-for-remote-repo4461,154911
(defun magit-remove-branch-in-remote-repo (&optional branch-name-at-local)magit-remove-branch-in-remote-repo4473,155444
(defvar magit-branches-buffer-name "*magit-branches*")magit-branches-buffer-name4497,156673
(defun magit--is-branch-at-point-remote()magit--is-branch-at-point-remote4499,156729
(defun magit--branch-view-details (branch-line)magit--branch-view-details4503,156875
(defun magit-show-branches ()magit-show-branches4533,158173
(defun magit-change-what-branch-tracks ()magit-change-what-branch-tracks4580,160088
(defvar magit-ediff-file)magit-ediff-file4611,161771
(defvar magit-ediff-windows)magit-ediff-windows4612,161797
(defun magit-interactive-resolve (file)magit-interactive-resolve4616,161865
(defun magit-interactive-resolve-item ()magit-interactive-resolve-item4664,163957
(defun magit-list-buffers ()magit-list-buffers4670,164120
(defun remove-dupes (list)remove-dupes4678,164389
(defun magit-list-projects ()magit-list-projects4687,164628
(defun magit-submodule-update (&optional init)magit-submodule-update4697,164915
(defun magit-submodule-update-init ()magit-submodule-update-init4705,165236
(defun magit-submodule-init ()magit-submodule-init4710,165386
(defun magit-submodule-sync ()magit-submodule-sync4716,165578
(defun magit-run-git-gui ()magit-run-git-gui4722,165794
(defun magit-run-gitk ()magit-run-gitk4728,166004
(defun magit-string-match-p (regexp string &optional start)magit-string-match-p4736,166245

magit-1.0.0/magit-pkg.el,71
(define-package "magit" "1.0.0" "Control Git from Emacs.")"magit"1,0

magit-1.0.0/magit-autoloads.el,0

magit-1.0.0/magit-key-mode.el,2957
(defvar magit-key-mode-key-maps '()magit-key-mode-key-maps3,18
(defvar magit-key-mode-buf-name "*magit-key*"magit-key-mode-buf-name7,150
(defvar magit-key-mode-current-args '()magit-key-mode-current-args10,222
(defvar magit-key-mode-current-options '()magit-key-mode-current-options13,316
(defvar magit-log-mode-window-conf nilmagit-log-mode-window-conf16,413
(defvar magit-key-mode-groupsmagit-key-mode-groups19,505
(defun magit-key-mode-delete-group (group)magit-key-mode-delete-group133,3925
(defun magit-key-mode-add-group (group)magit-key-mode-add-group146,4365
(defun magit-key-mode-key-defined-p (for-group key)magit-key-mode-key-defined-p155,4762
(defun magit-key-mode-update-group (for-group thing &rest args)magit-key-mode-update-group164,5119
(defun magit-key-mode-insert-argument (for-group key desc arg read-func)magit-key-mode-insert-argument177,5679
(defun magit-key-mode-insert-switch (for-group key desc switch)magit-key-mode-insert-switch183,6001
(defun magit-key-mode-insert-action (for-group key desc func)magit-key-mode-insert-action189,6285
(defun magit-key-mode-options-for-group (for-group)magit-key-mode-options-for-group194,6535
(defun magit-key-mode-help (for-group)magit-key-mode-help200,6772
(defun magit-key-mode-exec-at-point ()magit-key-mode-exec-at-point214,7372
(defun magit-key-mode-build-keymap (for-group)magit-key-mode-build-keymap222,7669
(defun magit-key-mode-command (func)magit-key-mode-command265,9533
(defvar magit-key-mode-current-args nilmagit-key-mode-current-args277,9994
(defun magit-key-mode-add-argument (for-group arg-name input-func)magit-key-mode-add-argument281,10136
(defvar magit-key-mode-current-options '()magit-key-mode-current-options286,10361
(defun magit-key-mode-add-option (for-group option-name)magit-key-mode-add-option290,10488
(defun magit-key-mode-kill-buffer ()magit-key-mode-kill-buffer299,10895
(defvar magit-log-mode-window-conf nilmagit-log-mode-window-conf303,10990
(defun magit-key-mode (for-group &optional original-opts)magit-key-mode306,11067
(defun magit-key-mode-get-key-map (for-group)magit-key-mode-get-key-map334,12051
(defun magit-key-mode-redraw (for-group)magit-key-mode-redraw339,12243
(defun magit-key-mode-draw-header (header)magit-key-mode-draw-header353,12719
(defvar magit-key-mode-args-in-cols nilmagit-key-mode-args-in-cols357,12866
(defun magit-key-mode-draw-args (args)magit-key-mode-draw-args361,12981
(defun magit-key-mode-draw-switches (switches)magit-key-mode-draw-switches383,13899
(defun magit-key-mode-draw-actions (actions)magit-key-mode-draw-actions404,14905
(defun magit-key-mode-draw-in-cols (strings &optional one-col-each)magit-key-mode-draw-in-cols420,15527
(defun magit-key-mode-draw (for-group)magit-key-mode-draw440,16320
(defun magit-key-mode-de-generate (group)magit-key-mode-de-generate451,16788
(defun magit-key-mode-generate (group)magit-key-mode-generate456,16948

magit-1.0.0/50magit.el,0

magit-1.0.0/magit-svn.el,832
(defun magit-svn-find-rev (rev &optional branch)magit-svn-find-rev36,1101
(defun magit-svn-create-branch (name)magit-svn-create-branch53,1686
(defun magit-svn-rebase ()magit-svn-rebase57,1797
(defun magit-svn-dcommit ()magit-svn-dcommit61,1881
(defun magit-svn-enabled ()magit-svn-enabled65,1967
(defun magit-svn-get-local-ref (url)magit-svn-get-local-ref68,2037
(defvar magit-svn-get-ref-info-cache nilmagit-svn-get-ref-info-cache89,3049
(defun magit-svn-get-ref-info (&optional use-cache)magit-svn-get-ref-info95,3266
(defun magit-svn-get-ref (&optional use-cache)magit-svn-get-ref131,5014
(defun magit-svn-remote-string ()magit-svn-remote-string153,5998
(defun magit-svn-remote-update ()magit-svn-remote-update160,6210
(define-key magit-mode-map (kbd "N") 'magit-key-mode-popup-svn)magit-mode-map200,7601

magit-1.0.0/magit-topgit.el,344
(defcustom magit-topgit-executable "tg"magit-topgit-executable29,903
(defun magit-topgit-create-branch (branch parent)magit-topgit-create-branch36,1051
(defun magit-topgit-pull ()magit-topgit-pull43,1303
(defun magit-topgit-wash-topic ()magit-topgit-wash-topic49,1462
(defun magit-topgit-wash-topics ()magit-topgit-wash-topics64,2049

magit-1.0.0/Makefile,492
VERSION=1.0.0VERSION1,0
EMACS=emacsEMACS2,14
PREFIX=/usr/localPREFIX3,26
ELS=magit.el magit-svn.el magit-topgit.el magit-key-mode.elELS4,44
ELCS=$(ELS:.el=.elc)ELCS5,104
DIST_FILES=$(ELS) Makefile magit.texi README.md magit.spec.in magit-pkg.el.in 50magit.elDIST_FILES6,125
.PHONY=install.PHONY8,215
BATCH=$(EMACS) -batch -q -no-site-file -eval \BATCH10,231
	install-info --info-dir=$(DESTDIR)/$(PREFIX)/share/info $(DESTDIR)/$(PREFIX)/share/info/magit.info-info-dir42,1109

erc-nick-notify-0.2.1/erc-nick-notify-pkg.el,100
(define-package "erc-nick-notify" "0.2.1" "Notify popup for ERC" (quote nil))"erc-nick-notify"1,0

erc-nick-notify-0.2.1/erc-nick-notify.el,795
(defgroup erc-nick-notify nilerc-nick-notify112,2693
(defcustom erc-nick-notify-delay '(0 5 0)erc-nick-notify-delay116,2765
(defcustom erc-nick-notify-cmd "notify-send"erc-nick-notify-cmd122,2916
(defcustom erc-nick-notify-icon "~/MyEmacs/Image/Irc.png"erc-nick-notify-icon127,3042
(defcustom erc-nick-notify-timeout 10000erc-nick-notify-timeout132,3201
(defcustom erc-nick-notify-urgency "low"erc-nick-notify-urgency137,3365
(defcustom erc-nick-notify-category "im.received"erc-nick-notify-category142,3507
(defvar erc-nick-notify-last '(0 0 0)erc-nick-notify-last148,3713
(defvar erc-nick-notify-buffer nilerc-nick-notify-buffer151,3793
(defun erc-nick-notify-jump-last-channel ()erc-nick-notify-jump-last-channel155,3953
(defun erc-nick-notify ()erc-nick-notify163,4258

erc-nick-notify-0.2.1/erc-nick-notify-autoloads.el,0

nterm-0.1/nterm-pkg.el,79
(define-package "nterm" "0.1" "New TERMinal emulator" (quote nil))"nterm"1,0

nterm-0.1/nterm-autoloads.el,0

nterm-0.1/nterm.el,13028
(defvar nterm-mode-hook nilnterm-mode-hook79,2448
(defvar nterm-shell "/bin/bash"nterm-shell82,2517
(defvar nterm-buffer-name "*nterm*"nterm-buffer-name85,2581
(defvar nterm-height 24nterm-height88,2652
(defvar nterm-width 80nterm-width91,2708
(defvar nterm-double-width-alistnterm-double-width-alist94,2767
(defvar nterm-debug-emulator 1)nterm-debug-emulator107,3144
(defvar nterm-debug-vt100 2)nterm-debug-vt100108,3176
(defvar nterm-debug-cursor 4)nterm-debug-cursor109,3205
(defvar nterm-debug-ansi 8)nterm-debug-ansi110,3235
(defvar nterm-debug-vt52 16)nterm-debug-vt52111,3263
(defvar nterm-debug 0nterm-debug123,3589
(defvar nterm-record-enable nilnterm-record-enable129,3758
(defvar nterm-ansi-colornterm-ansi-color132,3813
(defvar nterm-memory nilnterm-memory135,3913
(defvar nterm-key-preserve '(?)nterm-key-preserve138,3994
(defvar nterm-dispatch nilnterm-dispatch142,4106
(defvar nterm-blink-time 1nterm-blink-time145,4162
(defmacro nterm-defdispatch (dispatch-list)nterm-defdispatch148,4266
(defun nterm ()nterm162,4904
(defun nterm-emulate (process output)nterm-emulate168,5036
(defun nterm-mode ()nterm-mode198,6332
(defun nterm-dcdwl-char (char)nterm-dcdwl-char232,7469
(defun nterm-cursor-position-get ()nterm-cursor-position-get239,7727
(defun nterm-cursor-line-get ()nterm-cursor-line-get248,8119
(defun nterm-cursor-col-get ()nterm-cursor-col-get257,8481
(defun nterm-cursor-position-set (cursor-set)nterm-cursor-position-set266,8825
(defun nterm-cursor-line-set (cursor-line)nterm-cursor-line-set274,9184
(defun nterm-cursor-col-set (cursor-col)nterm-cursor-col-set284,9607
(defun nterm-scroll-up (top bottom blank-line-function)nterm-scroll-up293,9966
(defun nterm-scroll-down (top bottom blank-line-function)nterm-scroll-down317,10896
(defun nterm-keymap (key-function key-list keypad-list)nterm-keymap335,11619
(defun nterm-kill-line ()nterm-kill-line367,12847
(defun nterm-blank-screen (&optional char)nterm-blank-screen374,13065
(defun nterm-send-string (string)nterm-send-string392,13664
(defun nterm-argument-collect (char)nterm-argument-collect396,13770
(defun nterm-argument-to-list (min-arg &optional default)nterm-argument-to-list400,13906
(defun nterm-argument-default (number default)nterm-argument-default421,14716
(defvar nterm-ansi-mode (make-bool-vector 21 nil))nterm-ansi-mode428,14948
(defvar nterm-ansi-mode-functionnterm-ansi-mode-function430,15000
(defun nterm-ansi-mode-lnm ()nterm-ansi-mode-lnm455,16315
(defun nterm-ansi-rm (char)nterm-ansi-rm458,16374
(defun nterm-ansi-sm (char)nterm-ansi-sm466,16637
(defun nterm-ansi-sgr (sgr-number))nterm-ansi-sgr474,16883
(defun nterm-face-modify (face key value)nterm-face-modify504,18411
(defmacro nterm-face-bright (face)nterm-face-bright524,18923
(defmacro nterm-face-underline (face)nterm-face-underline533,19132
(defmacro nterm-face-reverse (face bright)nterm-face-reverse539,19273
(defmacro nterm-state-copy (from to copy)nterm-state-copy556,19746
(defun nterm-color-faint ())nterm-color-faint565,20057
(defun nterm-color-normal ())nterm-color-normal566,20086
(defun nterm-steady())nterm-steady567,20116
(defun nterm-negative-image ())nterm-negative-image568,20139
(defun nterm-positive-image ())nterm-positive-image569,20171
(defun nterm-concealed ())nterm-concealed570,20203
(defun nterm-revealed())nterm-revealed571,20230
(defun nterm-alternative-font (index))nterm-alternative-font572,20255
(defun nterm-foreground(index)nterm-foreground573,20294
(defun nterm-background(index))nterm-background576,20346
(defvar nterm-vt100-state nilnterm-vt100-state581,20472
(defvar nterm-vt100-mode nilnterm-vt100-mode584,20534
(defvar nterm-vt100-mode-functionnterm-vt100-mode-function587,20602
(defvar nterm-vt100-c0nterm-vt100-c0603,21187
(defvar nterm-vt100-charset-specialnterm-vt100-charset-special638,21679
(defvar nterm-vt100-charset-usnterm-vt100-charset-us688,22968
(defvar nterm-vt100-charset-uknterm-vt100-charset-uk700,23355
(defvar nterm-vt100-colornterm-vt100-color706,23518
(defvar nterm-vt100-keypad-tablenterm-vt100-keypad-table714,23752
(defvar nterm-vt100-mode-map nilnterm-vt100-mode-map740,24918
(defvar nterm-vt100-char-bright 0)nterm-vt100-char-bright744,25042
(defvar nterm-vt100-char-underline 1)nterm-vt100-char-underline745,25077
(defvar nterm-vt100-char-blink 2)nterm-vt100-char-blink746,25115
(defvar nterm-vt100-char-reverse 3)nterm-vt100-char-reverse747,25149
(defvar nterm-vt100-line-decdwl 0nterm-vt100-line-decdwl750,25206
(defvar nterm-vt100-line-blink 1nterm-vt100-line-blink753,25267
(defun nterm-vt100-bel (char)nterm-vt100-bel873,28449
(defun nterm-vt100-blank-line (char line &optional length replace)nterm-vt100-blank-line877,28500
(defun nterm-vt100-blink-screen ()nterm-vt100-blink-screen895,29197
(defun nterm-vt100-bracket-start (char)nterm-vt100-bracket-start914,29897
(defun nterm-vt100-bs (char)nterm-vt100-bs918,30021
(defun nterm-vt100-cpr ()nterm-vt100-cpr929,30394
(defun nterm-vt100-cub (char)nterm-vt100-cub939,30807
(defun nterm-vt100-cud (char)nterm-vt100-cud950,31222
(defun nterm-vt100-cuf (char)nterm-vt100-cuf962,31725
(defun nterm-vt100-cup (char)nterm-vt100-cup974,32194
(defun nterm-vt100-cuu (char)nterm-vt100-cuu991,32938
(defun nterm-vt100-char-insert (char &optional replace)nterm-vt100-char-insert1003,33427
(defun nterm-vt100-char-self (char)nterm-vt100-char-self1039,35128
(defun nterm-vt100-cr (char)nterm-vt100-cr1057,35710
(defun nterm-vt100-da (char)nterm-vt100-da1064,35902
(defun nterm-vt100-decaln (char)nterm-vt100-decaln1071,36117
(defun nterm-vt100-decanm (flag)nterm-vt100-decanm1078,36355
(defun nterm-vt100-decawm (flag)nterm-vt100-decawm1084,36497
(defun nterm-vt100-decckm (flag)nterm-vt100-decckm1089,36696
(defun nterm-vt100-deccolm (flag)nterm-vt100-deccolm1094,36892
(defun nterm-vt100-decdhl-top (char)nterm-vt100-decdhl-top1103,37239
(defun nterm-vt100-decdhl-bottom (char)nterm-vt100-decdhl-bottom1111,37493
(defun nterm-vt100-decdwl (char)nterm-vt100-decdwl1117,37672
(defun nterm-vt100-decid (char)nterm-vt100-decid1128,38109
(defun nterm-vt100-deckpam (char)nterm-vt100-deckpam1135,38326
(defun nterm-vt100-deckpnm (char)nterm-vt100-deckpnm1142,38573
(defun nterm-vt100-decll (char)nterm-vt100-decll1149,38818
(defun nterm-vt100-decom (flag)nterm-vt100-decom1156,39030
(defun nterm-vt100-decrc (char)nterm-vt100-decrc1162,39244
(defun nterm-vt100-decreptparm ()nterm-vt100-decreptparm1173,39719
(defun nterm-vt100-decreqtparm (char)nterm-vt100-decreqtparm1179,39926
(defun nterm-vt100-decsc (char)nterm-vt100-decsc1186,40173
(defun nterm-vt100-decscnm (flag)nterm-vt100-decscnm1198,40655
(defun nterm-vt100-decstbm (char)nterm-vt100-decstbm1205,40892
(defun nterm-vt100-decswl (char)nterm-vt100-decswl1224,41684
(defun nterm-vt100-dectst (char)nterm-vt100-dectst1235,42135
(defun nterm-vt100-dsr (char)nterm-vt100-dsr1244,42483
(defun nterm-vt100-ed (char)nterm-vt100-ed1254,42827
(defun nterm-vt100-el (char)nterm-vt100-el1290,44291
(defun nterm-vt100-escape-start (char)nterm-vt100-escape-start1308,44952
(defun nterm-vt100-escape-end (char)nterm-vt100-escape-end1312,45068
(defun nterm-vt100-face-default ()nterm-vt100-face-default1318,45255
(defun nterm-vt100-home ()nterm-vt100-home1328,45568
(defun nterm-vt100-hts (char)nterm-vt100-hts1337,45790
(defun nterm-vt100-hvp (char)nterm-vt100-hvp1344,46067
(defun nterm-vt100-ind (char)nterm-vt100-ind1354,46375
(defun nterm-vt100-key ()nterm-vt100-key1361,46586
(defun nterm-vt100-keypad ()nterm-vt100-keypad1395,47925
(defun nterm-vt100-init ()nterm-vt100-init1410,48605
(defun nterm-vt100-lf (char)nterm-vt100-lf1446,50035
(defun nterm-vt100-line-draw (line &optional replace)nterm-vt100-line-draw1459,50529
(defun nterm-vt100-mode-decawm ()nterm-vt100-mode-decawm1492,52004
(defun nterm-vt100-mode-decckm ()nterm-vt100-mode-decckm1496,52092
(defun nterm-vt100-mode-decom ()nterm-vt100-mode-decom1500,52180
(defun nterm-vt100-mode-deckpam ()nterm-vt100-mode-deckpam1505,52267
(defun nterm-vt100-mode-decscnm ()nterm-vt100-mode-decscnm1508,52333
(defun nterm-vt100-mode-decscnm-0 ()nterm-vt100-mode-decscnm-01512,52456
(defun nterm-vt100-mode-decscnm-1 ()nterm-vt100-mode-decscnm-11517,52587
(defun nterm-vt100-nel (char)nterm-vt100-nel1522,52718
(defun nterm-vt100-parenthesis-open-start (char)nterm-vt100-parenthesis-open-start1530,52957
(defun nterm-vt100-parenthesis-close-start (char)nterm-vt100-parenthesis-close-start1533,53071
(defun nterm-vt100-question-start (char)nterm-vt100-question-start1536,53187
(defun nterm-vt100-reset (char)nterm-vt100-reset1540,53326
(defun nterm-vt100-ri (char)nterm-vt100-ri1547,53520
(defun nterm-vt100-ris (char)nterm-vt100-ris1559,53977
(defun nterm-vt100-rm (char)nterm-vt100-rm1566,54207
(defun nterm-vt100-scs-g0 (char)nterm-vt100-scs-g01574,54484
(defun nterm-vt100-scs-g1 (char)nterm-vt100-scs-g11589,55119
(defun nterm-vt100-set-mode (mode function flag)nterm-vt100-set-mode1604,55755
(defun nterm-vt100-sgr (char)nterm-vt100-sgr1623,56553
(defun nterm-vt100-si (char)nterm-vt100-si1657,57998
(defun nterm-vt100-so (char)nterm-vt100-so1662,58158
(defun nterm-vt100-sm (char)nterm-vt100-sm1667,58318
(defun nterm-vt100-switch ()nterm-vt100-switch1675,58591
(defun nterm-vt100-tab (char)nterm-vt100-tab1680,58736
(defun nterm-vt100-tab-reset ()nterm-vt100-tab-reset1694,59300
(defun nterm-vt100-tab-clear ()nterm-vt100-tab-clear1704,59643
(defun nterm-vt100-tbc (char)nterm-vt100-tbc1714,59919
(defvar nterm-vt52-state nilnterm-vt52-state1726,60370
(defvar nterm-vt52-charset-graphicnterm-vt52-charset-graphic1729,60432
(defvar nterm-vt52-keypad-tablenterm-vt52-keypad-table2052,66971
(defvar nterm-vt52-mode-map nilnterm-vt52-mode-map2078,68131
(defun nterm-vt52-blank-line (char)nterm-vt52-blank-line2130,69649
(defun nterm-vt52-char-self (char)nterm-vt52-char-self2139,69974
(defun nterm-vt52-cursor-down (char)nterm-vt52-cursor-down2162,70895
(defun nterm-vt52-cursor-left (char)nterm-vt52-cursor-left2171,71232
(defun nterm-vt52-cursor-right (char)nterm-vt52-cursor-right2180,71564
(defun nterm-vt52-cursor-up (char)nterm-vt52-cursor-up2189,71898
(defun nterm-vt52-enter-graphics (char)nterm-vt52-enter-graphics2198,72219
(defun nterm-vt52-erase-to-end-of-screen (char)nterm-vt52-erase-to-end-of-screen2205,72515
(defun nterm-vt52-erase-to-end-of-line (char)nterm-vt52-erase-to-end-of-line2219,73052
(defun nterm-vt52-escape-end (char)nterm-vt52-escape-end2226,73350
(defun nterm-vt52-escape-start (char)nterm-vt52-escape-start2230,73458
(defun nterm-vt52-escape-y-col (char)nterm-vt52-escape-y-col2233,73566
(defun nterm-vt52-escape-y-line (char)nterm-vt52-escape-y-line2240,73809
(defun nterm-vt52-escape-y-start (char)nterm-vt52-escape-y-start2247,74080
(defun nterm-vt52-exit-graphics (char)nterm-vt52-exit-graphics2251,74222
(defun nterm-vt52-home (char)nterm-vt52-home2258,74511
(defun nterm-vt52-init ()nterm-vt52-init2263,74651
(defun nterm-vt52-reverse-line-feed (char)nterm-vt52-reverse-line-feed2275,75001
(defun nterm-vt52-switch ()nterm-vt52-switch2284,75359
(defun nterm-vt52-identify ()nterm-vt52-identify2288,75480
(defun nterm-vt52-enter-alternate-keypad ()nterm-vt52-enter-alternate-keypad2294,75669
(defun nterm-vt52-exit-alternate-keypad ()nterm-vt52-exit-alternate-keypad2298,75816
(defun nterm-vt52-enter-ansi-mode ()nterm-vt52-enter-ansi-mode2301,75920
(defvar nterm-mem-mode-mapnterm-mem-mode-map2307,76017
(defvar nterm-mem-buffer "*nterm mem*"nterm-mem-buffer2314,76229
(defvar nterm-mem-time 5nterm-mem-time2317,76314
(defvar nterm-mem-debug-char tnterm-mem-debug-char2320,76390
(defun nterm-mem-debug-header ()nterm-mem-debug-header2322,76467
(defun nterm-mem-dump ()nterm-mem-dump2338,76894
(defun nterm-mem-debug-char-toggle ()nterm-mem-debug-char-toggle2357,77487
(defun nterm-mem-dump-line (line what begin)nterm-mem-dump-line2362,77641
(defun nterm-mem-mode ()nterm-mem-mode2379,78246
(defun nterm-mem ()nterm-mem2387,78431
(defun nterm-mem-attribute ()nterm-mem-attribute2397,78694
(defun nterm-mem-display-timer ()nterm-mem-display-timer2401,78785
(defun nterm-mem-line (char)nterm-mem-line2412,79152
(defun nterm-mem-vector-to-dec (vector)nterm-mem-vector-to-dec2418,79400
(defvar nterm-record-mode-mapnterm-record-mode-map2432,79813
(defvar nterm-record-buffer "*nterm record*"nterm-record-buffer2440,80064
(defvar nterm-record-col 0nterm-record-col2443,80147
(defvar nterm-record-max-col 60nterm-record-max-col2446,80210
(defun nterm-record ()nterm-record2449,80303
(defun nterm-record-mode ()nterm-record-mode2456,80477
(defun nterm-record-insert (string)nterm-record-insert2464,80666
(defun nterm-record-step ()nterm-record-step2492,81523
(defun nterm-record-toggle ()nterm-record-toggle2515,82398

magithub-0.1/magithub-pkg.el,122
(define-package "magithub" "0.1" "Magit extensions for using GitHub" (quote ((magit "0.8") (json "1.2"))))"magithub"1,0

magithub-0.1/magithub.el,8264
(defvar magithub-api-base "https://github.com/api/v2/json/"magithub-api-base30,770
(defvar magithub-github-url "https://github.com/"magithub-github-url33,879
(defvar magithub-use-ssl nilmagithub-use-ssl38,1041
(defvar magithub-gist-url "http://gist.github.com/"magithub-gist-url42,1146
(defvar magithub-view-gist tmagithub-view-gist45,1231
(defvar magithub-request-data nilmagithub-request-data48,1315
(defvar magithub-parse-response tmagithub-parse-response54,1504
(defvar magithub-users-history nilmagithub-users-history59,1715
(defvar magithub-repos-history nilmagithub-repos-history62,1807
(defvar -magithub-repo-obj-cache (make-hash-table :test 'equal)-magithub-repo-obj-cache65,1899
(defun -magithub-remove-if (predicate seq)-magithub-remove-if73,2136
(defun -magithub-position (item seq)-magithub-position80,2419
(defun -magithub-cache-function (fn)-magithub-cache-function87,2632
(defun magithub-make-query-string (params)magithub-make-query-string104,3344
(defun magithub-parse-repo (repo)magithub-parse-repo118,3759
(defun magithub-repo-url (username repo &optional sshp)magithub-repo-url127,4117
(defun magithub-remote-info (remote)magithub-remote-info134,4407
(defun magithub-remote-for-commit (commit)magithub-remote-for-commit149,5081
(defun magithub-remote-info-for-commit (commit)magithub-remote-info-for-commit165,5874
(defun magithub-branches-for-remote (remote)magithub-branches-for-remote177,6351
(defun magithub-repo-relative-path ()magithub-repo-relative-path186,6791
(defun magithub-name-rev-for-remote (rev remote)magithub-name-rev-for-remote193,7086
(defun magithub-remote-contains-p (remote rev)magithub-remote-contains-p214,8082
(defun -magithub-lazy-completion-callback (fn &optional noarg)-magithub-lazy-completion-callback227,8543
(defun magithub-read-user (&optional prompt predicate require-match initial-inputmagithub-read-user241,9237
(defun magithub-read-repo-for-user (user &optional prompt predicate require-matchmagithub-read-repo-for-user261,10184
(defun magithub-read-repo (&optional prompt predicate require-match initial-inputmagithub-read-repo279,11083
(defun -magithub-repo-completions (string)-magithub-repo-completions303,12290
(defun magithub-read-pull-request-recipients ()magithub-read-pull-request-recipients316,12983
(defun magithub-read-untracked-fork ()magithub-read-untracked-fork328,13539
(define-prefix-command 'magithub-prefix 'magithub-map)magithub-prefix350,14327
(define-key magithub-map (kbd "C") 'magithub-create-from-local)magithub-map351,14382
(define-key magithub-map (kbd "c") 'magithub-clone)magithub-map352,14446
(define-key magithub-map (kbd "f") 'magithub-fork-current)magithub-map353,14498
(define-key magithub-map (kbd "p") 'magithub-pull-request)magithub-map354,14557
(define-key magithub-map (kbd "t") 'magithub-track)magithub-map355,14616
(define-key magithub-map (kbd "g") 'magithub-gist-repo)magithub-map356,14668
(define-key magithub-map (kbd "S") 'magithub-toggle-ssh)magithub-map357,14724
(define-key magithub-map (kbd "b") 'magithub-browse-item)magithub-map358,14781
(define-key magit-mode-map (kbd "'") 'magithub-prefix)magit-mode-map359,14839
(defun magit-request-url (path)magit-request-url364,14910
(defmacro magithub-with-auth (&rest body)magithub-with-auth381,15562
(defun magithub-handle-errors (status)magithub-handle-errors392,16044
(defun magithub-retrieve (path callback &optional cbargs)magithub-retrieve411,16888
(defun magithub-retrieve-synchronously (path)magithub-retrieve-synchronously445,18531
(defun magithub-config (key)magithub-config475,19855
(defun magithub-set-config (key value)magithub-set-config479,20014
(defun magithub-auth-info ()magithub-auth-info483,20184
(defun magithub-repos-for-user (user)magithub-repos-for-user506,20831
(defun magithub-user-search (user)magithub-user-search515,21108
(defun magithub-repo-obj (&optional username repo)magithub-repo-obj529,21546
(defun magithub-cached-repo-obj (&optional username repo)magithub-cached-repo-obj539,21942
(defun magithub-repo-collaborators (&optional username repo)magithub-repo-collaborators561,22858
(defun magithub-repo-network (&optional username repo)magithub-repo-network572,23284
(defun magithub-repo-parent-collaborators (&optional username repo)magithub-repo-parent-collaborators585,23735
(defun magithub-untracked-forks ()magithub-untracked-forks596,24344
(defun magithub-repo-info ()magithub-repo-info609,24791
(defun magithub-repo-owner ()magithub-repo-owner617,25038
(defun magithub-repo-name ()magithub-repo-name623,25193
(defun magithub-repo-ssh-p ()magithub-repo-ssh-p629,25335
(defun magithub-section-index (section)magithub-section-index638,25524
(defun magithub-hunk-lines ()magithub-hunk-lines642,25719
(defun magithub-track (username &optional repo fetch)magithub-track672,26961
(defun magithub-browse (&rest path-and-anchor)magithub-browse689,27560
(defun magithub-browse-current (&rest path-and-anchor)magithub-browse-current705,28207
(defun magithub-browse-repo ()magithub-browse-repo714,28563
(defun magithub-browse-commit (commit &optional anchor)magithub-browse-commit720,28836
(defun magithub-browse-commit-diff (diff-section)magithub-browse-commit-diff729,29241
(defun magithub-browse-commit-hunk-at-point ()magithub-browse-commit-hunk-at-point736,29536
(defun magithub-browse-compare (from to &optional anchor)magithub-browse-compare746,30000
(defun magithub-browse-diffbuff (&optional anchor)magithub-browse-diffbuff756,30381
(defun magithub-browse-diff (section)magithub-browse-diff771,31125
(defun magithub-browse-hunk-at-point ()magithub-browse-hunk-at-point776,31367
(defun magithub-browse-blob (path &optional anchor)magithub-browse-blob785,31784
(defun magithub-browse-item ()magithub-browse-item792,32074
(defun magithub-browse-file ()magithub-browse-file813,32822
(defun magithub-gist-repo (&optional private)magithub-gist-repo834,33569
(defun magithub-create-from-local (name &optional description homepage private)magithub-create-from-local869,35067
(defun magithub-clone (username repo dir &optional sshp)magithub-clone907,36925
(defun magithub-fork-current ()magithub-fork-current926,37764
(defun magithub-send-pull-request (text recipients)magithub-send-pull-request942,38541
(defun magithub-pull-request (recipients)magithub-pull-request959,39467
(defun magithub-toggle-ssh (&optional arg)magithub-toggle-ssh971,39991
(defvar magithub-message-mode-hook nil "Hook run by `magithub-message-mode'.")magithub-message-mode-hook984,40437
(defvar magithub-message-confirm-cancellation magit-log-edit-confirm-cancellationmagithub-message-confirm-cancellation986,40517
(defconst magithub-message-buffer-name "*magithub-edit-message*"magithub-message-buffer-name989,40690
(defconst magithub-message-header-end "-- End of Magithub header --\n")magithub-message-header-end992,40797
(defvar magithub-message-mode-mapmagithub-message-mode-map994,40870
(defvar magithub-pre-message-window-configuration nil)magithub-pre-message-window-configuration1002,41179
(defmacro with-magithub-message-mode (&rest body)with-magithub-message-mode1012,41580
(defun magithub-pop-to-message (operation)magithub-pop-to-message1025,42211
(defun magithub-message-send ()magithub-message-send1038,42759
(defun magithub-message-cancel ()magithub-message-cancel1049,43207
(defvar magithub-minor-mode-mapmagithub-minor-mode-map1057,43387
(defvar magithub-status-buffer nilmagithub-status-buffer1062,43525
(define-minor-mode magithub-minor-modemagithub-minor-mode1066,43684
(defun magithub-try-enabling-minor-mode ()magithub-try-enabling-minor-mode1072,43837
(defun magithub-try-disabling-minor-mode ()magithub-try-disabling-minor-mode1087,44503
(defun magithub-try-enabling-minor-mode-everywhere ()magithub-try-enabling-minor-mode-everywhere1093,44776
(defun magithub-try-disabling-minor-mode-everywhere ()magithub-try-disabling-minor-mode-everywhere1098,44987
(defadvice magit-init (after magithub-init-too (dir) activate)magit-init1108,45281
(defun magithub-magit-mode-hook ()magithub-magit-mode-hook1113,45480
(defun magithub-kill-buffer-hook ()magithub-kill-buffer-hook1121,45833

magithub-0.1/magithub-autoloads.el,0

crontab-mode-1.2/crontab-mode-pkg.el,102
(define-package "crontab-mode" "1.2" "Mode for editing crontab files" (quote nil))"crontab-mode"1,0

crontab-mode-1.2/crontab-mode.el,1510
(defvar crontab-suffix ".crontab"crontab-suffix35,1131
(defvar crontab-apply-after-save nilcrontab-apply-after-save38,1200
(defvar crontab-host nilcrontab-host42,1342
(defvar crontab-user nilcrontab-user46,1475
(defvar crontab-unit-regexp "\\(\\(?:[-,0-9]+\\|\\*\\)\\(?:/[0-9]+\\)?\\)"crontab-unit-regexp51,1668
(defvar crontab-sep-regexp "[ \t]+"crontab-sep-regexp54,1790
(defvar crontab-ruler "crontab-ruler57,1889
(defvar crontab-mode-hook nilcrontab-mode-hook65,2119
(defvar crontab-load-hook nilcrontab-load-hook68,2193
(defvar crontab-font-lock-keywordscrontab-font-lock-keywords72,2277
(defvar crontab-mode-map nilcrontab-mode-map100,3110
(defvar crontab-rsh-cmd "ssh" ;; "rsh"crontab-rsh-cmd113,3635
(defun crontab-rsh-cmd ()crontab-rsh-cmd116,3714
(defun crontab-localhost-p (&optional host)crontab-localhost-p122,3908
(defun crontab-shell (host cmd out-buffer)crontab-shell129,4113
(defun crontab-mode ()crontab-mode136,4370
(defun crontab-get (host)crontab-get161,5028
(defun crontab-insert (&optional host)crontab-insert172,5366
(defun crontab-apply (&optional host)crontab-apply176,5507
(defun crontab-save-and-apply ()crontab-save-and-apply182,5749
(defun crontab-save-and-apply-to (host)crontab-save-and-apply-to189,5957
(defun crontab-insert-ruler ()crontab-insert-ruler195,6155
(defun crontab-insert-local-var ()crontab-insert-local-var201,6297
(defun crontab-host ()crontab-host214,6715
(defun crontab-after-save ()crontab-after-save220,6916

crontab-mode-1.2/crontab-mode-autoloads.el,0

auto-complete-1.4.20110207/popup.el,6224
(defvar popup-use-optimized-column-computation tpopup-use-optimized-column-computation35,901
(defmacro popup-aif (test-form then-form &rest else-forms)popup-aif40,1072
(defun popup-x-to-string (x)popup-x-to-string46,1290
(defun popup-substring-by-width (string width)popup-substring-by-width56,1569
(defun popup-fill-string (string &optional width max-width justify squeeze)popup-fill-string70,2068
(defmacro popup-save-buffer-state (&rest body)popup-save-buffer-state118,4154
(defun popup-preferred-width (list)popup-preferred-width128,4450
(defun popup-window-full-width-p (&optional window)popup-window-full-width-p139,4954
(defun popup-truncated-partial-width-window-p (&optional window)popup-truncated-partial-width-window-p145,5233
(defun popup-current-physical-column ()popup-current-physical-column155,5585
(defun popup-last-line-of-buffer-p ()popup-last-line-of-buffer-p165,5995
(defun popup-lookup-key-by-event (function event)popup-lookup-key-by-event168,6090
(defgroup popup nilpopup179,6439
(defface popup-facepopup-face184,6522
(defface popup-scroll-bar-foreground-facepopup-scroll-bar-foreground-face189,6635
(defface popup-scroll-bar-background-facepopup-scroll-bar-background-face194,6762
(defvar popup-instances nilpopup-instances199,6888
(defvar popup-scroll-bar-foreground-charpopup-scroll-bar-foreground-char202,6939
(defvar popup-scroll-bar-background-charpopup-scroll-bar-background-char206,7082
(defstruct popuppopup210,7225
(defun popup-item-propertize (item &rest properties)popup-item-propertize218,7487
(defun popup-item-property (item property)popup-item-property230,7906
(defun* popup-make-item (namepopup-make-item234,8015
(defsubst popup-item-value (item)               (popup-item-property item 'value))popup-item-value254,8733
(defsubst popup-item-value-or-self (item)       (or (popup-item-value item) item))popup-item-value-or-self255,8816
(defsubst popup-item-popup-face (item)          (popup-item-property item 'popup-face))popup-item-popup-face256,8899
(defsubst popup-item-selection-face (item)      (popup-item-property item 'selection-face))popup-item-selection-face257,8987
(defsubst popup-item-document (item)            (popup-item-property item 'document))popup-item-document258,9079
(defsubst popup-item-summary (item)             (popup-item-property item 'summary))popup-item-summary259,9165
(defsubst popup-item-symbol (item)              (popup-item-property item 'symbol))popup-item-symbol260,9250
(defsubst popup-item-sublist (item)             (popup-item-property item 'sublist))popup-item-sublist261,9334
(defun popup-item-documentation (item)popup-item-documentation263,9420
(defun popup-item-show-help-1 (item)popup-item-show-help-1269,9602
(defun popup-item-show-help (item &optional persist)popup-item-show-help279,9894
(defun popup-set-list (popup list)popup-set-list298,10620
(defun popup-set-filtered-list (popup list)popup-set-filtered-list303,10775
(defun popup-selected-item (popup)popup-selected-item309,11031
(defun popup-selected-line (popup)popup-selected-line312,11116
(defun popup-line-overlay (popup line)popup-line-overlay315,11205
(defun popup-selected-line-overlay (popup)popup-selected-line-overlay318,11283
(defun popup-hide-line (popup line)popup-hide-line321,11385
(defun popup-line-hidden-p (popup line)popup-line-hidden-p326,11558
(defun popup-set-line-item (popup line item face margin-left margin-right scroll-bar-char symbol summary)popup-set-line-item331,11756
(defun popup-create-line-string (popup string margin-left margin-right symbol summary)popup-create-line-string357,12999
(defun popup-live-p (popup)popup-live-p373,13743
(defun popup-child-point (popup &optional offset)popup-child-point376,13812
(defun* popup-create (pointpopup-create381,14021
(defun popup-delete (popup)popup-delete527,19989
(defun popup-draw (popup)popup-draw542,20469
(defun popup-hide (popup)popup-hide610,23715
(defun popup-hidden-p (popup)popup-hidden-p614,23810
(defun popup-select (popup i)popup-select622,24022
(defun popup-next (popup)popup-next629,24206
(defun popup-previous (popup)popup-previous646,24765
(defun popup-scroll-down (popup &optional n)popup-scroll-down663,25303
(defun popup-scroll-up (popup &optional n)popup-scroll-up670,25607
(defface popup-isearch-matchpopup-isearch-match681,25879
(defvar popup-isearch-cursor-color "blue")popup-isearch-cursor-color686,25990
(defvar popup-isearch-keymappopup-isearch-keymap688,26034
(defsubst popup-isearch-char-p (char)popup-isearch-char-p696,26329
(defun popup-isearch-filter-list (pattern list)popup-isearch-filter-list701,26434
(defun popup-isearch-prompt (popup pattern)popup-isearch-prompt721,27320
(defun popup-isearch-update (popup pattern &optional callback)popup-isearch-update726,27533
(defun* popup-isearch (popuppopup-isearch736,27896
(defface popup-tip-facepopup-tip-face783,30049
(defvar popup-tip-max-width 80)popup-tip-max-width788,30167
(defun* popup-tip (stringpopup-tip790,30200
(defface popup-menu-facepopup-menu-face852,32200
(defface popup-menu-selection-facepopup-menu-selection-face857,32323
(defvar popup-menu-show-tip-function 'popup-tippopup-menu-show-tip-function862,32466
(defvar popup-menu-show-quick-help-function 'popup-menu-show-quick-helppopup-menu-show-quick-help-function865,32587
(defun popup-menu-show-help (menu &optional persist item)popup-menu-show-help868,32720
(defun popup-menu-documentation (menu &optional item)popup-menu-documentation871,32850
(defun popup-menu-show-quick-help (menu &optional item &rest args)popup-menu-show-quick-help874,32972
(defun popup-menu-read-key-sequence (keymap &optional prompt timeout)popup-menu-read-key-sequence898,33872
(defun popup-menu-fallback (event default))popup-menu-fallback925,35198
(defun* popup-menu-event-loop (menu keymap fallback &optional prompt help-delay isearch isearch-cursor-color isearch-keymap isearch-callback &aux key binding)popup-menu-event-loop927,35243
(defun* popup-menu* (listpopup-menu*980,37708
(defun popup-cascade-menu (list &rest args)popup-cascade-menu1027,39549
(defvar popup-menu-keymappopup-menu-keymap1041,40009

auto-complete-1.4.20110207/fuzzy.el,2215
(defgroup fuzzy nilfuzzy31,898
(defcustom fuzzy-accept-error-rate 0.10fuzzy-accept-error-rate36,991
(defvar fuzzy-accept-length-difference 2)fuzzy-accept-length-difference40,1070
(defvar fuzzy-regexp-some-char (format "\\w\\{0,%s\\}" fuzzy-accept-length-difference))fuzzy-regexp-some-char42,1113
(defun fuzzy-reverse-string (string)fuzzy-reverse-string48,1220
(defun fuzzy-regexp-compile (string)fuzzy-regexp-compile51,1308
(defalias 'fuzzy-edit-distance 'fuzzy-jaro-winkler-distance)fuzzy-edit-distance68,1967
(defun fuzzy-jaro-winkler-distance (s1 s2)fuzzy-jaro-winkler-distance70,2029
(defun fuzzy-match (s1 s2 &optional function)fuzzy-match114,3425
(defun fuzzy-all-completions (string collection)fuzzy-all-completions121,3693
(defvar fuzzy-search-cache nil)fuzzy-search-cache134,4086
(defvar fuzzy-search-cache-string nil)fuzzy-search-cache-string135,4118
(defun fuzzy-search-cache-activate ()fuzzy-search-cache-activate137,4158
(defun fuzzy-search-cache-deactive ()fuzzy-search-cache-deactive141,4283
(defun fuzzy-search-edit-distance (s1 s2)fuzzy-search-edit-distance145,4394
(defun fuzzy-search-match (s1 s2)fuzzy-search-match162,4959
(defun fuzzy-search-forward (string &optional bound noerror count)fuzzy-search-forward165,5045
(defun fuzzy-search-backward (string &optional bound noerror count)fuzzy-search-backward178,5534
(defvar fuzzy-isearch nil)fuzzy-isearch200,6377
(defvar fuzzy-isearch-failed-count 0)fuzzy-isearch-failed-count201,6404
(defvar fuzzy-isearch-enabled 'on-failed)fuzzy-isearch-enabled202,6442
(defvar fuzzy-isearch-original-search-fun nil)fuzzy-isearch-original-search-fun203,6484
(defvar fuzzy-isearch-prefix "[FUZZY] ")fuzzy-isearch-prefix204,6531
(defun fuzzy-isearch-activate ()fuzzy-isearch-activate206,6573
(defun fuzzy-isearch-deactivate ()fuzzy-isearch-deactivate211,6703
(defun fuzzy-isearch ()fuzzy-isearch216,6837
(defun fuzzy-isearch-end-hook ()fuzzy-isearch-end-hook235,7631
(defun turn-on-fuzzy-isearch ()turn-on-fuzzy-isearch238,7695
(defun turn-off-fuzzy-isearch ()turn-off-fuzzy-isearch244,7928
(defadvice isearch-message-prefix (after fuzzy-isearch-message-prefix activate)isearch-message-prefix249,8113

auto-complete-1.4.20110207/etc/install.el,0

auto-complete-1.4.20110207/auto-complete-config.el,2079
(defvar ac-imenu-index nil)ac-imenu-index39,991
(defun ac-imenu-candidates ()ac-imenu-candidates43,1074
(defface ac-gtags-candidate-faceac-gtags-candidate-face81,2424
(defface ac-gtags-selection-faceac-gtags-selection-face86,2566
(defun ac-gtags-candidate ()ac-gtags-candidate91,2718
(defface ac-yasnippet-candidate-faceac-yasnippet-candidate-face104,3064
(defface ac-yasnippet-selection-faceac-yasnippet-selection-face109,3217
(defun ac-yasnippet-table-hash (table)ac-yasnippet-table-hash114,3379
(defun ac-yasnippet-table-parent (table)ac-yasnippet-table-parent121,3561
(defun ac-yasnippet-candidate-1 (table)ac-yasnippet-candidate-1128,3753
(defun ac-yasnippet-candidates ()ac-yasnippet-candidates142,4250
(defun ac-semantic-candidates (prefix)ac-semantic-candidates166,4996
(defun ac-eclim-candidates ()ac-eclim-candidates191,5870
(defconst ac-css-property-alistac-css-property-alist205,6156
(defconst ac-css-value-classesac-css-value-classes344,12388
(defconst ac-css-pseudo-classesac-css-pseudo-classes362,13197
(defvar ac-css-property nilac-css-property367,13431
(defun ac-css-prefix ()ac-css-prefix370,13491
(defun ac-css-property-candidates ()ac-css-property-candidates375,13681
(defvar ac-source-css-propertyac-source-css-property390,14298
(defvar ac-ropemacs-loaded nil)ac-ropemacs-loaded415,14759
(defun ac-ropemacs-require ()ac-ropemacs-require416,14791
(defun ac-ropemacs-setup ()ac-ropemacs-setup424,15043
(defun ac-ropemacs-initialize ()ac-ropemacs-initialize429,15231
(defvar ac-ropemacs-completions-cache nil)ac-ropemacs-completions-cache438,15514
(defvar ac-source-ropemacsac-source-ropemacs439,15557
(defvar ac-source-rcodetoolsac-source-rcodetools452,15906
(defun ac-common-setup ()ac-common-setup471,16554
(defun ac-emacs-lisp-mode-setup ()ac-emacs-lisp-mode-setup474,16630
(defun ac-cc-mode-setup ()ac-cc-mode-setup477,16807
(defun ac-ruby-mode-setup ())ac-ruby-mode-setup480,16915
(defun ac-css-mode-setup ()ac-css-mode-setup482,16946
(defun ac-config-default ()ac-config-default485,17042

auto-complete-1.4.20110207/auto-complete-pkg.el,68
(define-package "auto-complete" "1.4.20110207" "auto-complete"1,0

auto-complete-1.4.20110207/auto-complete.el,13849
(defun ac-error (&optional var)ac-error53,1412
(defgroup auto-complete nilauto-complete64,1621
(defcustom ac-delay 0.1ac-delay69,1709
(defcustom ac-auto-show-menu 0.8ac-auto-show-menu74,1818
(defcustom ac-show-menu-immediately-on-auto-complete tac-show-menu-immediately-on-auto-complete81,2059
(defcustom ac-expand-on-auto-complete tac-expand-on-auto-complete86,2227
(defcustom ac-disable-faces '(font-lock-comment-face font-lock-string-face font-lock-doc-face)ac-disable-faces91,2384
(defcustom ac-stop-flymake-on-completing tac-stop-flymake-on-completing96,2597
(defcustom ac-use-fuzzy tac-use-fuzzy101,2743
(defcustom ac-fuzzy-cursor-color "red"ac-fuzzy-cursor-color106,2850
(defcustom ac-use-comphist tac-use-comphist111,2963
(defcustom ac-comphist-threshold 0.7ac-comphist-threshold116,3089
(defcustom ac-comphist-fileac-comphist-file121,3217
(defcustom ac-user-dictionary nilac-user-dictionary130,3531
(defcustom ac-dictionary-files '("~/.dict")ac-dictionary-files135,3644
(defvaralias 'ac-user-dictionary-files 'ac-dictionary-files)ac-user-dictionary-files139,3760
(defcustom ac-dictionary-directories nilac-dictionary-directories141,3822
(defcustom ac-use-quick-help tac-use-quick-help146,3942
(defcustom ac-quick-help-delay 1.5ac-quick-help-delay151,4050
(defcustom ac-menu-height 10ac-menu-height156,4156
(defvaralias 'ac-candidate-menu-height 'ac-menu-height)ac-candidate-menu-height160,4261
(defcustom ac-quick-help-height 20ac-quick-help-height162,4318
(defcustom ac-quick-help-prefer-pos-tip tac-quick-help-prefer-pos-tip167,4426
(defvaralias 'ac-quick-help-prefer-x 'ac-quick-help-prefer-pos-tip)ac-quick-help-prefer-x171,4595
(defcustom ac-candidate-limit nilac-candidate-limit173,4664
(defvaralias 'ac-candidate-max 'ac-candidate-limit)ac-candidate-max177,4800
(defcustom ac-modesac-modes179,4853
(defcustom ac-compatible-packages-regexpac-compatible-packages-regexp194,5379
(defcustom ac-non-trigger-commandsac-non-trigger-commands200,5537
(defcustom ac-trigger-commandsac-trigger-commands206,5725
(defcustom ac-trigger-commands-on-completingac-trigger-commands-on-completing212,5911
(defcustom ac-trigger-key nilac-trigger-key220,6174
(defcustom ac-auto-start 2ac-auto-start232,6646
(defcustom ac-stop-words nilac-stop-words242,7061
(defvaralias 'ac-ignores 'ac-stop-words)ac-ignores246,7179
(defcustom ac-use-dictionary-as-stop-words tac-use-dictionary-as-stop-words248,7221
(defcustom ac-ignore-case 'smartac-ignore-case253,7389
(defcustom ac-dwim tac-dwim262,7727
(defcustom ac-use-menu-map nilac-use-menu-map267,7856
(defcustom ac-use-overriding-local-map nilac-use-overriding-local-map272,8012
(defface ac-completion-faceac-completion-face277,8205
(defface ac-candidate-faceac-candidate-face282,8337
(defface ac-selection-faceac-selection-face287,8469
(defvar auto-complete-mode-hook nilauto-complete-mode-hook292,8610
(defvar auto-complete-mode nilauto-complete-mode299,8711
(defvar ac-cursor-color nilac-cursor-color302,8794
(defvar ac-inline nilac-inline305,8846
(defvar ac-menu nilac-menu308,8902
(defvar ac-show-menu nilac-show-menu311,8943
(defvar ac-last-completion nilac-last-completion314,9007
(defvar ac-quick-help nilac-quick-help317,9104
(defvar ac-completing nilac-completing320,9156
(defvar ac-buffer nilac-buffer323,9253
(defvar ac-point nilac-point326,9320
(defvar ac-last-point nilac-last-point329,9370
(defvar ac-prefix nilac-prefix332,9434
(defvaralias 'ac-target 'ac-prefix)ac-target334,9476
(defvar ac-selected-candidate nilac-selected-candidate336,9513
(defvar ac-common-part nilac-common-part339,9578
(defvar ac-whole-common-part nilac-whole-common-part343,9702
(defvar ac-prefix-overlay nilac-prefix-overlay347,9827
(defvar ac-timer nilac-timer350,9890
(defvar ac-show-menu-timer nilac-show-menu-timer353,9940
(defvar ac-quick-help-timer nilac-quick-help-timer356,9999
(defvar ac-triggered nilac-triggered359,10060
(defvar ac-limit nilac-limit362,10107
(defvar ac-candidates nilac-candidates365,10179
(defvar ac-candidates-cache nilac-candidates-cache368,10231
(defvar ac-fuzzy-enable nilac-fuzzy-enable371,10310
(defvar ac-dwim-enable nilac-dwim-enable374,10385
(defvar ac-mode-map (make-sparse-keymap)ac-mode-map377,10465
(defvar ac-completing-mapac-completing-map380,10604
(defvaralias 'ac-complete-mode-map 'ac-completing-map)ac-complete-mode-map413,11769
(defvar ac-menu-mapac-menu-map415,11825
(defvar ac-current-mapac-current-map423,12062
(defvar ac-match-function 'all-completionsac-match-function428,12178
(defvar ac-prefix-definitionsac-prefix-definitions431,12251
(defvar ac-sources '(ac-source-words-in-same-mode-buffers)ac-sources439,12491
(defvar ac-compiled-sources nilac-compiled-sources443,12621
(defvar ac-current-sources nilac-current-sources446,12692
(defvar ac-omni-completion-sources nilac-omni-completion-sources449,12796
(defvar ac-current-prefix-def nil)ac-current-prefix-def452,12866
(defvar ac-ignoring-prefix-def nil)ac-ignoring-prefix-def454,12902
(defvar ac-comphist nilac-comphist460,12979
(defsubst ac-comphist-make-tab ()ac-comphist-make-tab463,13041
(defsubst ac-comphist-tab (db)ac-comphist-tab466,13110
(defsubst ac-comphist-cache (db)ac-comphist-cache469,13156
(defun ac-comphist-make (&optional tab)ac-comphist-make472,13204
(defun ac-comphist-get (db string &optional create)ac-comphist-get475,13330
(defun ac-comphist-add (db string prefix)ac-comphist-add483,13591
(defun ac-comphist-score (db string prefix)ac-comphist-score491,13886
(defun ac-comphist-sort (db collection prefix &optional threshold)ac-comphist-sort517,15037
(defun ac-comphist-serialize (db)ac-comphist-serialize539,15951
(defun ac-comphist-deserialize (sexp)ac-comphist-deserialize546,16122
(defun ac-comphist-init ()ac-comphist-init555,16490
(defun ac-comphist-load ()ac-comphist-load559,16588
(defun ac-comphist-save ()ac-comphist-save569,16979
(defvar ac-buffer-dictionary nil)ac-buffer-dictionary580,17226
(defvar ac-file-dictionary (make-hash-table :test 'equal))ac-file-dictionary581,17260
(defun ac-clear-dictionary-cache ()ac-clear-dictionary-cache583,17320
(defun ac-file-dictionary (filename)ac-file-dictionary591,17578
(defun ac-mode-dictionary (mode)ac-mode-dictionary603,17985
(defun ac-buffer-dictionary (&optional buffer)ac-buffer-dictionary611,18316
(defun ac-menu-at-wrapper-line-p ()ac-menu-at-wrapper-line-p626,18801
(defun ac-stop-word-p (word)ac-stop-word-p634,19082
(defun ac-prefix-symbol ()ac-prefix-symbol639,19238
(defalias 'ac-prefix-default 'ac-prefix-symbol)ac-prefix-default643,19377
(defun ac-prefix-file ()ac-prefix-file645,19426
(defun ac-prefix-valid-file ()ac-prefix-valid-file650,19558
(defun ac-prefix-c-dot ()ac-prefix-c-dot664,20168
(defun ac-prefix-c-dot-ref ()ac-prefix-c-dot-ref669,20340
(defun ac-define-prefix (name prefix)ac-define-prefix674,20547
(defun ac-match-substring (prefix candidates)ac-match-substring679,20735
(defsubst ac-source-entity (source)ac-source-entity685,20933
(defun ac-source-available-p (source)ac-source-available-p690,21034
(defun ac-compile-sources (sources)ac-compile-sources711,21937
(defun ac-compiled-sources ()ac-compiled-sources733,22787
(defsubst ac-menu-live-p ()ac-menu-live-p738,22923
(defun ac-menu-create (point width height)ac-menu-create741,22978
(defun ac-menu-delete ()ac-menu-delete751,23323
(defsubst ac-inline-marker ()ac-inline-marker756,23413
(defsubst ac-inline-overlay ()ac-inline-overlay759,23465
(defsubst ac-inline-live-p ()ac-inline-live-p762,23518
(defun ac-inline-show (point string)ac-inline-show765,23590
(defun ac-inline-delete ()ac-inline-delete816,25365
(defun ac-inline-hide ()ac-inline-hide822,25509
(defun ac-inline-update ()ac-inline-update838,26047
(defun ac-put-prefix-overlay ()ac-put-prefix-overlay849,26477
(defun ac-remove-prefix-overlay ()ac-remove-prefix-overlay863,27049
(defun ac-activate-completing-map ()ac-activate-completing-map873,27366
(defun ac-deactivate-completing-map ()ac-deactivate-completing-map882,27755
(defsubst ac-selected-candidate ()ac-selected-candidate890,28097
(defun ac-prefix (requires ignore-list)ac-prefix894,28185
(defun ac-init ()ac-init934,29794
(defun ac-candidates-1 (source)ac-candidates-1947,30166
(defun ac-candidates ()ac-candidates990,32402
(defun ac-update-candidates (cursor scroll-top)ac-update-candidates1022,34114
(defun ac-reposition ()ac-reposition1041,34749
(defun ac-cleanup ()ac-cleanup1050,35111
(defsubst ac-abort ()ac-abort1097,36566
(defun ac-expand-string (string &optional remove-undo-boundary)ac-expand-string1101,36627
(defun ac-set-trigger-key (key)ac-set-trigger-key1132,37960
(defun ac-set-timer ()ac-set-timer1143,38346
(defun ac-cancel-timer ()ac-cancel-timer1147,38469
(defun ac-update (&optional force)ac-update1152,38576
(defun ac-update-greedy (&optional force)ac-update-greedy1173,39379
(defun ac-set-show-menu-timer ()ac-set-show-menu-timer1182,39697
(defun ac-cancel-show-menu-timer ()ac-cancel-show-menu-timer1187,39949
(defun ac-show-menu ()ac-show-menu1192,40096
(defun ac-help (&optional persist)ac-help1199,40248
(defun ac-persist-help ()ac-persist-help1204,40365
(defun ac-last-help (&optional persist)ac-last-help1208,40423
(defun ac-last-persist-help ()ac-last-persist-help1213,40573
(defun ac-set-quick-help-timer ()ac-set-quick-help-timer1217,40641
(defun ac-cancel-quick-help-timer ()ac-cancel-quick-help-timer1222,40858
(defun ac-pos-tip-show-quick-help (menu &optional item &rest args)ac-pos-tip-show-quick-help1227,41009
(defun ac-quick-help-use-pos-tip-p ()ac-quick-help-use-pos-tip-p1254,41981
(defun ac-quick-help (&optional force)ac-quick-help1259,42106
(defun ac-remove-quick-help ()ac-remove-quick-help1273,42612
(defun ac-last-quick-help ()ac-last-quick-help1281,42813
(defmacro ac-define-quick-help-command (name arglist &rest body)ac-define-quick-help-command1297,43411
(defun ac-isearch-callback (list)ac-isearch-callback1317,43895
(defun ac-isearch ()ac-isearch1320,43976
(defun auto-complete (&optional sources)auto-complete1332,44218
(defun ac-fuzzy-complete ()ac-fuzzy-complete1357,45182
(defun ac-next ()ac-next1374,45713
(defun ac-previous ()ac-previous1383,45921
(defun ac-expand ()ac-expand1392,46145
(defun ac-expand-common ()ac-expand-common1409,46728
(defun ac-complete ()ac-complete1421,47072
(defun* ac-start (&keyac-start1444,47754
(defun ac-stop ()ac-stop1480,49061
(defun ac-trigger-key-command (&optional force)ac-trigger-key-command1486,49167
(defvar ac-clear-variables-every-minute-timer nil)ac-clear-variables-every-minute-timer1496,49393
(defvar ac-clear-variables-after-save nil)ac-clear-variables-after-save1497,49444
(defvar ac-clear-variables-every-minute nil)ac-clear-variables-every-minute1498,49487
(defvar ac-minutes-counter 0)ac-minutes-counter1499,49532
(defun ac-clear-variable-after-save (variable &optional pred)ac-clear-variable-after-save1501,49563
(defun ac-clear-variables-after-save ()ac-clear-variables-after-save1504,49695
(defun ac-clear-variable-every-minutes (variable minutes)ac-clear-variable-every-minutes1510,49879
(defun ac-clear-variable-every-minute (variable)ac-clear-variable-every-minute1513,50012
(defun ac-clear-variable-every-10-minutes (variable)ac-clear-variable-every-10-minutes1516,50110
(defun ac-clear-variables-every-minute ()ac-clear-variables-every-minute1519,50213
(defun ac-cursor-on-diable-face-p (&optional point)ac-cursor-on-diable-face-p1529,50442
(defun ac-trigger-command-p (command)ac-trigger-command-p1532,50567
(defun ac-fallback-command (&optional except-command)ac-fallback-command1540,50915
(defun ac-compatible-package-command-p (command)ac-compatible-package-command-p1549,51252
(defun ac-handle-pre-command ()ac-handle-pre-command1554,51469
(defun ac-handle-post-command ()ac-handle-post-command1572,52405
(defun ac-setup ()ac-setup1583,52759
(define-minor-mode auto-complete-modeauto-complete-mode1596,53295
(defun auto-complete-mode-maybe ()auto-complete-mode-maybe1613,53938
(define-global-minor-mode global-auto-complete-modeglobal-auto-complete-mode1619,54138
(defun ac-flyspell-workaround ()ac-flyspell-workaround1627,54309
(defun ac-linum-workaround ()ac-linum-workaround1636,54703
(defmacro ac-define-source (name source)ac-define-source1648,55016
(defvar ac-word-index nil)ac-word-index1659,55395
(defun ac-candidate-words-in-buffer (point prefix limit)ac-candidate-words-in-buffer1661,55423
(defun ac-incremental-update-word-index ()ac-incremental-update-word-index1685,56325
(defun ac-update-word-index-1 ()ac-update-word-index-11700,56878
(defun ac-update-word-index ()ac-update-word-index1711,57301
(defun ac-word-candidates (&optional buffer-pred)ac-word-candidates1718,57517
(defvar ac-symbols-cache nil)ac-symbols-cache1744,58561
(defun ac-symbol-file (symbol type)ac-symbol-file1747,58647
(defun ac-symbol-documentation (symbol)ac-symbol-documentation1779,60133
(defun ac-symbol-candidates ()ac-symbol-candidates1825,61843
(defvar ac-functions-cache nil)ac-functions-cache1841,62297
(defun ac-function-candidates ()ac-function-candidates1844,62387
(defvar ac-variables-cache nil)ac-variables-cache1859,62813
(defun ac-variable-candidates ()ac-variable-candidates1862,62903
(defvar ac-emacs-lisp-features nil)ac-emacs-lisp-features1876,63282
(defun ac-emacs-lisp-feature-candidates ()ac-emacs-lisp-feature-candidates1879,63380
(defvaralias 'ac-source-emacs-lisp-features 'ac-source-features)ac-source-emacs-lisp-features1897,64222
(defvar ac-filename-cache nil)ac-filename-cache1912,64667
(defun ac-filename-candidate ()ac-filename-candidate1914,64699

auto-complete-1.4.20110207/Makefile,128
VERSION=`perl -ne 'print $$1 if /;; Version: (.*)/' auto-complete.el`VERSION1,0
PACKAGE=auto-complete-${VERSION}PACKAGE2,70

auto-complete-1.4.20110207/auto-complete-autoloads.el,0

muse-3.20/muse-colors.el,4099
(defgroup muse-colors nilmuse-colors55,1747
(defcustom muse-colors-autogen-headings tmuse-colors-autogen-headings60,1907
(defcustom muse-colors-evaluate-lisp-tags tmuse-colors-evaluate-lisp-tags74,2405
(defcustom muse-colors-inline-images tmuse-colors-inline-images84,2702
(defcustom muse-colors-inline-image-method 'default-directorymuse-colors-inline-image-method94,3018
(defvar muse-colors-region-end nilmuse-colors-region-end108,3636
(defun muse-colors-toggle-inline-images ()muse-colors-toggle-inline-images113,3813
(defvar muse-colors-outline-faces-listmuse-colors-outline-faces-list127,4286
(defun muse-make-faces-default (&optional later)muse-make-faces-default138,4690
(defun muse-make-faces (&optional frame)muse-make-faces168,5969
(defface muse-linkmuse-link189,6762
(defface muse-bad-linkmuse-bad-link194,6864
(defface muse-verbatimmuse-verbatim204,7183
(defface muse-emphasis-1muse-emphasis-1212,7398
(defface muse-emphasis-2muse-emphasis-2217,7505
(defface muse-emphasis-3muse-emphasis-3222,7608
(defcustom muse-colors-buffer-hook nilmuse-colors-buffer-hook231,7858
(defvar muse-colors-highlighting-registry nilmuse-colors-highlighting-registry239,8165
(defun muse-colors-make-highlighting-struct ()muse-colors-make-highlighting-struct245,8413
(defconst muse-colors-highlighting.regexp 0muse-colors-highlighting.regexp247,8482
(defconst muse-colors-highlighting.vector 1muse-colors-highlighting.vector249,8591
(defconst muse-colors-highlighting.remaining 2muse-colors-highlighting.remaining252,8772
(defsubst muse-colors-highlighting-entry (mode)muse-colors-highlighting-entry256,8912
(defun muse-colors-find-highlighting (mode)muse-colors-find-highlighting260,9054
(defun muse-colors-define-highlighting (mode markup)muse-colors-define-highlighting272,9520
(defun muse-configure-highlighting (sym val)muse-configure-highlighting327,11756
(defun muse-colors-emphasized ()muse-colors-emphasized333,12000
(defun muse-colors-underlined ()muse-colors-underlined393,14762
(defun muse-colors-verbatim ()muse-colors-verbatim427,16344
(defcustom muse-colors-markupmuse-colors-markup463,18035
(defun muse-use-font-lock ()muse-use-font-lock532,20661
(defun muse-colors-buffer ()muse-colors-buffer549,21367
(defvar muse-colors-fontifying-p nilmuse-colors-fontifying-p554,21504
(defvar muse-colors-delayed-commands nilmuse-colors-delayed-commands558,21658
(defun muse-colors-region (beg end &optional verbose)muse-colors-region568,21995
(defcustom muse-colors-tagsmuse-colors-tags652,26094
(defvar muse-colors-inhibit-tags-in-directives tmuse-colors-inhibit-tags-in-directives681,27448
(defsubst muse-colors-tag-info (tagname &rest args)muse-colors-tag-info686,27707
(defun muse-colors-custom-tags ()muse-colors-custom-tags690,27853
(defun muse-unhighlight-region (begin end &optional verbose)muse-unhighlight-region725,29496
(defun muse-colors-example-tag (beg end)muse-colors-example-tag742,30276
(defun muse-colors-literal-tag (beg end)muse-colors-literal-tag752,30664
(defun muse-colors-lisp-tag (beg end attrs)muse-colors-lisp-tag761,30984
(defvar muse-mode-local-mapmuse-mode-local-map784,31820
(defvar muse-keymap-propertymuse-keymap-property804,32677
(defsubst muse-link-properties (help-str &optional face)muse-link-properties811,32856
(defun muse-link-face (link-name &optional explicit)muse-link-face819,33215
(defun muse-colors-use-publishing-directory (link)muse-colors-use-publishing-directory852,34602
(defun muse-colors-resolve-image-file (link)muse-colors-resolve-image-file862,34971
(defun muse-make-file-glyph (filename)muse-make-file-glyph871,35289
(defun muse-colors-insert-image (link beg end invis-props)muse-colors-insert-image885,35916
(defun muse-colors-explicit-link ()muse-colors-explicit-link911,37167
(defun muse-colors-implicit-link ()muse-colors-implicit-link965,39870
(defun muse-colors-title ()muse-colors-title987,40892
(defun muse-colors-title-lisp (beg end)muse-colors-title-lisp998,41415
(defun muse-colors-comment ()muse-colors-comment1010,41929

muse-3.20/muse-project.el,4312
(defgroup muse-project nilmuse-project41,1239
(defcustom muse-before-project-publish-hook nilmuse-before-project-publish-hook45,1346
(defcustom muse-after-project-publish-hook nilmuse-after-project-publish-hook52,1570
(defvar muse-project-alist-using-customize nilmuse-project-alist-using-customize59,1792
(defmacro with-muse-project (project &rest body)with-muse-project64,2022
(defun muse-project-alist-get (sym)muse-project-alist-get77,2428
(defun muse-project-alist-set (sym val)muse-project-alist-set112,3817
(define-widget 'muse-project 'defaultmuse-project145,5084
(defcustom muse-project-alist nilmuse-project-alist226,9451
(defcustom muse-project-ignore-regexpmuse-project-ignore-regexp242,10098
(defcustom muse-project-publish-private-files tmuse-project-publish-private-files253,10514
(defun muse-project-recurse-directory (base)muse-project-recurse-directory267,11028
(defun muse-project-alist-styles (entry-dir output-dir style &rest other)muse-project-alist-styles287,11882
(defun muse-project-alist-dirs (entry-dir)muse-project-alist-dirs313,13150
(defvar muse-project-file-alist nilmuse-project-file-alist325,13624
(defvar muse-project-file-alist-hook nilmuse-project-file-alist-hook328,13720
(defvar muse-current-project nilmuse-current-project332,13856
(defvar muse-current-project-global nilmuse-current-project-global335,13980
(defvar muse-current-output-style nilmuse-current-output-style339,14161
(defsubst muse-project (&optional project)muse-project342,14272
(defun muse-project-page-file (page project &optional no-check-p)muse-project-page-file352,14599
(defun muse-project-private-p (file)muse-project-private-p396,16633
(defun muse-project-file-entries (path)muse-project-file-entries411,17348
(defvar muse-updating-file-alist-p nilmuse-updating-file-alist-p445,18848
(defun muse-project-determine-last-mod (project &optional no-check-p)muse-project-determine-last-mod448,18966
(defun muse-project-file-alist (&optional project no-check-p)muse-project-file-alist472,20030
(defun muse-project-add-to-alist (file &optional project)muse-project-add-to-alist516,21912
(defun muse-project-of-file (&optional pathname)muse-project-of-file549,23535
(defun muse-project-after-save-hook ()muse-project-after-save-hook587,25471
(defun muse-read-project (prompt &optional no-check-p no-assume)muse-read-project595,25753
(defvar muse-project-page-history nil)muse-project-page-history609,26336
(defun muse-read-project-file (project prompt &optional default)muse-read-project-file611,26376
(defun muse-project-find-file (name project &optional command directory)muse-project-find-file621,26843
(defun muse-project-choose-style (closure test styles)muse-project-choose-style674,29272
(defun muse-project-choose-style-by-link-suffix (given-suffix style)muse-project-choose-style-by-link-suffix686,29733
(defun muse-project-applicable-styles (file styles)muse-project-applicable-styles694,30092
(defun muse-project-get-applicable-style (file styles)muse-project-get-applicable-style715,31108
(defun muse-project-resolve-directory (page local-style remote-style)muse-project-resolve-directory723,31445
(defun muse-project-resolve-link (page local-style remote-styles)muse-project-resolve-link739,32187
(defun muse-project-current-output-style (&optional file project)muse-project-current-output-style771,33489
(defun muse-project-link-page (page)muse-project-link-page778,33793
(defun muse-project-publish-file-default (file style output-dir force)muse-project-publish-file-default786,34160
(defun muse-project-publish-file (file styles &optional force)muse-project-publish-file794,34494
(defun muse-project-publish-this-file (&optional force style)muse-project-publish-this-file812,35249
(defun muse-project-save-buffers (&optional project)muse-project-save-buffers839,36621
(defun muse-project-publish-default (project styles &optional force)muse-project-publish-default871,37803
(defun muse-project-publish (project &optional force)muse-project-publish897,39093
(defun muse-project-batch-publish ()muse-project-batch-publish919,40082
(defun muse-project-set-variables ()muse-project-set-variables935,40656
(defun muse-project-delete-output-files (project)muse-project-delete-output-files953,41428

muse-3.20/muse-wiki.el,2530
(defgroup muse-wiki nilmuse-wiki41,1247
(defcustom muse-wiki-use-wikiword tmuse-wiki-use-wikiword45,1359
(defcustom muse-wiki-allow-nonexistent-wikiword nilmuse-wiki-allow-nonexistent-wikiword50,1487
(defcustom muse-wiki-match-all-project-files nilmuse-wiki-match-all-project-files55,1648
(defcustom muse-wiki-ignore-implicit-links-to-current-page nilmuse-wiki-ignore-implicit-links-to-current-page61,1870
(defvar muse-wiki-project-file-regexp nilmuse-wiki-project-file-regexp67,2085
(defun muse-wiki-update-project-file-regexp ()muse-wiki-update-project-file-regexp74,2370
(defcustom muse-wiki-wikiword-regexpmuse-wiki-wikiword-regexp95,3229
(defcustom muse-wiki-ignore-bare-project-names nilmuse-wiki-ignore-bare-project-names108,3686
(defvar muse-wiki-interwiki-regexp nilmuse-wiki-interwiki-regexp119,4055
(defcustom muse-wiki-interwiki-delimiter "#\\|::"muse-wiki-interwiki-delimiter125,4281
(defcustom muse-wiki-interwiki-replacement ": "muse-wiki-interwiki-replacement132,4457
(defun muse-wiki-project-files-with-spaces (&optional project)muse-wiki-project-files-with-spaces145,4821
(defun muse-wiki-update-interwiki-regexp ()muse-wiki-update-interwiki-regexp155,5187
(defcustom muse-wiki-interwiki-alistmuse-wiki-interwiki-alist185,6742
(defun muse-wiki-resolve-project-page (&optional project page)muse-wiki-resolve-project-page224,8135
(defun muse-wiki-handle-implicit-interwiki (&optional string)muse-wiki-handle-implicit-interwiki262,9943
(defun muse-wiki-handle-explicit-interwiki (&optional string)muse-wiki-handle-explicit-interwiki285,10959
(defun muse-wiki-handle-wikiword (&optional string)muse-wiki-handle-wikiword325,12924
(defcustom muse-wiki-publish-small-title-wordsmuse-wiki-publish-small-title-words355,14138
(defcustom muse-wiki-hide-nop-tag tmuse-wiki-hide-nop-tag364,14420
(defun muse-wiki-publish-pretty-title (&optional title explicit)muse-wiki-publish-pretty-title369,14556
(defun muse-wiki-publish-pretty-interwiki (desc &optional explicit)muse-wiki-publish-pretty-interwiki393,15555
(defun muse-wiki-colors-nop-tag (beg end)muse-wiki-colors-nop-tag405,16011
(defun muse-colors-wikiword-separate ()muse-colors-wikiword-separate416,16408
(defun muse-wiki-insinuate-colors ()muse-wiki-insinuate-colors420,16562
(defun muse-wiki-publish-nop-tag (beg end)muse-wiki-publish-nop-tag442,17358
(defun muse-wiki-insinuate-publish ()muse-wiki-insinuate-publish449,17584
(defun muse-wiki-update-custom-values ()muse-wiki-update-custom-values492,19123

muse-3.20/muse-texinfo.el,1637
(defgroup muse-texinfo nilmuse-texinfo39,1240
(defcustom muse-texinfo-process-natively nilmuse-texinfo-process-natively43,1351
(defcustom muse-texinfo-extension ".texi"muse-texinfo-extension49,1527
(defcustom muse-texinfo-info-extension ".info"muse-texinfo-info-extension54,1667
(defcustom muse-texinfo-pdf-extension ".pdf"muse-texinfo-pdf-extension59,1809
(defcustom muse-texinfo-headermuse-texinfo-header64,1948
(defcustom muse-texinfo-footermuse-texinfo-footer92,2673
(defcustom muse-texinfo-markup-regexps nilmuse-texinfo-markup-regexps101,2929
(defcustom muse-texinfo-markup-functionsmuse-texinfo-markup-functions113,3401
(defcustom muse-texinfo-markup-stringsmuse-texinfo-markup-strings122,3755
(defcustom muse-texinfo-markup-specialsmuse-texinfo-markup-specials185,6092
(defcustom muse-texinfo-markup-specials-urlmuse-texinfo-markup-specials-url193,6325
(defun muse-texinfo-decide-specials (context)muse-texinfo-decide-specials203,6611
(defun muse-texinfo-markup-table ()muse-texinfo-markup-table210,6927
(defun muse-texinfo-remove-links (string)muse-texinfo-remove-links234,7874
(defun muse-texinfo-protect-wikiwords (start end)muse-texinfo-protect-wikiwords248,8379
(defun muse-texinfo-markup-heading ()muse-texinfo-markup-heading258,8808
(defun muse-texinfo-munge-buffer ()muse-texinfo-munge-buffer269,9209
(defun muse-texinfo-pdf-browse-file (file)muse-texinfo-pdf-browse-file274,9363
(defun muse-texinfo-info-generate (file output-path final-target)muse-texinfo-info-generate277,9448
(defun muse-texinfo-pdf-generate (file output-path final-target)muse-texinfo-pdf-generate313,10869

muse-3.20/htmlize-hack.el,0

muse-3.20/muse-pkg.el,41
(define-package "muse" "3.20""muse"1,0

muse-3.20/muse-xml-common.el,738
(defcustom muse-xml-encoding-mapmuse-xml-encoding-map38,1237
(defun muse-xml-transform-content-type (content-type default)muse-xml-transform-content-type52,1778
(defcustom muse-xml-markup-specialsmuse-xml-markup-specials63,2225
(defcustom muse-xml-markup-specials-url-extramuse-xml-markup-specials-url-extra72,2481
(defun muse-xml-decide-specials (context)muse-xml-decide-specials84,2843
(defun muse-xml-escape-url (str)muse-xml-escape-url92,3137
(defun muse-xml-markup-anchor ()muse-xml-markup-anchor120,4394
(defun muse-xml-sort-table (table)muse-xml-sort-table130,4801
(defun muse-xml-markup-table (&optional attributes)muse-xml-markup-table143,5454
(defun muse-xml-prepare-buffer ()muse-xml-prepare-buffer195,8042

muse-3.20/muse-context.el,2222
(defgroup muse-context nilmuse-context36,1122
(defcustom muse-context-extension ".tex"muse-context-extension40,1233
(defcustom muse-context-pdf-extension ".pdf"muse-context-pdf-extension45,1372
(defcustom muse-context-pdf-program "texexec --pdf"muse-context-pdf-program50,1522
(defcustom muse-context-pdf-cruft '(".pgf" ".tmp" ".tui" ".tuo" ".toc"  ".log")muse-context-pdf-cruft55,1692
(defcustom muse-context-headermuse-context-header60,1889
(defcustom muse-context-footer "<lisp>(muse-context-bibliography)</lisp>muse-context-footer85,2699
(defcustom muse-context-markup-regexpsmuse-context-markup-regexps91,2906
(defcustom muse-context-markup-functionsmuse-context-markup-functions108,3526
(defcustom muse-context-markup-stringsmuse-context-markup-strings116,3836
(defcustom muse-context-slides-headermuse-context-slides-header189,6837
(defcustom muse-context-slides-markup-stringsmuse-context-slides-markup-strings212,7808
(defcustom muse-context-markup-specials-documentmuse-context-markup-specials-document220,8095
(defcustom muse-context-markup-specials-examplemuse-context-markup-specials-example240,8666
(defcustom muse-context-markup-specials-literalmuse-context-markup-specials-literal250,8991
(defcustom muse-context-markup-specials-urlmuse-context-markup-specials-url257,9243
(defcustom muse-context-markup-specials-imagemuse-context-markup-specials-image273,9651
(defun muse-context-decide-specials (context)muse-context-decide-specials289,10155
(defun muse-context-markup-table ()muse-context-markup-table304,10828
(defun muse-context-fixup-dquotes ()muse-context-fixup-dquotes330,11884
(defcustom muse-context-permit-contents-tag nilmuse-context-permit-contents-tag346,12349
(defun muse-context-fixup-citations ()muse-context-fixup-citations359,12833
(defun muse-context-munge-buffer ()muse-context-munge-buffer371,13250
(defun muse-context-bibliography ()muse-context-bibliography379,13539
(defun muse-context-setup-bibliography ()muse-context-setup-bibliography386,13732
(defun muse-context-pdf-browse-file (file)muse-context-pdf-browse-file395,14010
(defun muse-context-pdf-generate (file output-path final-target)muse-context-pdf-generate398,14095

muse-3.20/muse-blosxom.el,875
(defgroup muse-blosxom nilmuse-blosxom148,5522
(defcustom muse-blosxom-extension ".txt"muse-blosxom-extension153,5680
(defcustom muse-blosxom-headermuse-blosxom-header158,5819
(defcustom muse-blosxom-footer ""muse-blosxom-footer171,6378
(defcustom muse-blosxom-base-directory "~/Blog"muse-blosxom-base-directory176,6532
(defcustom muse-blosxom-use-tags nilmuse-blosxom-use-tags182,6735
(defcustom muse-blosxom-use-metadate nilmuse-blosxom-use-metadate194,7150
(defvar muse-blosxom-page-date-alist nil)muse-blosxom-page-date-alist209,7690
(defun muse-blosxom-update-page-date-alist ()muse-blosxom-update-page-date-alist211,7733
(defun muse-blosxom-title-to-file (title)muse-blosxom-title-to-file237,8840
(defun muse-blosxom-format-date (date)muse-blosxom-format-date245,9157
(defun muse-blosxom-new-entry (category title)muse-blosxom-new-entry250,9336

muse-3.20/muse-docbook.el,1305
(defgroup muse-docbook nilmuse-docbook42,1344
(defcustom muse-docbook-extension ".xml"muse-docbook-extension47,1506
(defcustom muse-docbook-headermuse-docbook-header52,1649
(defcustom muse-docbook-footer "muse-docbook-footer70,2417
(defcustom muse-docbook-markup-regexpsmuse-docbook-markup-regexps78,2677
(defcustom muse-docbook-markup-functionsmuse-docbook-markup-functions95,3433
(defcustom muse-docbook-markup-stringsmuse-docbook-markup-strings104,3777
(defcustom muse-docbook-encoding-default 'utf-8muse-docbook-encoding-default196,7577
(defcustom muse-docbook-charset-default "utf-8"muse-docbook-charset-default202,7785
(defun muse-docbook-encoding ()muse-docbook-encoding208,7976
(defun muse-docbook-markup-paragraph ()muse-docbook-markup-paragraph215,8203
(defun muse-docbook-get-author (&optional author)muse-docbook-get-author257,10095
(defun muse-docbook-fixup-images ()muse-docbook-fixup-images284,11307
(defun muse-docbook-fixup-citations ()muse-docbook-fixup-citations291,11599
(defun muse-docbook-munge-buffer ()muse-docbook-munge-buffer307,12211
(defun muse-docbook-entities ()muse-docbook-entities311,12312
(defun muse-docbook-bibliography ()muse-docbook-bibliography323,12670
(defun muse-docbook-finalize-buffer ()muse-docbook-finalize-buffer330,12838

muse-3.20/muse-http.el,1207
(defgroup muse-http nilmuse-http40,1253
(defcustom muse-http-maintainer (concat "webmaster@" (system-name))muse-http-maintainer44,1357
(defcustom muse-http-publishing-style "html"muse-http-publishing-style49,1524
(defcustom muse-http-max-cache-size 64muse-http-max-cache-size54,1664
(defvar muse-buffer-mtime nil)muse-buffer-mtime62,1936
(defun muse-sort-buffers (l r)muse-sort-buffers65,2016
(defun muse-winnow-list (entries &optional predicate)muse-winnow-list74,2319
(defun muse-http-prune-cache ()muse-http-prune-cache84,2656
(defvar muse-http-serving-p nil)muse-http-serving-p98,3202
(defun muse-http-send-buffer (&optional modified code msg)muse-http-send-buffer100,3236
(defun muse-http-reject (title msg &optional annotation)muse-http-reject119,4105
(defun muse-http-prepare-url (target explicit)muse-http-prepare-url127,4372
(defun muse-http-render-page (name)muse-http-render-page137,4776
(defun muse-http-transmit-page (name)muse-http-transmit-page185,7126
(defvar httpd-vars nil)httpd-vars196,7565
(defsubst httpd-var (var)httpd-var198,7590
(defsubst httpd-var-p (var)httpd-var-p202,7720
(defun muse-http-serve (page &optional content)muse-http-serve206,7844

muse-3.20/httpd.el,2368
(defvar httpd-document-root "/var/www")httpd-document-root51,1879
(defvar httpd-path-handlers '()httpd-path-handlers53,1920
(defvar httpd-mime-types-alisthttpd-mime-types-alist59,2135
(defun httpd-mime-type (filename)httpd-mime-type90,3110
(defun defhttpd-exception (name code msg)defhttpd-exception96,3307
(defhttpd-exception 'httpd-moved/perm       301 "Moved permanently")httpd-moved/perm101,3476
(defhttpd-exception 'httpd-moved/temp       302 "Moved temporarily")httpd-moved/temp102,3545
(defhttpd-exception 'httpd-bad-request      400 "Bad request")httpd-bad-request103,3614
(defhttpd-exception 'httpd-forbidden        403 "Forbidden")httpd-forbidden104,3677
(defhttpd-exception 'httpd-file-not-found   404 "Not found")httpd-file-not-found105,3738
(defhttpd-exception 'httpd-method-forbidden 405 "Method not allowed")httpd-method-forbidden106,3799
(defhttpd-exception 'httpd-unimplemented    500 "Internal server error")httpd-unimplemented107,3869
(defhttpd-exception 'httpd-unimplemented    501 "Not implemented")httpd-unimplemented108,3942
(defhttpd-exception 'httpd-unimplemented    503 "Service unavailable")httpd-unimplemented109,4009
(defvar httpd-endl "\r\n")httpd-endl111,4081
(defvar httpd-process nil)httpd-process113,4109
(defvar httpd-bytes-sent nil)		; only used with `httpd-process'httpd-bytes-sent114,4136
(defvar httpd-log-accesses t)httpd-log-accesses115,4200
(defun httpd-add-handler (path-regexp handler)httpd-add-handler117,4231
(defun httpd-try-internal-handler (path &optional cont)httpd-try-internal-handler120,4336
(defun httpd-date-stamp ()httpd-date-stamp128,4594
(defun httpd-log (&rest strings)httpd-log131,4671
(defun httpd-send-data (&rest strings)httpd-send-data138,4870
(defun httpd-send (code msg &rest strings)httpd-send144,5051
(defun httpd-send-eof ()httpd-send-eof150,5232
(defun httpd-send-file (filename)httpd-send-file154,5349
(defun httpd-lose (code msg)httpd-lose159,5480
(defun httpd-handle-redirect (req where)httpd-handle-redirect170,5820
(defun httpd-handle-GET+HEAD (path &optional want-data req)httpd-handle-GET+HEAD179,6093
(defun httpd-handle-request (req &optional cont)httpd-handle-request217,7448
(defun httpd-serve (proc string)httpd-serve242,8326
(defun httpd-start (&optional port)httpd-start256,8750
(defun httpd-stop ()httpd-stop279,9560

muse-3.20/muse-latex2png.el,790
(defgroup muse-latex2png nilmuse-latex2png42,1401
(defcustom muse-latex2png-img-dest "./latex"muse-latex2png-img-dest46,1499
(defcustom muse-latex2png-scale-factor 2.5muse-latex2png-scale-factor52,1699
(defcustom muse-latex2png-fg "Black"muse-latex2png-fg57,1856
(defcustom muse-latex2png-bg "Transparent"muse-latex2png-bg62,1962
(defcustom muse-latex2png-templatemuse-latex2png-template67,2074
(defun muse-latex2png-move2pubdir (file prefix pubdir)muse-latex2png-move2pubdir84,2436
(defun muse-latex2png (code prefix preamble)muse-latex2png104,3162
(defun muse-latex2png-region (beg end attrs)muse-latex2png-region154,5168
(defun muse-publish-latex-tag (beg end attrs)muse-publish-latex-tag204,7433
(defun muse-publish-math-tag (beg end)muse-publish-math-tag218,8053

muse-3.20/muse-autoloads.el,0

muse-3.20/muse-import-latex.el,221
(defun muse-i-l-write-citation (note author citation pages)muse-i-l-write-citation34,1104
(defun muse-i-l-write-footnote (note text)muse-i-l-write-footnote52,1711
(defun muse-import-latex ()muse-import-latex60,1932

muse-3.20/muse-html.el,2762
(defgroup muse-html nilmuse-html53,1842
(defcustom muse-html-extension ".html"muse-html-extension57,1953
(defcustom muse-xhtml-extension ".html"muse-xhtml-extension62,2084
(defcustom muse-html-style-sheetmuse-html-style-sheet67,2217
(defcustom muse-xhtml-style-sheetmuse-xhtml-style-sheet96,2904
(defcustom muse-html-headermuse-html-header125,3595
(defcustom muse-html-footer "muse-html-footer156,4849
(defcustom muse-xhtml-headermuse-xhtml-header164,5062
(defcustom muse-xhtml-footer "muse-xhtml-footer198,6490
(defcustom muse-html-anchor-on-word nilmuse-html-anchor-on-word206,6705
(defcustom muse-html-table-attributesmuse-html-table-attributes214,7019
(defcustom muse-html-markup-regexpsmuse-html-markup-regexps222,7312
(defcustom muse-html-markup-functionsmuse-html-markup-functions242,8211
(defcustom muse-html-markup-stringsmuse-html-markup-strings252,8599
(defcustom muse-xhtml-markup-stringsmuse-xhtml-markup-strings337,11851
(defcustom muse-xhtml1.1-markup-stringsmuse-xhtml1.1-markup-strings364,12971
(defcustom muse-html-markup-tagsmuse-html-markup-tags375,13397
(defcustom muse-html-meta-http-equiv "Content-Type"muse-html-meta-http-equiv387,13919
(defcustom muse-html-meta-content-type "text/html"muse-html-meta-content-type392,14068
(defcustom muse-html-meta-content-encoding (if (featurep 'mule)muse-html-meta-content-encoding399,14312
(defcustom muse-html-encoding-default 'iso-8859-1muse-html-encoding-default409,14786
(defcustom muse-html-charset-default "iso-8859-1"muse-html-charset-default415,14993
(defcustom muse-html-src-allowed-modes tmuse-html-src-allowed-modes421,15178
(defun muse-html-insert-anchor (anchor)muse-html-insert-anchor432,15570
(defun muse-html-markup-anchor ()muse-html-markup-anchor450,16373
(defun muse-html-markup-paragraph ()muse-html-markup-paragraph456,16557
(defun muse-html-markup-footnote ()muse-html-markup-footnote495,17941
(defun muse-html-markup-table ()muse-html-markup-table527,19205
(defun muse-html-strip-links (string)muse-html-strip-links532,19323
(defun muse-html-insert-contents (depth)muse-html-insert-contents536,19475
(defun muse-html-denote-headings ()muse-html-denote-headings602,22547
(defun muse-html-class-tag (beg end attrs)muse-html-class-tag614,23091
(defun muse-html-div-tag (beg end attrs)muse-html-div-tag623,23359
(defun muse-html-src-tag (beg end attrs)muse-html-src-tag636,23783
(defun muse-html-browse-file (file)muse-html-browse-file686,25793
(defun muse-html-encoding ()muse-html-encoding689,25868
(defun muse-html-prepare-buffer ()muse-html-prepare-buffer698,26183
(defun muse-html-munge-buffer ()muse-html-munge-buffer707,26563
(defun muse-html-finalize-buffer ()muse-html-finalize-buffer715,26862

muse-3.20/muse-regexps.el,1731
(defgroup muse-regexp nilmuse-regexp38,1269
(defcustom muse-regexp-use-character-classes 'undecidedmuse-regexp-use-character-classes45,1463
(defvar muse-regexp-emacs-revisionmuse-regexp-emacs-revision59,2033
(defun muse-extreg-usable-p ()muse-extreg-usable-p67,2335
(defcustom muse-regexp-blankmuse-regexp-blank88,3002
(defcustom muse-regexp-alnummuse-regexp-alnum102,3392
(defcustom muse-regexp-lowermuse-regexp-lower116,3802
(defcustom muse-regexp-uppermuse-regexp-upper130,4181
(defcustom muse-list-item-regexpmuse-list-item-regexp146,4611
(defcustom muse-ol-item-regexp (concat "\\`[" muse-regexp-blank "]+[0-9]+\\.")muse-ol-item-regexp156,5053
(defcustom muse-ul-item-regexp (concat "\\`[" muse-regexp-blank "]+-")muse-ul-item-regexp161,5219
(defcustom muse-dl-term-regexpmuse-dl-term-regexp166,5379
(defcustom muse-dl-entry-regexp (concat "\\`[" muse-regexp-blank "]*::")muse-dl-entry-regexp174,5664
(defcustom muse-table-field-regexpmuse-table-field-regexp179,5827
(defcustom muse-table-line-regexp (concat ".*" muse-table-field-regexp ".*")muse-table-line-regexp186,6052
(defcustom muse-table-hline-regexp (concat "[" muse-regexp-blankmuse-table-hline-regexp191,6224
(defcustom muse-table-el-border-regexp (concat "[" muse-regexp-blank "]*"muse-table-el-border-regexp198,6517
(defcustom muse-table-el-line-regexp (concat "[" muse-regexp-blank "]*"muse-table-el-line-regexp205,6845
(defcustom muse-tag-regexpmuse-tag-regexp212,7152
(defcustom muse-explicit-link-regexpmuse-explicit-link-regexp221,7521
(defcustom muse-implicit-link-regexpmuse-implicit-link-regexp228,7783
(defcustom muse-file-regexpmuse-file-regexp248,8406
(defcustom muse-image-regexpmuse-image-regexp256,8683

muse-3.20/cgi.el,599
(defconst cgi-url-unreserved-chars '(cgi-url-unreserved-chars75,2741
(defun cgi-int-char (i)cgi-int-char83,3036
(defun cgi-hex-char-p (ch)cgi-hex-char-p86,3104
(defun cgi-decode-string (str)cgi-decode-string93,3330
(defun cgi-position (item seq &optional start end)cgi-position112,3871
(defun cgi-decode (q)cgi-decode122,4233
(defun cgi-lose (fmt &rest args)cgi-lose130,4499
(defmacro cgi-evaluate (&rest forms)cgi-evaluate140,4876
(defun cgi-arguments ()cgi-arguments145,5037
(defun cgi-calendar-string ()cgi-calendar-string194,6983
(defun cgi-calendar ()cgi-calendar208,7413

muse-3.20/muse-journal.el,2624
(defgroup muse-journal nilmuse-journal91,2985
(defcustom muse-journal-heading-regexpmuse-journal-heading-regexp95,3095
(defcustom muse-journal-date-format "%a, %e %b %Y"muse-journal-date-format103,3383
(defcustom muse-journal-html-heading-regexpmuse-journal-html-heading-regexp108,3519
(defcustom muse-journal-rss-heading-regexpmuse-journal-rss-heading-regexp116,3850
(defcustom muse-journal-html-entry-templatemuse-journal-html-entry-template124,4168
(defcustom muse-journal-latex-sectionmuse-journal-latex-section149,4811
(defcustom muse-journal-latex-subsectionmuse-journal-latex-subsection156,5031
(defcustom muse-journal-markup-tagsmuse-journal-markup-tags163,5230
(defun muse-journal-generate-pages ()muse-journal-generate-pages179,5920
(defcustom muse-journal-rdf-extension ".rdf"muse-journal-rdf-extension189,6306
(defcustom muse-journal-rdf-base-url ""muse-journal-rdf-base-url194,6455
(defcustom muse-journal-rdf-headermuse-journal-rdf-header199,6596
(defcustom muse-journal-rdf-footermuse-journal-rdf-footer224,7647
(defcustom muse-journal-rdf-date-formatmuse-journal-rdf-date-format231,7824
(defcustom muse-journal-rdf-entry-templatemuse-journal-rdf-entry-template237,7967
(defcustom muse-journal-rdf-summarize-entries nilmuse-journal-rdf-summarize-entries252,8386
(defcustom muse-journal-rss-extension ".xml"muse-journal-rss-extension259,8612
(defcustom muse-journal-rss-base-url ""muse-journal-rss-base-url264,8755
(defcustom muse-journal-rss-headermuse-journal-rss-header269,8896
(defcustom muse-journal-rss-footermuse-journal-rss-footer285,9560
(defcustom muse-journal-rss-date-formatmuse-journal-rss-date-format292,9745
(defcustom muse-journal-rss-entry-templatemuse-journal-rss-entry-template298,9899
(defcustom muse-journal-rss-enclosure-types-alistmuse-journal-rss-enclosure-types-alist313,10378
(defcustom muse-journal-rss-summarize-entries nilmuse-journal-rss-summarize-entries321,10668
(defcustom muse-journal-rss-markup-regexpsmuse-journal-rss-markup-regexps328,10894
(defcustom muse-journal-rss-markup-functionsmuse-journal-rss-markup-functions342,11433
(defun muse-journal-anchorize-title (title)muse-journal-anchorize-title352,11770
(defun muse-journal-sort-entries (&optional direction)muse-journal-sort-entries377,12948
(defun muse-journal-qotd-tag (beg end)muse-journal-qotd-tag398,13470
(defun muse-journal-html-munge-buffer ()muse-journal-html-munge-buffer406,13793
(defun muse-journal-latex-munge-buffer ()muse-journal-latex-munge-buffer506,18479
(defun muse-journal-rss-munge-buffer ()muse-journal-rss-munge-buffer578,21580

muse-3.20/muse-mode.el,4325
(defgroup muse-mode nilmuse-mode72,2342
(defcustom muse-mode-highlight-p tmuse-mode-highlight-p76,2446
(defcustom muse-mode-auto-p nilmuse-mode-auto-p82,2599
(defun muse-mode-maybe-after-init ()muse-mode-maybe-after-init93,2959
(defcustom muse-mode-intangible-links nilmuse-mode-intangible-links101,3215
(defcustom muse-mode-hook nilmuse-mode-hook108,3471
(defcustom muse-grep-commandmuse-grep-command115,3683
(defvar muse-insert-mapmuse-insert-map142,4778
(defvar muse-mode-mapmuse-mode-map152,5009
(define-derived-mode muse-mode text-mode "Muse"muse-mode207,7299
(defun muse-mode-fill-nobreak-p ()muse-mode-fill-nobreak-p273,10002
(defun muse-mode-fill-paragraph (arg)muse-mode-fill-paragraph286,10422
(defun muse-mode-flyspell-p ()muse-mode-flyspell-p306,11199
(defun muse-mode-choose-mode ()muse-mode-choose-mode318,11637
(defun muse-mode-maybe ()muse-mode-maybe324,11885
(defun muse-on-blank-line ()muse-on-blank-line333,12155
(defun muse-get-paragraph-start ()muse-get-paragraph-start339,12319
(defun muse-insert-thing ()muse-insert-thing351,12798
(defun muse-insert-list-item ()muse-insert-list-item364,13255
(defun muse-alter-list-item-indentation (operation)muse-alter-list-item-indentation396,14547
(defun muse-increase-list-item-indentation ()muse-increase-list-item-indentation438,16507
(defun muse-decrease-list-item-indentation ()muse-decrease-list-item-indentation444,16688
(defun muse-mode-completions ()muse-mode-completions451,16904
(defun muse-mode-current-word ()muse-mode-current-word458,17160
(defun muse-link-at-point (&optional pos)muse-link-at-point468,17484
(defun muse-make-link (link &optional desc)muse-make-link510,19380
(defun muse-insert-relative-link-to-file ()muse-insert-relative-link-to-file523,19884
(defcustom muse-insert-url-initial-input "http://"muse-insert-url-initial-input533,20336
(defun muse-insert-url ()muse-insert-url539,20533
(defun muse-edit-link-at-point ()muse-edit-link-at-point547,20772
(defun muse-visit-link-default (link &optional other-window)muse-visit-link-default562,21263
(defun muse-visit-link (link &optional other-window)muse-visit-link607,23170
(defun muse-browse-result (style &optional other-window)muse-browse-result616,23520
(defun muse-follow-name-at-point (&optional other-window)muse-follow-name-at-point645,24829
(defun muse-follow-name-at-point-other-window ()muse-follow-name-at-point-other-window654,25097
(defun muse-follow-name-at-mouse (event &optional other-window)muse-follow-name-at-mouse659,25241
(defun muse-follow-name-at-mouse-other-window (event)muse-follow-name-at-mouse-other-window680,26182
(defun muse-next-reference ()muse-next-reference689,26463
(defun muse-previous-reference ()muse-previous-reference709,27083
(defun muse-what-changed ()muse-what-changed750,28695
(defvar muse-search-history nil)muse-search-history758,28917
(defun muse-grep (string &optional grep-command-no-shadow)muse-grep760,28951
(defun muse-search-with-command (text)muse-search-with-command790,30303
(defun muse-search ()muse-search806,30922
(defun muse-find-backlinks ()muse-find-backlinks812,31078
(defun muse-generate-index (&optional as-list exclude-private)muse-generate-index820,31271
(defun muse-index ()muse-index829,31583
(defun muse-index-as-string (&optional as-list exclude-private exclude-current)muse-index-as-string841,31962
(defvar muse-tag-history nilmuse-tag-history862,32909
(defvar muse-custom-tags nilmuse-custom-tags867,33091
(defun muse-insert-tag (tag)muse-insert-tag873,33305
(defvar muse-list-edit-minor-mode-mapmuse-list-edit-minor-mode-map910,34513
(defvar muse-l-e-m-m-list-item-regexpmuse-l-e-m-m-list-item-regexp919,34865
(defun muse-l-e-m-m-insert-list-item ()muse-l-e-m-m-insert-list-item928,35324
(defun muse-l-e-m-m-increase-list-item-indent ()muse-l-e-m-m-increase-list-item-indent935,35605
(defun muse-l-e-m-m-decrease-list-item-indent ()muse-l-e-m-m-decrease-list-item-indent941,35853
(defvar muse-l-e-m-m-data nilmuse-l-e-m-m-data947,36101
(define-minor-mode muse-list-edit-minor-modemuse-list-edit-minor-mode952,36262
(defun turn-on-muse-list-edit-minor-mode ()turn-on-muse-list-edit-minor-mode1005,38407
(defun turn-off-muse-list-edit-minor-mode ()turn-off-muse-list-edit-minor-mode1009,38540

muse-3.20/muse-poem.el,793
(defgroup muse-poem nilmuse-poem70,2193
(defcustom muse-poem-latex-headermuse-poem-latex-header74,2297
(defcustom muse-poem-latex-footer "\n\\vfillmuse-poem-latex-footer100,2869
(defcustom muse-poem-markup-stringsmuse-poem-markup-strings108,3056
(defcustom muse-chapbook-latex-headermuse-chapbook-latex-header117,3398
(defcustom muse-chapbook-latex-footer "\n\\end{document}"muse-chapbook-latex-footer143,4018
(defvar muse-poem-longest-line "")muse-poem-longest-line149,4208
(defcustom muse-poem-chapbook-stringsmuse-poem-chapbook-strings151,4244
(defun muse-poem-prepare-buffer ()muse-poem-prepare-buffer169,4811
(defvar muse-poem-tag '("poem" nil t nil muse-poem-markup-tag))muse-poem-tag194,5692
(defun muse-poem-markup-tag (beg end attrs)muse-poem-markup-tag196,5757

muse-3.20/muse.el,4069
(defvar muse-version "3.20"muse-version52,1805
(defun muse-version (&optional insert)muse-version55,1876
(defgroup muse nilmuse63,2128
(defvar muse-under-windows-p (memq system-type '(ms-dos windows-nt)))muse-under-windows-p69,2303
(defvar muse-update-values-hook nilmuse-update-values-hook79,2494
(defun muse-update-values ()muse-update-values84,2690
(defvar muse-ignored-extensions-regexp nilmuse-ignored-extensions-regexp111,3647
(defun muse-update-file-extension (sym val)muse-update-file-extension115,3818
(defcustom muse-file-extension "muse"muse-file-extension139,4853
(defcustom muse-completing-read-function 'completing-readmuse-completing-read-function148,5151
(defun muse-update-ignored-extensions-regexp (sym val)muse-update-ignored-extensions-regexp154,5380
(defcustom muse-ignored-extensions '("bz2" "gz" "[Zz]")muse-ignored-extensions173,6073
(defun muse-update-file-extension-after-init ()muse-update-file-extension-after-init183,6431
(defsubst muse-delete-file-if-exists (file)muse-delete-file-if-exists201,7024
(defsubst muse-time-less-p (t1 t2)muse-time-less-p206,7155
(defun muse-current-file ()muse-current-file215,7403
(defun muse-page-name (&optional name)muse-page-name222,7661
(defun muse-display-warning (message)muse-display-warning238,8252
(defun muse-eval-lisp (form)muse-eval-lisp254,8778
(defmacro muse-with-temp-buffer (&rest body)muse-with-temp-buffer276,9535
(defun muse-insert-file-contents (filename &optional visit)muse-insert-file-contents318,11353
(defun muse-write-file (filename &optional nomessage)muse-write-file336,12148
(defun muse-collect-alist (list element &optional test)muse-collect-alist380,14203
(defmacro muse-sort-with-closure (list predicate closure)muse-sort-with-closure390,14547
(defun muse-sort-by-rating (rated-list &optional test)muse-sort-by-rating401,15064
(defun muse-escape-specials-in-string (specials string &optional reverse)muse-escape-specials-in-string419,15730
(defun muse-trim-whitespace (string)muse-trim-whitespace445,16761
(defun muse-path-sans-extension (path)muse-path-sans-extension451,16991
(defun muse-const-expr-p (x)muse-const-expr-p464,17452
(defun muse-list* (arg &rest rest)muse-list*477,17942
(defmacro muse-assert (form &optional show-args string &rest args)muse-assert489,18439
(defun muse-replace-regexp-in-string (regexp replacement text &optional fixedcase literal)muse-replace-regexp-in-string534,20285
(defun muse-file-remote-p (file)muse-file-remote-p572,22045
(defun muse-copy-face (old new)muse-copy-face608,23379
(defun muse-widget-type-value-create (widget)muse-widget-type-value-create616,23555
(defun muse-widget-child-value-get (widget)muse-widget-child-value-get628,24110
(defun muse-widget-type-match (widget value)muse-widget-type-match632,24271
(defun muse-get-link (&optional target)muse-get-link640,24561
(defun muse-get-link-desc (&optional target)muse-get-link-desc645,24746
(defvar muse-link-specialsmuse-link-specials650,24948
(defun muse-link-escape (text)muse-link-escape658,25193
(defun muse-link-unescape (text)muse-link-unescape664,25386
(defun muse-handle-url (&optional string)muse-handle-url670,25586
(defcustom muse-implicit-link-functions '(muse-handle-url)muse-implicit-link-functions676,25809
(defun muse-handle-implicit-link (&optional link)muse-handle-implicit-link686,26130
(defcustom muse-explicit-link-functions nilmuse-explicit-link-functions713,27065
(defun muse-handle-explicit-link (&optional link)muse-handle-explicit-link719,27244
(defun muse-list-item-type (str)muse-list-item-type743,28023
(defun muse-list-item-critical-point (&optional offset)muse-list-item-critical-point760,28552
(defun muse-forward-paragraph (&optional pattern)muse-forward-paragraph773,29006
(defun muse-forward-list-item-1 (type empty-line indented-line)muse-forward-list-item-1789,29706
(defun muse-forward-list-item (type indent &optional no-skip-nested)muse-forward-list-item810,30497
(defun muse-goto-tag-end (tag nested)muse-goto-tag-end861,33044

muse-3.20/muse-book.el,756
(defgroup muse-book nilmuse-book40,1254
(defcustom muse-book-before-publish-hook nilmuse-book-before-publish-hook47,1537
(defcustom muse-book-after-publish-hook nilmuse-book-after-publish-hook52,1676
(defcustom muse-book-latex-headermuse-book-latex-header57,1813
(defcustom muse-book-latex-footermuse-book-latex-footer77,2312
(defun muse-book-publish-chapter (title entry style &optional nochapters)muse-book-publish-chapter84,2523
(defun muse-book-publish-p (project target)muse-book-publish-p116,3880
(defun muse-book-get-directives (file)muse-book-get-directives132,4520
(defun muse-book-publish-projectmuse-book-publish-project152,5339
(defun muse-book-publish (file style &optional output-dir force title)muse-book-publish172,6297

muse-3.20/muse-import-docbook.el,1667
(defvar muse-import-docbook-prefix "muse-import-docbook-"muse-import-docbook-prefix36,1187
(defvar muse-import-docbook-para-indent "\n\n"muse-import-docbook-para-indent39,1285
(defun muse-import-docbook-reset-para-indent ()muse-import-docbook-reset-para-indent42,1408
(defun muse-import-docbook (src dest)muse-import-docbook47,1522
(defun muse-import-docbook-files (src dest)muse-import-docbook-files55,1864
(defun muse-import-docbook-get-title (node)muse-import-docbook-get-title64,2156
(defun muse-import-docbook-article (node)muse-import-docbook-article70,2365
(defun muse-import-docbook-articleinfo (node)muse-import-docbook-articleinfo74,2471
(defalias 'muse-import-docbook-appendix 'muse-import-docbook-article)muse-import-docbook-appendix81,2627
(defalias 'muse-import-docbook-appendixinfo 'muse-import-docbook-articleinfo)muse-import-docbook-appendixinfo83,2698
(defun muse-import-docbook-sect1 (node)muse-import-docbook-sect186,2778
(defun muse-import-docbook-sect2 (node)muse-import-docbook-sect291,2913
(defun muse-import-docbook-sect3 (node)muse-import-docbook-sect396,3049
(defun muse-import-docbook-graphic (node)muse-import-docbook-graphic102,3187
(defun muse-import-docbook-para (node)muse-import-docbook-para107,3391
(defun muse-import-docbook-emphasis (node)muse-import-docbook-emphasis112,3506
(defun muse-import-docbook-quote (node)muse-import-docbook-quote117,3611
(defun muse-import-docbook-blockquote (node)muse-import-docbook-blockquote122,3715
(defun muse-import-docbook-member (node)muse-import-docbook-member127,3884
(defun muse-import-docbook-bridgehead (node)muse-import-docbook-bridgehead131,3975

muse-3.20/texi/Makefile,77
DEFS = $(shell test -f ../Makefile.defs && echo ../Makefile.defs \DEFS4,96

muse-3.20/muse-groff.el,1269
(defgroup muse-groff nilmuse-groff40,1265
(defcustom muse-groff-extension ".groff"muse-groff-extension44,1382
(defcustom muse-groff-pdf-extension ".pdf"muse-groff-pdf-extension49,1528
(defcustom muse-groff-headermuse-groff-header54,1683
(defcustom muse-groff-footer " "muse-groff-footer70,2167
(defcustom muse-groff-markup-regexpsmuse-groff-markup-regexps75,2308
(defcustom muse-groff-markup-functionsmuse-groff-markup-functions92,3011
(defcustom muse-groff-markup-tagsmuse-groff-markup-tags100,3315
(defcustom muse-groff-markup-stringsmuse-groff-markup-strings110,3724
(defcustom muse-groff-markup-specialsmuse-groff-markup-specials175,6186
(defun muse-groff-markup-paragraph ()muse-groff-markup-paragraph181,6385
(defun muse-groff-protect-leading-chars ()muse-groff-protect-leading-chars188,6669
(defun muse-groff-concat-lists ()muse-groff-concat-lists194,6881
(defun muse-groff-fixup-dquotes ()muse-groff-fixup-dquotes207,7290
(defun muse-groff-prepare-buffer ()muse-groff-prepare-buffer221,7710
(defun muse-groff-munge-buffer ()muse-groff-munge-buffer225,7811
(defun muse-groff-pdf-browse-file (file)muse-groff-pdf-browse-file229,7901
(defun muse-groff-pdf-generate (file output-path final-target)muse-groff-pdf-generate232,7984

muse-3.20/muse-ikiwiki.el,818
(defgroup muse-ikiwiki nilmuse-ikiwiki42,1254
(defcustom muse-ikiwiki-header ""muse-ikiwiki-header46,1377
(defcustom muse-ikiwiki-footer ""muse-ikiwiki-footer52,1537
(defcustom muse-ikiwiki-markup-regexpsmuse-ikiwiki-markup-regexps58,1697
(defun muse-ikiwiki-markup-directive ()muse-ikiwiki-markup-directive80,2593
(defun muse-ikiwiki-publish-buffer (name title &optional style)muse-ikiwiki-publish-buffer87,2920
(defun muse-ikiwiki-publish-file (file name &optional style)muse-ikiwiki-publish-file103,3650
(defun muse-ikiwiki-start-server (port)muse-ikiwiki-start-server128,4738
(defface muse-ikiwiki-directivemuse-ikiwiki-directive134,4917
(defun muse-colors-ikiwiki-directive ()muse-colors-ikiwiki-directive142,5148
(defun muse-ikiwiki-insinuate-colors ()muse-ikiwiki-insinuate-colors204,8049

muse-3.20/muse-import-xml.el,611
(defvar muse-import-xml-prefix ""muse-import-xml-prefix36,1089
(defvar muse-import-xml-generic-function-name "muse-import-xml-generic"muse-import-xml-generic-function-name39,1163
(defun muse-import-xml-convert-to-list (buf)muse-import-xml-convert-to-list42,1267
(defun muse-import-xml-generic (node)muse-import-xml-generic54,1667
(defun muse-import-xml-parse-tree (lst)muse-import-xml-parse-tree61,1932
(defun muse-import-xml-parse-node (node)muse-import-xml-parse-node65,2043
(defun muse-import-xml-node (node)muse-import-xml-node76,2469
(defun muse-import-xml (src dest)muse-import-xml81,2589

muse-3.20/muse-latex.el,2756
(defgroup muse-latex nilmuse-latex54,1825
(defcustom muse-latex-extension ".tex"muse-latex-extension58,1932
(defcustom muse-latex-pdf-extension ".pdf"muse-latex-pdf-extension63,2065
(defcustom muse-latex-pdf-browser "open %s"muse-latex-pdf-browser68,2209
(defcustom muse-latex-pdf-program "pdflatex"muse-latex-pdf-program74,2383
(defcustom muse-latex-pdf-cruftmuse-latex-pdf-cruft79,2542
(defcustom muse-latex-headermuse-latex-header85,2743
(defcustom muse-latex-footer "<lisp>(muse-latex-bibliography)</lisp>muse-latex-footer119,3639
(defcustom muse-latexcjk-headermuse-latexcjk-header125,3843
(defcustom muse-latexcjk-footermuse-latexcjk-footer151,4612
(defcustom muse-latex-slides-headermuse-latex-slides-header159,4802
(defcustom muse-latex-lecture-notes-headermuse-latex-lecture-notes-header194,5730
(defcustom muse-latex-markup-regexpsmuse-latex-markup-regexps231,6712
(defcustom muse-latex-markup-functionsmuse-latex-markup-functions248,7328
(defcustom muse-latex-markup-stringsmuse-latex-markup-strings256,7632
(defcustom muse-latex-slides-markup-tagsmuse-latex-slides-markup-tags335,10587
(defcustom muse-latexcjk-encoding-mapmuse-latexcjk-encoding-map345,11047
(defcustom muse-latexcjk-encoding-default "{GB}{song}"muse-latexcjk-encoding-default357,11554
(defun muse-latexcjk-encoding ()muse-latexcjk-encoding363,11767
(defun muse-latexcjk-transform-content-type (content-type)muse-latexcjk-transform-content-type367,11916
(defcustom muse-latex-markup-specials-documentmuse-latex-markup-specials-document377,12334
(defcustom muse-latex-markup-specials-examplemuse-latex-markup-specials-example397,12884
(defcustom muse-latex-markup-specials-literalmuse-latex-markup-specials-literal407,13205
(defcustom muse-latex-markup-specials-urlmuse-latex-markup-specials-url426,13737
(defcustom muse-latex-markup-specials-imagemuse-latex-markup-specials-image442,14143
(defun muse-latex-decide-specials (context)muse-latex-decide-specials458,14549
(defcustom muse-latex-permit-contents-tag nilmuse-latex-permit-contents-tag473,15186
(defun muse-latex-markup-table ()muse-latex-markup-table486,15664
(defun muse-latex-slide-tag (beg end attrs)muse-latex-slide-tag512,16636
(defun muse-latex-fixup-dquotes ()muse-latex-fixup-dquotes528,17135
(defun muse-latex-fixup-citations ()muse-latex-fixup-citations544,17598
(defun muse-latex-fixup-headings ()muse-latex-fixup-headings556,18011
(defun muse-latex-munge-buffer ()muse-latex-munge-buffer570,18552
(defun muse-latex-bibliography ()muse-latex-bibliography579,18866
(defun muse-latex-pdf-browse-file (file)muse-latex-pdf-browse-file589,19115
(defun muse-latex-pdf-generate (file output-path final-target)muse-latex-pdf-generate592,19213

muse-3.20/muse-publish.el,11401
(defgroup muse-publish nilmuse-publish52,1687
(defcustom muse-before-publish-hook nilmuse-before-publish-hook56,1796
(defcustom muse-after-publish-hook nilmuse-after-publish-hook61,1940
(defcustom muse-publish-url-transformsmuse-publish-url-transforms66,2082
(defcustom muse-publish-desc-transformsmuse-publish-desc-transforms74,2340
(defcustom muse-publish-date-format "%B %e, %Y"muse-publish-date-format83,2635
(defcustom muse-publish-comments-p nilmuse-publish-comments-p89,2854
(defcustom muse-publish-report-threshhold 100000muse-publish-report-threshhold95,3050
(defcustom muse-publish-markup-regexpsmuse-publish-markup-regexps100,3207
(defcustom muse-publish-markup-functionsmuse-publish-markup-functions228,8039
(defcustom muse-publish-markup-tagsmuse-publish-markup-tags265,9511
(defcustom muse-publish-markup-header-footer-tagsmuse-publish-markup-header-footer-tags317,12035
(defcustom muse-publish-markup-specials nilmuse-publish-markup-specials329,12591
(defcustom muse-publish-enable-local-variables nilmuse-publish-enable-local-variables334,12779
(defcustom muse-publish-enable-dangerous-tags tmuse-publish-enable-dangerous-tags339,12941
(defvar muse-publishing-p nilmuse-publishing-p349,13276
(defvar muse-batch-publishing-p nilmuse-batch-publishing-p351,13361
(defvar muse-inhibit-before-publish-hook nilmuse-inhibit-before-publish-hook353,13458
(defvar muse-publishing-styles nilmuse-publishing-styles356,13619
(defvar muse-publishing-current-file nilmuse-publishing-current-file359,13767
(defvar muse-publishing-current-output-path nilmuse-publishing-current-output-path361,13857
(defvar muse-publishing-current-style nilmuse-publishing-current-style363,13964
(defvar muse-publishing-directives nilmuse-publishing-directives365,14068
(defvar muse-publish-generate-contents nilmuse-publish-generate-contents367,14170
(defvar muse-publishing-last-position nilmuse-publishing-last-position372,14415
(defvar muse-publish-inhibit-style-hooks nilmuse-publish-inhibit-style-hooks376,14570
(defvar muse-publish-use-header-footer-tags nilmuse-publish-use-header-footer-tags379,14695
(defvar muse-inhibit-style-tags nilmuse-inhibit-style-tags383,14871
(defsubst muse-style (&optional style)muse-style389,15059
(defun muse-define-style (name &rest elements)muse-define-style398,15338
(defun muse-derive-style (new-name base-name &rest elements)muse-derive-style406,15614
(defsubst muse-get-keyword (keyword list &optional direct)muse-get-keyword410,15765
(defun muse-style-elements-list (elem &optional style)muse-style-elements-list416,15956
(defun muse-style-element (elem &optional style direct)muse-style-element427,16375
(defun muse-style-derived-p-1 (base style)muse-style-derived-p-1438,16770
(defun muse-style-derived-p (base &optional style)muse-style-derived-p448,17086
(defun muse-find-markup-element (keyword ident style)muse-find-markup-element460,17424
(defun muse-markup-text (ident &rest args)muse-markup-text468,17705
(defun muse-insert-markup (&rest args)muse-insert-markup490,18745
(defun muse-find-markup-tag (keyword tagname style)muse-find-markup-tag495,18881
(defun muse-markup-tag-info (tagname &rest args)muse-markup-tag-info502,19149
(defsubst muse-markup-function (category)muse-markup-function511,19528
(defun muse-publish-markup (name rules)muse-publish-markup518,19747
(defun muse-insert-file-or-string (file-or-string &optional title)muse-insert-file-or-string573,22289
(defun muse-style-run-hooks (keyword style &rest args)muse-style-run-hooks593,23154
(defun muse-publish-markup-region (beg end &optional title style)muse-publish-markup-region606,23632
(defun muse-publish-markup-buffer (title style)muse-publish-markup-buffer633,24730
(defun muse-publish-markup-string (string &optional style)muse-publish-markup-string663,26059
(defun muse-publish-get-style (&optional styles)muse-publish-get-style675,26465
(defsubst muse-publish-get-output-dir (style)muse-publish-get-output-dir699,27474
(defsubst muse-publish-get-info ()muse-publish-get-info704,27717
(defsubst muse-publish-output-name (&optional file style)muse-publish-output-name709,27879
(defsubst muse-publish-output-file (file &optional output-dir style)muse-publish-output-file715,28096
(defsubst muse-publish-link-name (&optional file style)muse-publish-link-name722,28383
(defsubst muse-publish-link-file (file &optional style)muse-publish-link-file734,28899
(defsubst muse-publish-link-page (page)muse-publish-link-page751,29523
(defmacro muse-publish-ensure-block (beg &optional end)muse-publish-ensure-block763,29935
(defun muse-publish-region (beg end &optional title style)muse-publish-region791,30964
(defun muse-publish-file (file style &optional output-dir force)muse-publish-file810,31751
(defun muse-publish-this-file (style output-dir &optional force)muse-publish-this-file849,33576
(defun muse-batch-publish-files ()muse-batch-publish-files863,34248
(defun muse-publish-section-close (depth)muse-publish-section-close889,35294
(defun muse-publish-markup-directive (&optional name value)muse-publish-markup-directive908,36046
(defsubst muse-publishing-directive (name)muse-publishing-directive922,36655
(defmacro muse-publish-get-and-delete-attr (attr attrs)muse-publish-get-and-delete-attr925,36748
(defun muse-publish-markup-anchor ()muse-publish-markup-anchor947,37521
(defun muse-publish-markup-comment ()muse-publish-markup-comment956,37860
(defun muse-publish-markup-tag ()muse-publish-markup-tag969,38370
(defun muse-publish-escape-specials (beg end &optional ignore-read-only context)muse-publish-escape-specials1012,40264
(defun muse-publish-markup-word ()muse-publish-markup-word1053,42019
(defun muse-publish-markup-emdash ()muse-publish-markup-emdash1100,43930
(defun muse-publish-markup-enddots ()muse-publish-markup-enddots1109,44295
(defun muse-publish-markup-dots ()muse-publish-markup-dots1114,44504
(defun muse-publish-markup-rule ()muse-publish-markup-rule1119,44707
(defun muse-publish-markup-no-break-space ()muse-publish-markup-no-break-space1124,44910
(defun muse-publish-markup-heading ()muse-publish-markup-heading1129,45133
(defvar muse-publish-footnotes nil)muse-publish-footnotes1153,45976
(defun muse-publish-markup-footnote ()muse-publish-markup-footnote1155,46013
(defun muse-publish-markup-fn-sep ()muse-publish-markup-fn-sep1213,48734
(defun muse-insert-markup-end-list (&rest args)muse-insert-markup-end-list1217,48875
(defun muse-publish-determine-dl-indent (continue indent-sym determine-sym)muse-publish-determine-dl-indent1223,49077
(defun muse-publish-surround-dl (indent post-indent)muse-publish-surround-dl1239,49795
(defun muse-publish-strip-list-indentation (list-item empty-line indent post-indent)muse-publish-strip-list-indentation1295,52143
(defun muse-publish-surround-text (beg-tag end-tag move-func &optional indent post-indent determine-indent-func list-item)muse-publish-surround-text1318,53163
(defun muse-publish-ensure-blank-line ()muse-publish-ensure-blank-line1376,55742
(defun muse-publish-markup-list ()muse-publish-markup-list1386,56094
(defun muse-publish-markup-quote ()muse-publish-markup-quote1436,58077
(defun muse-publish-markup-leading-space (markup-space multiple)muse-publish-markup-leading-space1455,58965
(defun muse-publish-markup-verse ()muse-publish-markup-verse1464,59307
(defun muse-publish-trim-table (table)muse-publish-trim-table1501,60813
(defun muse-publish-table-fields (beg end)muse-publish-table-fields1523,61496
(defun muse-publish-markup-table ()muse-publish-markup-table1573,63657
(defun muse-publish-table-el-table (variant)muse-publish-table-el-table1576,63732
(defun muse-publish-markup-table-el ()muse-publish-markup-table-el1597,64581
(defun muse-publish-escape-specials-in-string (string &optional context)muse-publish-escape-specials-in-string1607,64971
(defun muse-publish-markup-email ()muse-publish-markup-email1632,65960
(defun muse-publish-classify-url (target)muse-publish-classify-url1644,66461
(defun muse-publish-url-desc (desc explicit)muse-publish-url-desc1672,67783
(defun muse-publish-url (url &optional desc orig-url explicit)muse-publish-url1680,68101
(defun muse-publish-insert-url (url &optional desc orig-url explicit)muse-publish-insert-url1737,70777
(defun muse-publish-markup-link ()muse-publish-markup-link1744,71060
(defun muse-publish-markup-url ()muse-publish-markup-url1765,72013
(defcustom muse-publish-contents-depth 2muse-publish-contents-depth1773,72265
(defun muse-publish-contents-tag (beg end attrs)muse-publish-contents-tag1778,72414
(defun muse-publish-verse-tag (beg end)muse-publish-verse-tag1785,72726
(defun muse-publish-mark-read-only (beg end)muse-publish-mark-read-only1798,73091
(defun muse-publish-mark-link (&optional beg end)muse-publish-mark-link1803,73268
(defun muse-publish-quote-tag (beg end)muse-publish-quote-tag1814,73667
(defun muse-publish-code-tag (beg end)muse-publish-code-tag1844,74966
(defun muse-publish-cite-tag (beg end attrs)muse-publish-cite-tag1852,75229
(defun muse-publish-src-tag (beg end attrs)muse-publish-src-tag1866,75811
(defun muse-publish-example-tag (beg end)muse-publish-example-tag1869,75894
(defun muse-publish-literal-tag (beg end attrs)muse-publish-literal-tag1878,76198
(defun muse-publish-verbatim-tag (beg end)muse-publish-verbatim-tag1903,77188
(defun muse-publish-br-tag (beg end)muse-publish-br-tag1907,77328
(defalias 'muse-publish-class-tag 'ignore)muse-publish-class-tag1912,77472
(defalias 'muse-publish-div-tag 'ignore)muse-publish-div-tag1913,77515
(defun muse-publish-call-tag-on-buffer (tag &optional attrs)muse-publish-call-tag-on-buffer1915,77557
(defun muse-publish-examplify-buffer (&optional attrs)muse-publish-examplify-buffer1928,78113
(defun muse-publish-srcify-buffer (&optional attrs)muse-publish-srcify-buffer1932,78290
(defun muse-publish-versify-buffer (&optional attrs)muse-publish-versify-buffer1936,78455
(defmacro muse-publish-markup-attribute (beg end attrs reinterp &rest body)muse-publish-markup-attribute1944,78808
(defun muse-publish-lisp-tag (beg end attrs)muse-publish-lisp-tag2004,81324
(defun muse-publish-command-tag (beg end attrs)muse-publish-command-tag2021,81990
(defun muse-publish-perl-tag (beg end attrs)muse-publish-perl-tag2043,82731
(defun muse-publish-php-tag (beg end attrs)muse-publish-php-tag2050,82983
(defun muse-publish-python-tag (beg end attrs)muse-publish-python-tag2057,83232
(defun muse-publish-ruby-tag (beg end attrs)muse-publish-ruby-tag2064,83490
(defun muse-publish-comment-tag (beg end)muse-publish-comment-tag2071,83742
(defun muse-publish-include-tag (beg end attrs)muse-publish-include-tag2080,84052
(defun muse-publish-mark-up-tag (beg end attrs)muse-publish-mark-up-tag2100,84892
(defun muse-publish-strip-URL (string &rest ignored)muse-publish-strip-URL2144,86782
(defun muse-publish-markup-type (category default-func)muse-publish-markup-type2152,87105
(defun muse-published-buffer-contents (buffer)muse-published-buffer-contents2156,87277
(defun muse-published-contents (file)muse-published-contents2165,87656
(defun muse-publish-transform-outputmuse-publish-transform-output2171,87851
(defun muse-publish-read-only (string)muse-publish-read-only2186,88541

muse-3.20/muse-backlink.el,1769
(defgroup muse-backlink nilmuse-backlink116,4383
(defcustom muse-backlink-create-backlinks tmuse-backlink-create-backlinks120,4467
(defcustom muse-backlink-avoid-bad-links tmuse-backlink-avoid-bad-links128,4770
(defcustom muse-backlink-exclude-backlink-parent-regexpmuse-backlink-exclude-backlink-parent-regexp135,5004
(defcustom muse-backlink-exclude-backlink-regexpmuse-backlink-exclude-backlink-regexp141,5235
(defcustom muse-backlink-separator "/"muse-backlink-separator147,5449
(defcustom muse-backlink-before-string "backlinks: "muse-backlink-before-string154,5668
(defcustom muse-backlink-after-string ""muse-backlink-after-string159,5808
(defcustom muse-backlink-separator "/"muse-backlink-separator164,5935
(defcustom muse-backlink-regexpmuse-backlink-regexp171,6154
(defun muse-backlink-goto-insertion-point ()muse-backlink-goto-insertion-point190,6824
(defun muse-backlink-get-current ()muse-backlink-get-current196,7016
(defun muse-backlink-format-link-list (links)muse-backlink-format-link-list205,7320
(defun muse-backlink-insert-links (links)muse-backlink-insert-links210,7509
(defun muse-backlink-unsaved-page-p (page project)muse-backlink-unsaved-page-p222,7961
(defvar muse-backlink-links nilmuse-backlink-links237,8433
(defvar muse-backlink-pending nilmuse-backlink-pending241,8550
(defvar muse-backlink-parent-buffer nilmuse-backlink-parent-buffer244,8609
(defun muse-backlink-get-mode-hook ()muse-backlink-get-mode-hook251,8870
(defun muse-backlink-insert-hook-func ()muse-backlink-insert-hook-func254,8948
(defun muse-backlink-handle-link (link)muse-backlink-handle-link270,9636
(defun muse-backlink-install ()muse-backlink-install317,11914
(defun muse-backlink-remove ()muse-backlink-remove321,12070

muse-3.20/muse-protocols.el,1211
(defvar muse-url-regexp nilmuse-url-regexp67,2194
(defun muse-update-url-regexp (sym value)muse-update-url-regexp71,2325
(defcustom muse-url-protocolsmuse-url-protocols78,2595
(defcustom muse-wikipedia-country "en"muse-wikipedia-country117,4152
(defun muse-protocol-find (proto list)muse-protocol-find124,4361
(defun muse-browse-url (url &optional other-window)muse-browse-url132,4620
(defun muse-resolve-url (url &rest ignored)muse-resolve-url148,5279
(defun muse-protocol-add (protocol browse-function resolve-function)muse-protocol-add160,5703
(defun muse-browse-url-url (url)muse-browse-url-url173,6220
(defun muse-resolve-url-dict (url)muse-resolve-url-dict183,6595
(defun muse-browse-url-dict (url)muse-browse-url-dict189,6870
(defun muse-resolve-url-doi (url)muse-resolve-url-doi195,7046
(defun muse-browse-url-doi (url)muse-browse-url-doi201,7240
(defun muse-resolve-url-google (url)muse-resolve-url-google210,7501
(defun muse-browse-url-google (url)muse-browse-url-google216,7718
(defun muse-browse-url-info (url)muse-browse-url-info222,7902
(defun muse-browse-url-man (url)muse-browse-url-man237,8481
(defun muse-browse-url-woman (url)muse-browse-url-woman243,8671

muse-3.20/muse-ipc.el,748
(defgroup muse-ipc nilmuse-ipc41,1285
(defcustom muse-ipc-timeout 60muse-ipc-timeout45,1392
(defcustom muse-ipc-ignore-done nilmuse-ipc-ignore-done50,1510
(defvar muse-ipc-server-port nilmuse-ipc-server-port55,1653
(defvar muse-ipc-server-process nilmuse-ipc-server-process58,1718
(defvar muse-ipc-server-registered nilmuse-ipc-server-registered61,1789
(defun muse-ipc-init-filter (proc string)muse-ipc-init-filter64,1900
(defun muse-ipc-delete-client (proc)muse-ipc-delete-client70,2125
(defun* muse-ipc-server-filter (proc string)muse-ipc-server-filter80,2444
(defun muse-ipc-stop-server ()muse-ipc-stop-server129,4140
(defun muse-ipc-start (shared-secret publish-fn client-port &optional server-port)muse-ipc-start136,4380

muse-3.20/muse-xml.el,767
(defgroup muse-xml nilmuse-xml56,1886
(defcustom muse-xml-extension ".xml"muse-xml-extension61,2032
(defcustom muse-xml-headermuse-xml-header66,2159
(defcustom muse-xml-footer "muse-xml-footer82,2753
(defcustom muse-xml-markup-regexpsmuse-xml-markup-regexps90,2954
(defcustom muse-xml-markup-functionsmuse-xml-markup-functions110,3849
(defcustom muse-xml-markup-stringsmuse-xml-markup-strings119,4185
(defcustom muse-xml-encoding-default 'utf-8muse-xml-encoding-default206,7822
(defcustom muse-xml-charset-default "utf-8"muse-xml-charset-default212,8022
(defun muse-xml-encoding ()muse-xml-encoding218,8193
(defun muse-xml-markup-paragraph ()muse-xml-markup-paragraph225,8408
(defun muse-xml-finalize-buffer ()muse-xml-finalize-buffer253,9466

highlight-parentheses-1.0.1/highlight-parentheses.el,685
(defgroup highlight-parentheses nilhighlight-parentheses51,1460
(defun hl-paren-set (variable value)hl-paren-set56,1571
(defcustom hl-paren-colorshl-paren-colors61,1703
(defcustom hl-paren-background-colors nilhl-paren-background-colors69,1987
(defface hl-paren-face nilhl-paren-face76,2240
(defvar hl-paren-overlays nilhl-paren-overlays84,2519
(defvar hl-paren-last-point 0hl-paren-last-point88,2643
(defun hl-paren-highlight ()hl-paren-highlight93,2850
(define-minor-mode highlight-parentheses-modehighlight-parentheses-mode114,3558
(defun hl-paren-create-overlays ()hl-paren-create-overlays128,4101
(defun hl-paren-color-update ()hl-paren-color-update145,4739

highlight-parentheses-1.0.1/highlight-parentheses-autoloads.el,0

highlight-parentheses-1.0.1/highlight-parentheses-pkg.el,125
(define-package "highlight-parentheses" "1.0.1" "highlight surrounding parentheses" (quote nil))"highlight-parentheses"1,0

boxquote-1.23/boxquote-autoloads.el,0

boxquote-1.23/boxquote-pkg.el,92
(define-package "boxquote" "1.23" "Quote text with a semi-box." (quote nil))"boxquote"1,0

boxquote-1.23/boxquote.el,3473
(defgroup boxquote nilboxquote85,2738
(defcustom boxquote-top-and-tail "----"boxquote-top-and-tail90,2846
(defcustom boxquote-top-corner ","boxquote-top-corner95,2984
(defcustom boxquote-bottom-corner "`"boxquote-bottom-corner100,3103
(defcustom boxquote-side "| "boxquote-side105,3228
(defcustom boxquote-title-format "[ %s ]"boxquote-title-format110,3336
(defcustom boxquote-title-files tboxquote-title-files115,3469
(defcustom boxquote-file-title-function #'file-name-nondirectoryboxquote-file-title-function122,3741
(defcustom boxquote-title-buffers tboxquote-title-buffers127,3916
(defcustom boxquote-buffer-title-function #'identityboxquote-buffer-title-function134,4198
(defcustom boxquote-region-hook nilboxquote-region-hook139,4363
(defcustom boxquote-yank-hook nilboxquote-yank-hook148,4668
(defcustom boxquote-insert-file-hook nilboxquote-insert-file-hook153,4800
(defcustom boxquote-kill-ring-save-title #'buffer-nameboxquote-kill-ring-save-title158,4954
(defcustom boxquote-describe-function-title-format "C-h f %s RET"boxquote-describe-function-title-format178,5720
(defcustom boxquote-describe-variable-title-format "C-h v %s RET"boxquote-describe-variable-title-format183,5899
(defcustom boxquote-describe-key-title-format "C-h k %s"boxquote-describe-key-title-format188,6078
(defcustom boxquote-where-is-title-format "C-h w %s RET"boxquote-where-is-title-format193,6243
(defcustom boxquote-where-is-body-format "%s is on %s"boxquote-where-is-body-format198,6415
(defun boxquote-xemacs-p ()boxquote-xemacs-p205,6593
(defun boxquote-points ()boxquote-points209,6717
(defun boxquote-quoted-p ()boxquote-quoted-p238,8066
(defun boxquote-points-with-check ()boxquote-points-with-check242,8163
(defun boxquote-title-format-as-regexp ()boxquote-title-format-as-regexp246,8329
(defun boxquote-get-title ()boxquote-get-title255,8619
(defun boxquote-title (title)boxquote-title276,9470
(defun boxquote-region (start end)boxquote-region294,10137
(defun boxquote-buffer ()boxquote-buffer322,11311
(defun boxquote-insert-file (filename)boxquote-insert-file328,11461
(defun boxquote-insert-buffer (buffer)boxquote-insert-buffer343,12069
(defun boxquote-kill-ring-save ()boxquote-kill-ring-save356,12590
(defun boxquote-yank ()boxquote-yank370,13092
(defun boxquote-defun ()boxquote-defun396,14111
(defun boxquote-paragraph ()boxquote-paragraph403,14283
(defun boxquote-boxquote ()boxquote-boxquote410,14470
(defun boxquote-help-buffer-name (item)boxquote-help-buffer-name416,14661
(defun boxquote-quote-help-buffer (help-call title-format item)boxquote-quote-help-buffer424,14960
(defun boxquote-describe-function ()boxquote-describe-function443,15649
(defun boxquote-describe-variable ()boxquote-describe-variable456,16073
(defun boxquote-describe-key (key)boxquote-describe-key469,16497
(defun boxquote-shell-command (command)boxquote-shell-command494,17550
(defun boxquote-where-is (definition)boxquote-where-is503,17913
(defun boxquote-text (text)boxquote-text512,18293
(defun boxquote-narrow-to-boxquote ()boxquote-narrow-to-boxquote525,18559
(defun boxquote-narrow-to-boxquote-content ()boxquote-narrow-to-boxquote-content532,18765
(defun boxquote-kill ()boxquote-kill545,19251
(defun boxquote-fill-paragraph (arg)boxquote-fill-paragraph552,19436
(defun boxquote-unbox-region (start end)boxquote-unbox-region563,19760
(defun boxquote-unbox ()boxquote-unbox583,20642

org-20111119/org-timer.el,2208
(defvar org-timer-start-time nilorg-timer-start-time36,1244
(defvar org-timer-pause-time nilorg-timer-pause-time39,1310
(defconst org-timer-re "\\([-+]?[0-9]+\\):\\([0-9]\\{2\\}\\):\\([0-9]\\{2\\}\\)"org-timer-re42,1381
(defcustom org-timer-format "%s "org-timer-format45,1515
(defcustom org-timer-default-timer 0org-timer-default-timer52,1741
(defvar org-timer-start-hook nilorg-timer-start-hook58,1900
(defvar org-timer-stop-hook nilorg-timer-stop-hook61,1981
(defvar org-timer-pause-hook nilorg-timer-pause-hook64,2062
(defvar org-timer-continue-hook nilorg-timer-continue-hook67,2143
(defvar org-timer-set-hook nilorg-timer-set-hook70,2228
(defvar org-timer-done-hook nilorg-timer-done-hook73,2304
(defvar org-timer-cancel-hook nilorg-timer-cancel-hook76,2387
(defun org-timer-start (&optional offset)org-timer-start80,2487
(defun org-timer-pause-or-continue (&optional stop)org-timer-pause-or-continue116,3980
(defun org-timer-stop ()org-timer-stop142,4843
(defun org-timer (&optional restart no-insert-p)org-timer151,5058
(defun org-timer-value-string ()org-timer-value-string168,5792
(defvar org-timer-timer-is-countdown nil)org-timer-timer-is-countdown171,5907
(defun org-timer-seconds ()org-timer-seconds172,5949
(defun org-timer-change-times-in-region (beg end delta)org-timer-change-times-in-region180,6223
(defun org-timer-item (&optional arg)org-timer-item206,7130
(defun org-timer-fix-incomplete (hms)org-timer-fix-incomplete231,8103
(defun org-timer-hms-to-secs (hms)org-timer-hms-to-secs242,8600
(defun org-timer-secs-to-hms (s)org-timer-secs-to-hms256,9151
(defvar org-timer-mode-line-timer nil)org-timer-mode-line-timer266,9455
(defvar org-timer-mode-line-string nil)org-timer-mode-line-string267,9494
(defun org-timer-set-mode-line (value)org-timer-set-mode-line269,9535
(defun org-timer-update-mode-line ()org-timer-update-mode-line299,10754
(defvar org-timer-current-timer nil)org-timer-current-timer307,11005
(defun org-timer-cancel-timer ()org-timer-cancel-timer308,11042
(defun org-timer-show-remaining-time ()org-timer-show-remaining-time319,11397
(defun org-timer-set-timer (&optional opt)org-timer-set-timer334,11865

org-20111119/org-docview.el,190
(defun org-docview-open (link)org-docview-open57,1909
(defun org-docview-store-link ()org-docview-store-link66,2258
(defun org-docview-complete-link ()org-docview-complete-link79,2669

org-20111119/ob-matlab.el,0

org-20111119/org-beamer.el,3754
(defvar org-export-latex-header)org-export-latex-header34,1124
(defvar org-export-latex-options-plist)org-export-latex-options-plist35,1157
(defvar org-export-opt-plist)org-export-opt-plist36,1197
(defgroup org-beamer nilorg-beamer38,1228
(defcustom org-beamer-use-parts nilorg-beamer-use-parts43,1367
(defcustom org-beamer-frame-level 1org-beamer-frame-level48,1448
(defcustom org-beamer-frame-default-options ""org-beamer-frame-default-options59,1944
(defcustom org-beamer-column-view-formatorg-beamer-column-view-format65,2175
(defcustom org-beamer-themesorg-beamer-themes73,2537
(defconst org-beamer-column-widthsorg-beamer-column-widths83,2956
(defconst org-beamer-transitionsorg-beamer-transitions87,3115
(defconst org-beamer-environments-defaultorg-beamer-environments-default92,3449
(defcustom org-beamer-environments-extra nilorg-beamer-environments-extra128,5464
(defvar org-beamer-frame-level-now nil)org-beamer-frame-level-now152,6335
(defvar org-beamer-header-extra nil)org-beamer-header-extra153,6375
(defvar org-beamer-export-is-beamer-p nil)org-beamer-export-is-beamer-p154,6412
(defvar org-beamer-inside-frame-at-level nil)org-beamer-inside-frame-at-level155,6455
(defvar org-beamer-columns-open nil)org-beamer-columns-open156,6501
(defvar org-beamer-column-open nil)org-beamer-column-open157,6538
(defun org-beamer-cleanup-column-width (width)org-beamer-cleanup-column-width159,6575
(defun org-beamer-open-column (&optional width opt)org-beamer-open-column167,6884
(defun org-beamer-close-column-maybe ()org-beamer-close-column-maybe172,7124
(defun org-beamer-open-columns-maybe (&optional opts)org-beamer-open-columns-maybe176,7266
(defun org-beamer-close-columns-maybe ()org-beamer-close-columns-maybe180,7451
(defun org-beamer-select-environment ()org-beamer-select-environment186,7632
(defun org-beamer-sectioning (level text)org-beamer-sectioning219,8846
(defvar extra)extra324,13319
(defvar option)option325,13334
(defvar action)action326,13350
(defvar defaction)defaction327,13366
(defvar environment)environment328,13385
(defun org-beamer-get-special (props)org-beamer-get-special329,13406
(defun org-beamer-assoc-not-empty (elt list)org-beamer-assoc-not-empty351,14312
(defvar org-beamer-mode-map (make-sparse-keymap)org-beamer-mode-map356,14443
(define-key org-beamer-mode-map "\C-c\C-b" 'org-beamer-select-environment)org-beamer-mode-map358,14531
(define-minor-mode org-beamer-modeorg-beamer-mode360,14607
(defun org-beamer-place-default-actions-for-lists ()org-beamer-place-default-actions-for-lists369,14887
(defun org-beamer-amend-header ()org-beamer-amend-header384,15523
(defcustom org-beamer-fragile-re "^[ \t]*\\\\begin{\\(verbatim\\|lstlisting\\|minted\\)}"org-beamer-fragile-re402,16274
(defface org-beamer-tag '((t (:box (:line-width 1 :color grey40))))org-beamer-tag407,16474
(defun org-beamer-initialize-open-trackers ()org-beamer-initialize-open-trackers415,16724
(defun org-beamer-after-initial-vars ()org-beamer-after-initial-vars422,17013
(defun org-beamer-auto-fragile-frames ()org-beamer-auto-fragile-frames488,19561
(defcustom org-beamer-outline-frame-title "Outline"org-beamer-outline-frame-title511,20509
(defcustom org-beamer-outline-frame-options nilorg-beamer-outline-frame-options517,20682
(defun org-beamer-fix-toc ()org-beamer-fix-toc525,20952
(defun org-beamer-property-changed (property value)org-beamer-property-changed539,21432
(defun org-beamer-select-beamer-code ()org-beamer-select-beamer-code556,22024
(defun org-insert-beamer-options-template (kind)org-insert-beamer-options-template582,23019
(defun org-beamer-allowed-property-values (property)org-beamer-allowed-property-values613,24359

org-20111119/ob-calc.el,404
(defvar org-babel-default-header-args:calc nilorg-babel-default-header-args:calc40,1320
(defun org-babel-expand-body:calc (body params)org-babel-expand-body:calc43,1428
(defun org-babel-execute:calc (body params)org-babel-execute:calc46,1546
(defvar var-syms) ; Dynamically scoped from org-babel-execute:calcvar-syms93,3113
(defun ob-calc-maybe-resolve-var (el)ob-calc-maybe-resolve-var94,3180
