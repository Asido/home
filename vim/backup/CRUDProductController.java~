package rhinestone.Control;

import rhinestone.Model.Product;
import rhinestone.TUI.CRUDProductUI;

/**
 * This class is responsible for product management:
 * adding new products to the system, finding particular product, 
 * editing and deleting it.
 *
 * @authro Group 2
 * @version 2010.12.12
 */
public class CRUDProductController {
	private CRUDProductUI ui;

	//CONSTRUCTOR
	public CRUDProductController() {
		ui = new CRUDProductUI(this);
	}

	/**
	 * Calls the UI to print the menu.
	 */
	public void startProductCRUD() {
		ui.startMenu();
	}

	/**
	 * Is called by the UI when manager wants to add a new product in the system.
	 * Parameters not final. We will definetly need more information to register the product.
	 */
	public void addProduct(String barcode) {
		System.out.println("Product added");
		pause();
	}

	/**
	 * Is called by the UI when manager wants to get particular product information.
	 * @param barcode The bar code of the product the manager wants to get.
	 * @return The requested product.
	 */
	public Product getProduct(String barcode) {
		return new Product();
	}

	/**
	 * Don't pay attention to this.
	 * It will be removed in final application version.
	 */
	private void pause() {
		try {
			Thread.sleep(1000);
		} catch(InterruptedException ex) {
			ex.printStackTrace();
		}
	}
}
