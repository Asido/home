#include <GL/glut.h>
#include <stdio.h>
#include <stdlib.h>

static float rotAngle = 0.;

/* Initialize antialiasing for RGBA mode, including alpha
 * blending, hint, and line width. Print out implementation-
 * specific info on line width granularity and width.
 */
void init(void)
{
	GLfloat values[2];
	glGetFloatv(GL_LINE_WIDTH_GRANULARITY, values);
	printf("GL_LINE_WIDTH_GRANULARITY value is %3.1f\n", values[0]);
	glGetFloatv(GL_LINE_WIDTH_RANGE, values);
	printf("GL_LINE_WIDTH_RANGE values are %3.1f %3.1f\n", values[0], values[1]);

	glEnable(GL_LINE_SMOOTH);
	glEnable(GL_BLEND);
	glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
	glHint(GL_LINE_SMOOTH_HINT, GL_DONT_CARE);
	glLineWidth(1.5);

	glClearColor(0.0, 0.0, 0.0, 1.0);
}

/* Draw 2 diagonal lines to form an X */
void display(void)
{
	glClear(GL_COLOR_BUFFER_BIT);

	glColor3f(0.0f, 1.0f, 0.0f);
	glPushMatrix();
	glRotatef(-rotAngle, 0.0f, 0.0f, 0.1f);
	glBegin(GL_LINES);
		glVertex2f(-0.5f, 0.5f);
		glVertex2f(0.5f, -0.5f);
	glEnd();
	glPopMatrix();

	glColor3f(0.0f, 0.0f, 1.0f);
	glPushMatrix();
	glRotatef(rotAngle, 0.0f, 0.0f, 1.0f);
	glBegin(GL_LINES);
		glVertex2f(0.5f, 0.5f);
		glVertex2f(-0.5f, -0.5f);
	glEnd();
	glPopMatrix();

	glFlush();
}

void reshape(int w, int h)
{
	glViewport(0, 0, (GLint) w, (GLint) h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	if (w <= h)
		gluOrtho2D(-1.0, 1.0, -1.0 * (GLfloat)h / (GLfloat)w, 1.0 * (GLfloat)h / (GLfloat)w);
	else
		gluOrtho2D(-1.0 * (GLfloat)w / (GLfloat)h, 1.0 * (GLfloat)w / (GLfloat)h, -1.0, 1.0);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
}

void keyboard(unsigned char key, int x, int y)
{
	switch (key)
	{
		case 'r':
		case 'R':
			rotAngle += 2;
			if (rotAngle >= 360.0)
				rotAngle = 0.0;
			glutPostRedisplay();
			break;
		case 27:
			exit(0);
			break;
		default:
			break;
	}
}

int main(int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(200, 200);
	glutInitWindowPosition(100, 100);
	glutCreateWindow(argv[0]);
	init();
	glutReshapeFunc(reshape);
	glutDisplayFunc(display);
	glutKeyboardFunc(keyboard);
	glutMainLoop();
	return 0;
}
