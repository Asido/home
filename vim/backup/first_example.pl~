#!/usr/bin/perl -wl
# -l argument applies chomp() and puts \n at the end of each output line.

if("aged" =~ /ge/) {
	print "/ge/ =~ true";
}
if("aged" !~ /xy/) {
	print "/xy/ !~ true";
}
if("aged" =~ /a..d/) { # dot '.' represents any character.
	print "/a..d/ =~ true";
}

$re = qr/a..d/;
if("aged" =~ $re) {
	print "$re =~ true";
}

if("/usr/bin" =~ qr/\/usr/) {
	print "/\/usr/ =~ true";
}
# Or if the example above becomes hard to read, you can use 'm{}' syntax:
if("/usr/bin" =~ m{^/usr}) { # '^' means - start of the line.
	print "m{/usr} =~ true";
}
# Same thing can be used when assigning regexp to a variable.
$pn = qr{^/usr};
if("/usr/bin" =~ $pn) {
	print "$pn =~ true";
}
