#include <GL/glut.h>

void init(void)
{
	glEnable(GL_DEPTH_TEST);
	glClearColor(0.0, 0.0, 0.0, 0.0);

	GLfloat position[] = { 2.0f, 2.0f, 2.0f };
	GLfloat specular[] = { 1.0f, 1.0f, 1.0f, 1.0f };
	glLightfv(GL_LIGHT0, GL_POSITION, position);
	glMaterialfv(GL_FRONT, GL_SPECULAR, specular);
	glMaterialf(GL_FRONT, GL_SHININESS, 100.0f);

	glNewList(1, GL_COMPILE);
		glPushMatrix();
		glTranslatef(0.0f, 0.0f, -5.0f);
		glRotatef(35.0f, 1.0f, 1.0f, 0.0f);
		glutSolidSphere(1.0, 30, 30);
		glPopMatrix();
	glEndList();
}

void display()
{
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

	glEnable(GL_LIGHTING);
	glEnable(GL_LIGHT0);
	/* glPolygonOffset(1.0, 1.0); */

	glEnable(GL_POLYGON_OFFSET_FILL);
	glPushMatrix();
	glTranslatef(-1.1f, 0.0f, 0.0f);
	glCallList(1);
	glPopMatrix();
	glDisable(GL_POLYGON_OFFSET_FILL);

	glDisable(GL_LIGHTING);
	glDisable(GL_LIGHT0);
	glColor3f(1.0f, 1.0f, 1.0f);
	glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);
	glPushMatrix();
	glTranslatef(1.1f, 0.0f, 0.0f);
	glCallList(1);
	glPopMatrix();
	glPolygonMode(GL_FRONT_AND_BACK, GL_FILL);

	glutSwapBuffers();
}

void reshape(int w, int h)
{
	glViewport(0, 0, (GLsizei) w, (GLsizei) h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	/* glOrtho(-3.0, 3.0, -3.0, 3.0, 1.0, 30.0); */
	glFrustum(-3.0, 3.0, -3.0, 3.0, 4.0, 20.0);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
}

int main(int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);
	glutInitWindowSize(500, 500);
	glutInitWindowPosition(100, 100);
	glutCreateWindow(argv[0]);
	init();
	glutDisplayFunc(display);
	glutReshapeFunc(reshape);
	glutMainLoop();
	return 0;
}
