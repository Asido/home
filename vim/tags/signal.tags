!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
NSIG	/usr/include/signal.h	207;"	d
SV_INTERRUPT	/usr/include/signal.h	325;"	d
SV_ONSTACK	/usr/include/signal.h	324;"	d
SV_RESETHAND	/usr/include/signal.h	326;"	d
_SIGNAL_H	/usr/include/signal.h	26;"	d
__THROW	/usr/include/signal.h	/^		      __const sigset_t *__right) __THROW __nonnull ((1, 2, 3));$/;"	p	signature:(1, 2, 3)
__THROW	/usr/include/signal.h	/^		     __const sigset_t *__right) __THROW __nonnull ((1, 2, 3));$/;"	p	signature:(1, 2, 3)
__THROW	/usr/include/signal.h	/^     __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	/usr/include/signal.h	/^extern int sigaddset (sigset_t *__set, int __signo) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	/usr/include/signal.h	/^extern int sigdelset (sigset_t *__set, int __signo) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	/usr/include/signal.h	/^extern int sigemptyset (sigset_t *__set) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	/usr/include/signal.h	/^extern int sigfillset (sigset_t *__set) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	/usr/include/signal.h	/^extern int sigisemptyset (__const sigset_t *__set) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	/usr/include/signal.h	/^extern int sigpending (sigset_t *__set) __THROW __nonnull ((1));$/;"	p	signature:(1)
__attribute_deprecated__	/usr/include/signal.h	/^     __THROW __attribute_deprecated__;$/;"	v
__attribute_deprecated__	/usr/include/signal.h	/^extern int sigblock (int __mask) __THROW __attribute_deprecated__;$/;"	v
__attribute_deprecated__	/usr/include/signal.h	/^extern int siggetmask (void) __THROW __attribute_deprecated__;$/;"	v
__attribute_deprecated__	/usr/include/signal.h	/^extern int sigpause (int __mask) __THROW __attribute_deprecated__;$/;"	v
__attribute_deprecated__	/usr/include/signal.h	/^extern int sigsetmask (int __mask) __THROW __attribute_deprecated__;$/;"	v
__need_sig_atomic_t	/usr/include/signal.h	44;"	d
__need_sigset_t	/usr/include/signal.h	52;"	d
__need_size_t	/usr/include/signal.h	348;"	d
__need_timespec	/usr/include/signal.h	75;"	d
__pid_t_defined	/usr/include/signal.h	63;"	d
__sig_atomic_t_defined	/usr/include/signal.h	39;"	d
__sighandler_t	/usr/include/signal.h	/^typedef void (*__sighandler_t) (int);$/;"	t
__sigpause	/usr/include/signal.h	/^extern int __sigpause (int __sig_or_mask, int __is_sig);$/;"	p	signature:(int __sig_or_mask, int __is_sig)
__sigset_t_defined	/usr/include/signal.h	49;"	d
__uid_t_defined	/usr/include/signal.h	69;"	d
pid_t	/usr/include/signal.h	/^typedef __pid_t pid_t;$/;"	t
psiginfo	/usr/include/signal.h	/^extern void psiginfo (__const siginfo_t *__pinfo, __const char *__s);$/;"	p	signature:(__const siginfo_t *__pinfo, __const char *__s)
psignal	/usr/include/signal.h	/^extern void psignal (int __sig, __const char *__s);$/;"	p	signature:(int __sig, __const char *__s)
sig_atomic_t	/usr/include/signal.h	/^typedef __sig_atomic_t sig_atomic_t;$/;"	t
sig_t	/usr/include/signal.h	/^typedef __sighandler_t sig_t;$/;"	t
sighandler_t	/usr/include/signal.h	/^typedef __sighandler_t sighandler_t;$/;"	t
sigmask	/usr/include/signal.h	193;"	d
sigpause	/usr/include/signal.h	180;"	d
sigset_t	/usr/include/signal.h	/^typedef __sigset_t sigset_t;$/;"	t
sigvec	/usr/include/signal.h	/^struct sigvec$/;"	s
sigvec::sv_flags	/usr/include/signal.h	/^    int sv_flags;		\/* Flags (see below).  *\/$/;"	m	struct:sigvec	access:public
sigvec::sv_handler	/usr/include/signal.h	/^    __sighandler_t sv_handler;	\/* Signal handler.  *\/$/;"	m	struct:sigvec	access:public
sigvec::sv_mask	/usr/include/signal.h	/^    int sv_mask;		\/* Mask of signals to be blocked.  *\/$/;"	m	struct:sigvec	access:public
sv_flags	/usr/include/signal.h	/^    int sv_flags;		\/* Flags (see below).  *\/$/;"	m	struct:sigvec	access:public
sv_handler	/usr/include/signal.h	/^    __sighandler_t sv_handler;	\/* Signal handler.  *\/$/;"	m	struct:sigvec	access:public
sv_mask	/usr/include/signal.h	/^    int sv_mask;		\/* Mask of signals to be blocked.  *\/$/;"	m	struct:sigvec	access:public
sv_onstack	/usr/include/signal.h	320;"	d
uid_t	/usr/include/signal.h	/^typedef __uid_t uid_t;$/;"	t
