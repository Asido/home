!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BIO	/usr/include/gnutls/openssl.h	/^  } BIO;$/;"	t	typeref:struct:_BIO
BIO_get_fd	/usr/include/gnutls/openssl.h	/^  void BIO_get_fd (gnutls_session_t gnutls_state, int *fd);$/;"	p	signature:(gnutls_session_t gnutls_state, int *fd)
BIO_new_socket	/usr/include/gnutls/openssl.h	/^  BIO *BIO_new_socket (int sock, int close_flag);$/;"	p	signature:(int sock, int close_flag)
DB	/usr/include/gnutls/gnutlsxx.h	/^  class DB:private noncopyable$/;"	c	namespace:gnutls	inherits:noncopyable
ERR_error_string	/usr/include/gnutls/openssl.h	/^  const char *ERR_error_string (unsigned long e, char *buf);$/;"	p	signature:(unsigned long e, char *buf)
ERR_get_error	/usr/include/gnutls/openssl.h	/^  unsigned long ERR_get_error (void);$/;"	p	signature:(void)
GNUTLSXX_H	/usr/include/gnutls/gnutlsxx.h	24;"	d
GNUTLS_AL_FATAL	/usr/include/gnutls/gnutls.h	/^    GNUTLS_AL_FATAL$/;"	e	enum:__anon7
GNUTLS_AL_WARNING	/usr/include/gnutls/gnutls.h	/^    GNUTLS_AL_WARNING = 1,$/;"	e	enum:__anon7
GNUTLS_A_ACCESS_DENIED	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_ACCESS_DENIED,$/;"	e	enum:__anon8
GNUTLS_A_BAD_CERTIFICATE	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_BAD_CERTIFICATE = 42,$/;"	e	enum:__anon8
GNUTLS_A_BAD_RECORD_MAC	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_BAD_RECORD_MAC = 20,$/;"	e	enum:__anon8
GNUTLS_A_CERTIFICATE_EXPIRED	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_CERTIFICATE_EXPIRED,$/;"	e	enum:__anon8
GNUTLS_A_CERTIFICATE_REVOKED	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_CERTIFICATE_REVOKED,$/;"	e	enum:__anon8
GNUTLS_A_CERTIFICATE_UNKNOWN	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_CERTIFICATE_UNKNOWN,$/;"	e	enum:__anon8
GNUTLS_A_CERTIFICATE_UNOBTAINABLE	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_CERTIFICATE_UNOBTAINABLE = 111,$/;"	e	enum:__anon8
GNUTLS_A_CLOSE_NOTIFY	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_CLOSE_NOTIFY,$/;"	e	enum:__anon8
GNUTLS_A_DECODE_ERROR	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_DECODE_ERROR = 50,$/;"	e	enum:__anon8
GNUTLS_A_DECOMPRESSION_FAILURE	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_DECOMPRESSION_FAILURE = 30,$/;"	e	enum:__anon8
GNUTLS_A_DECRYPTION_FAILED	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_DECRYPTION_FAILED,$/;"	e	enum:__anon8
GNUTLS_A_DECRYPT_ERROR	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_DECRYPT_ERROR,$/;"	e	enum:__anon8
GNUTLS_A_EXPORT_RESTRICTION	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_EXPORT_RESTRICTION = 60,$/;"	e	enum:__anon8
GNUTLS_A_HANDSHAKE_FAILURE	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_HANDSHAKE_FAILURE = 40,$/;"	e	enum:__anon8
GNUTLS_A_ILLEGAL_PARAMETER	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_ILLEGAL_PARAMETER,$/;"	e	enum:__anon8
GNUTLS_A_INSUFFICIENT_SECURITY	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_INSUFFICIENT_SECURITY,$/;"	e	enum:__anon8
GNUTLS_A_INTERNAL_ERROR	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_INTERNAL_ERROR = 80,$/;"	e	enum:__anon8
GNUTLS_A_MISSING_SRP_USERNAME	/usr/include/gnutls/compat.h	103;"	d
GNUTLS_A_NO_RENEGOTIATION	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_NO_RENEGOTIATION = 100,$/;"	e	enum:__anon8
GNUTLS_A_PROTOCOL_VERSION	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_PROTOCOL_VERSION = 70,$/;"	e	enum:__anon8
GNUTLS_A_RECORD_OVERFLOW	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_RECORD_OVERFLOW,$/;"	e	enum:__anon8
GNUTLS_A_SSL3_NO_CERTIFICATE	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_SSL3_NO_CERTIFICATE = 41,$/;"	e	enum:__anon8
GNUTLS_A_UNEXPECTED_MESSAGE	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_UNEXPECTED_MESSAGE = 10,$/;"	e	enum:__anon8
GNUTLS_A_UNKNOWN_CA	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_UNKNOWN_CA,$/;"	e	enum:__anon8
GNUTLS_A_UNKNOWN_PSK_IDENTITY	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_UNKNOWN_PSK_IDENTITY = 115,$/;"	e	enum:__anon8
GNUTLS_A_UNKNOWN_SRP_USERNAME	/usr/include/gnutls/compat.h	104;"	d
GNUTLS_A_UNRECOGNIZED_NAME	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_UNRECOGNIZED_NAME = 112,$/;"	e	enum:__anon8
GNUTLS_A_UNSUPPORTED_CERTIFICATE	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_UNSUPPORTED_CERTIFICATE,$/;"	e	enum:__anon8
GNUTLS_A_UNSUPPORTED_EXTENSION	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_UNSUPPORTED_EXTENSION = 110,$/;"	e	enum:__anon8
GNUTLS_A_USER_CANCELED	/usr/include/gnutls/gnutls.h	/^    GNUTLS_A_USER_CANCELED = 90,$/;"	e	enum:__anon8
GNUTLS_BAG_CERTIFICATE	/usr/include/gnutls/pkcs12.h	/^    GNUTLS_BAG_CERTIFICATE = 3,$/;"	e	enum:gnutls_pkcs12_bag_type_t
GNUTLS_BAG_CRL	/usr/include/gnutls/pkcs12.h	/^    GNUTLS_BAG_CRL = 4,$/;"	e	enum:gnutls_pkcs12_bag_type_t
GNUTLS_BAG_EMPTY	/usr/include/gnutls/pkcs12.h	/^    GNUTLS_BAG_EMPTY = 0,$/;"	e	enum:gnutls_pkcs12_bag_type_t
GNUTLS_BAG_ENCRYPTED	/usr/include/gnutls/pkcs12.h	/^    GNUTLS_BAG_ENCRYPTED = 10,$/;"	e	enum:gnutls_pkcs12_bag_type_t
GNUTLS_BAG_PKCS8_ENCRYPTED_KEY	/usr/include/gnutls/pkcs12.h	/^    GNUTLS_BAG_PKCS8_ENCRYPTED_KEY = 1,$/;"	e	enum:gnutls_pkcs12_bag_type_t
GNUTLS_BAG_PKCS8_KEY	/usr/include/gnutls/pkcs12.h	/^    GNUTLS_BAG_PKCS8_KEY = 2,$/;"	e	enum:gnutls_pkcs12_bag_type_t
GNUTLS_BAG_SECRET	/usr/include/gnutls/pkcs12.h	/^    GNUTLS_BAG_SECRET = 5,      \/* Secret data. Underspecified in pkcs-12,$/;"	e	enum:gnutls_pkcs12_bag_type_t
GNUTLS_BAG_UNKNOWN	/usr/include/gnutls/pkcs12.h	/^    GNUTLS_BAG_UNKNOWN = 20$/;"	e	enum:gnutls_pkcs12_bag_type_t
GNUTLS_CB_TLS_UNIQUE	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CB_TLS_UNIQUE$/;"	e	enum:__anon21
GNUTLS_CERT_EXPIRED	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CERT_EXPIRED = 1024$/;"	e	enum:__anon10
GNUTLS_CERT_IGNORE	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CERT_IGNORE = 0,$/;"	e	enum:__anon11
GNUTLS_CERT_INSECURE_ALGORITHM	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CERT_INSECURE_ALGORITHM = 256,$/;"	e	enum:__anon10
GNUTLS_CERT_INVALID	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CERT_INVALID = 2,$/;"	e	enum:__anon10
GNUTLS_CERT_NOT_ACTIVATED	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CERT_NOT_ACTIVATED = 512,$/;"	e	enum:__anon10
GNUTLS_CERT_REQUEST	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CERT_REQUEST = 1,$/;"	e	enum:__anon11
GNUTLS_CERT_REQUIRE	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CERT_REQUIRE = 2$/;"	e	enum:__anon11
GNUTLS_CERT_REVOKED	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CERT_REVOKED = 32,$/;"	e	enum:__anon10
GNUTLS_CERT_SIGNER_NOT_CA	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CERT_SIGNER_NOT_CA = 128,$/;"	e	enum:__anon10
GNUTLS_CERT_SIGNER_NOT_FOUND	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CERT_SIGNER_NOT_FOUND = 64,$/;"	e	enum:__anon10
GNUTLS_CIPHER_3DES_CBC	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_3DES_CBC = 3,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_3DES_PGP_CFB	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_3DES_PGP_CFB = 201,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_AES128_PGP_CFB	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_AES128_PGP_CFB = 205,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_AES192_PGP_CFB	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_AES192_PGP_CFB = 206,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_AES256_PGP_CFB	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_AES256_PGP_CFB = 207,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_AES_128_CBC	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_AES_128_CBC = 4,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_AES_128_GCM	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_AES_128_GCM = 93,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_AES_192_CBC	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_AES_192_CBC = 92,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_AES_256_CBC	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_AES_256_CBC = 5,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_AES_256_GCM	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_AES_256_GCM = 94,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_ARCFOUR	/usr/include/gnutls/gnutls.h	64;"	d
GNUTLS_CIPHER_ARCFOUR_128	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_ARCFOUR_128 = 2,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_ARCFOUR_40	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_ARCFOUR_40 = 6,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_BLOWFISH_PGP_CFB	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_BLOWFISH_PGP_CFB = 203,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_CAMELLIA_128_CBC	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_CAMELLIA_128_CBC = 7,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_CAMELLIA_256_CBC	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_CAMELLIA_256_CBC = 8,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_CAST5_PGP_CFB	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_CAST5_PGP_CFB = 202,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_DES_CBC	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_DES_CBC = 91,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_IDEA_PGP_CFB	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_IDEA_PGP_CFB = 200,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_NULL	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_NULL = 1,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_RC2_40_CBC	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_RC2_40_CBC = 90,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_RIJNDAEL_128_CBC	/usr/include/gnutls/gnutls.h	61;"	d
GNUTLS_CIPHER_RIJNDAEL_256_CBC	/usr/include/gnutls/gnutls.h	62;"	d
GNUTLS_CIPHER_RIJNDAEL_CBC	/usr/include/gnutls/gnutls.h	63;"	d
GNUTLS_CIPHER_SAFER_SK128_PGP_CFB	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_SAFER_SK128_PGP_CFB = 204,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_TWOFISH_PGP_CFB	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_TWOFISH_PGP_CFB = 208$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CIPHER_UNKNOWN	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CIPHER_UNKNOWN = 0,$/;"	e	enum:gnutls_cipher_algorithm
GNUTLS_CLIENT	/usr/include/gnutls/gnutls.h	298;"	d
GNUTLS_COMP_DEFLATE	/usr/include/gnutls/gnutls.h	/^    GNUTLS_COMP_DEFLATE = 2,$/;"	e	enum:__anon6
GNUTLS_COMP_NULL	/usr/include/gnutls/gnutls.h	/^    GNUTLS_COMP_NULL = 1,$/;"	e	enum:__anon6
GNUTLS_COMP_UNKNOWN	/usr/include/gnutls/gnutls.h	/^    GNUTLS_COMP_UNKNOWN = 0,$/;"	e	enum:__anon6
GNUTLS_COMP_ZLIB	/usr/include/gnutls/gnutls.h	/^    GNUTLS_COMP_ZLIB = GNUTLS_COMP_DEFLATE,$/;"	e	enum:__anon6
GNUTLS_COOKIE_KEY_SIZE	/usr/include/gnutls/dtls.h	37;"	d
GNUTLS_CRD_ANON	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CRD_ANON,$/;"	e	enum:__anon3
GNUTLS_CRD_CERTIFICATE	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CRD_CERTIFICATE = 1,$/;"	e	enum:__anon3
GNUTLS_CRD_IA	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CRD_IA$/;"	e	enum:__anon3
GNUTLS_CRD_PSK	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CRD_PSK,$/;"	e	enum:__anon3
GNUTLS_CRD_SRP	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CRD_SRP,$/;"	e	enum:__anon3
GNUTLS_CRL_REASON_AA_COMPROMISE	/usr/include/gnutls/x509.h	206;"	d
GNUTLS_CRL_REASON_AFFILIATION_CHANGED	/usr/include/gnutls/x509.h	200;"	d
GNUTLS_CRL_REASON_CA_COMPROMISE	/usr/include/gnutls/x509.h	199;"	d
GNUTLS_CRL_REASON_CERTIFICATE_HOLD	/usr/include/gnutls/x509.h	204;"	d
GNUTLS_CRL_REASON_CESSATION_OF_OPERATION	/usr/include/gnutls/x509.h	203;"	d
GNUTLS_CRL_REASON_KEY_COMPROMISE	/usr/include/gnutls/x509.h	198;"	d
GNUTLS_CRL_REASON_PRIVILEGE_WITHDRAWN	/usr/include/gnutls/x509.h	205;"	d
GNUTLS_CRL_REASON_SUPERSEDED	/usr/include/gnutls/x509.h	201;"	d
GNUTLS_CRL_REASON_SUPERSEEDED	/usr/include/gnutls/x509.h	202;"	d
GNUTLS_CRL_REASON_UNUSED	/usr/include/gnutls/x509.h	197;"	d
GNUTLS_CRT_OPENPGP	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CRT_OPENPGP = 2$/;"	e	enum:__anon15
GNUTLS_CRT_PRINT_FULL	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CRT_PRINT_FULL = 0,$/;"	e	enum:gnutls_certificate_print_formats
GNUTLS_CRT_PRINT_ONELINE	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CRT_PRINT_ONELINE = 1,$/;"	e	enum:gnutls_certificate_print_formats
GNUTLS_CRT_PRINT_UNSIGNED_FULL	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CRT_PRINT_UNSIGNED_FULL = 2$/;"	e	enum:gnutls_certificate_print_formats
GNUTLS_CRT_UNKNOWN	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CRT_UNKNOWN = 0,$/;"	e	enum:__anon15
GNUTLS_CRT_X509	/usr/include/gnutls/gnutls.h	/^    GNUTLS_CRT_X509 = 1,$/;"	e	enum:__anon15
GNUTLS_CRYPTO_H	/usr/include/gnutls/crypto.h	24;"	d
GNUTLS_DATAGRAM	/usr/include/gnutls/gnutls.h	299;"	d
GNUTLS_DIG_MD2	/usr/include/gnutls/gnutls.h	/^    GNUTLS_DIG_MD2 = GNUTLS_MAC_MD2,$/;"	e	enum:__anon5
GNUTLS_DIG_MD5	/usr/include/gnutls/gnutls.h	/^    GNUTLS_DIG_MD5 = GNUTLS_MAC_MD5,$/;"	e	enum:__anon5
GNUTLS_DIG_NULL	/usr/include/gnutls/gnutls.h	/^    GNUTLS_DIG_NULL = GNUTLS_MAC_NULL,$/;"	e	enum:__anon5
GNUTLS_DIG_RMD160	/usr/include/gnutls/gnutls.h	/^    GNUTLS_DIG_RMD160 = GNUTLS_MAC_RMD160,$/;"	e	enum:__anon5
GNUTLS_DIG_SHA	/usr/include/gnutls/gnutls.h	198;"	d
GNUTLS_DIG_SHA1	/usr/include/gnutls/gnutls.h	/^    GNUTLS_DIG_SHA1 = GNUTLS_MAC_SHA1,$/;"	e	enum:__anon5
GNUTLS_DIG_SHA224	/usr/include/gnutls/gnutls.h	/^    GNUTLS_DIG_SHA224 = GNUTLS_MAC_SHA224$/;"	e	enum:__anon5
GNUTLS_DIG_SHA256	/usr/include/gnutls/gnutls.h	/^    GNUTLS_DIG_SHA256 = GNUTLS_MAC_SHA256,$/;"	e	enum:__anon5
GNUTLS_DIG_SHA384	/usr/include/gnutls/gnutls.h	/^    GNUTLS_DIG_SHA384 = GNUTLS_MAC_SHA384,$/;"	e	enum:__anon5
GNUTLS_DIG_SHA512	/usr/include/gnutls/gnutls.h	/^    GNUTLS_DIG_SHA512 = GNUTLS_MAC_SHA512,$/;"	e	enum:__anon5
GNUTLS_DIG_UNKNOWN	/usr/include/gnutls/gnutls.h	/^    GNUTLS_DIG_UNKNOWN = GNUTLS_MAC_UNKNOWN,$/;"	e	enum:__anon5
GNUTLS_DTLS1_0	/usr/include/gnutls/gnutls.h	/^    GNUTLS_DTLS1_0 = 5,$/;"	e	enum:__anon14
GNUTLS_DTLS_H	/usr/include/gnutls/dtls.h	28;"	d
GNUTLS_ECC_CURVE_INVALID	/usr/include/gnutls/gnutls.h	/^  GNUTLS_ECC_CURVE_INVALID=0,$/;"	e	enum:__anon19
GNUTLS_ECC_CURVE_SECP192R1	/usr/include/gnutls/gnutls.h	/^  GNUTLS_ECC_CURVE_SECP192R1,$/;"	e	enum:__anon19
GNUTLS_ECC_CURVE_SECP224R1	/usr/include/gnutls/gnutls.h	/^  GNUTLS_ECC_CURVE_SECP224R1,$/;"	e	enum:__anon19
GNUTLS_ECC_CURVE_SECP256R1	/usr/include/gnutls/gnutls.h	/^  GNUTLS_ECC_CURVE_SECP256R1,$/;"	e	enum:__anon19
GNUTLS_ECC_CURVE_SECP384R1	/usr/include/gnutls/gnutls.h	/^  GNUTLS_ECC_CURVE_SECP384R1,$/;"	e	enum:__anon19
GNUTLS_ECC_CURVE_SECP521R1	/usr/include/gnutls/gnutls.h	/^  GNUTLS_ECC_CURVE_SECP521R1,$/;"	e	enum:__anon19
GNUTLS_E_AGAIN	/usr/include/gnutls/gnutls.h	1653;"	d
GNUTLS_E_APPLICATION_ERROR_MAX	/usr/include/gnutls/gnutls.h	1805;"	d
GNUTLS_E_APPLICATION_ERROR_MIN	/usr/include/gnutls/gnutls.h	1806;"	d
GNUTLS_E_ASN1_DER_ERROR	/usr/include/gnutls/gnutls.h	1712;"	d
GNUTLS_E_ASN1_DER_OVERFLOW	/usr/include/gnutls/gnutls.h	1720;"	d
GNUTLS_E_ASN1_ELEMENT_NOT_FOUND	/usr/include/gnutls/gnutls.h	1710;"	d
GNUTLS_E_ASN1_GENERIC_ERROR	/usr/include/gnutls/gnutls.h	1714;"	d
GNUTLS_E_ASN1_IDENTIFIER_NOT_FOUND	/usr/include/gnutls/gnutls.h	1711;"	d
GNUTLS_E_ASN1_SYNTAX_ERROR	/usr/include/gnutls/gnutls.h	1719;"	d
GNUTLS_E_ASN1_TAG_ERROR	/usr/include/gnutls/gnutls.h	1716;"	d
GNUTLS_E_ASN1_TAG_IMPLICIT	/usr/include/gnutls/gnutls.h	1717;"	d
GNUTLS_E_ASN1_TYPE_ANY_ERROR	/usr/include/gnutls/gnutls.h	1718;"	d
GNUTLS_E_ASN1_VALUE_NOT_FOUND	/usr/include/gnutls/gnutls.h	1713;"	d
GNUTLS_E_ASN1_VALUE_NOT_VALID	/usr/include/gnutls/gnutls.h	1715;"	d
GNUTLS_E_BAD_COOKIE	/usr/include/gnutls/gnutls.h	1768;"	d
GNUTLS_E_BASE64_DECODING_ERROR	/usr/include/gnutls/gnutls.h	1663;"	d
GNUTLS_E_BASE64_ENCODING_ERROR	/usr/include/gnutls/gnutls.h	1747;"	d
GNUTLS_E_BASE64_UNEXPECTED_HEADER_ERROR	/usr/include/gnutls/gnutls.h	1756;"	d
GNUTLS_E_CERTIFICATE_ERROR	/usr/include/gnutls/gnutls.h	1722;"	d
GNUTLS_E_CERTIFICATE_KEY_MISMATCH	/usr/include/gnutls/gnutls.h	1724;"	d
GNUTLS_E_CERTIFICATE_LIST_UNSORTED	/usr/include/gnutls/gnutls.h	1798;"	d
GNUTLS_E_CHANNEL_BINDING_NOT_AVAILABLE	/usr/include/gnutls/gnutls.h	1767;"	d
GNUTLS_E_COMPRESSION_FAILED	/usr/include/gnutls/gnutls.h	1652;"	d
GNUTLS_E_CONSTRAINT_ERROR	/usr/include/gnutls/gnutls.h	1734;"	d
GNUTLS_E_CRYPTODEV_DEVICE_ERROR	/usr/include/gnutls/gnutls.h	1765;"	d
GNUTLS_E_CRYPTODEV_IOCTL_ERROR	/usr/include/gnutls/gnutls.h	1764;"	d
GNUTLS_E_CRYPTO_ALREADY_REGISTERED	/usr/include/gnutls/gnutls.h	1760;"	d
GNUTLS_E_CRYPTO_INIT_FAILED	/usr/include/gnutls/gnutls.h	1792;"	d
GNUTLS_E_DB_ERROR	/usr/include/gnutls/gnutls.h	1655;"	d
GNUTLS_E_DECOMPRESSION_FAILED	/usr/include/gnutls/gnutls.h	1651;"	d
GNUTLS_E_DECRYPTION_FAILED	/usr/include/gnutls/gnutls.h	1649;"	d
GNUTLS_E_DH_PRIME_UNACCEPTABLE	/usr/include/gnutls/gnutls.h	1687;"	d
GNUTLS_E_ECC_NO_SUPPORTED_CURVES	/usr/include/gnutls/gnutls.h	1795;"	d
GNUTLS_E_ECC_UNSUPPORTED_CURVE	/usr/include/gnutls/gnutls.h	1796;"	d
GNUTLS_E_ENCRYPTION_FAILED	/usr/include/gnutls/gnutls.h	1669;"	d
GNUTLS_E_ERROR_IN_FINISHED_PACKET	/usr/include/gnutls/gnutls.h	1644;"	d
GNUTLS_E_EXPIRED	/usr/include/gnutls/gnutls.h	1654;"	d
GNUTLS_E_FATAL_ALERT_RECEIVED	/usr/include/gnutls/gnutls.h	1641;"	d
GNUTLS_E_FILE_ERROR	/usr/include/gnutls/gnutls.h	1688;"	d
GNUTLS_E_GOT_APPLICATION_DATA	/usr/include/gnutls/gnutls.h	1667;"	d
GNUTLS_E_HANDSHAKE_TOO_LARGE	/usr/include/gnutls/gnutls.h	1762;"	d
GNUTLS_E_HASH_FAILED	/usr/include/gnutls/gnutls.h	1662;"	d
GNUTLS_E_IA_VERIFY_FAILED	/usr/include/gnutls/gnutls.h	1739;"	d
GNUTLS_E_ILLEGAL_PARAMETER	/usr/include/gnutls/gnutls.h	1799;"	d
GNUTLS_E_ILLEGAL_SRP_USERNAME	/usr/include/gnutls/gnutls.h	1704;"	d
GNUTLS_E_INCOMPATIBLE_CRYPTO_LIBRARY	/usr/include/gnutls/gnutls.h	1749;"	d
GNUTLS_E_INCOMPATIBLE_GCRYPT_LIBRARY	/usr/include/gnutls/gnutls.h	1748;"	d
GNUTLS_E_INCOMPATIBLE_LIBTASN1_LIBRARY	/usr/include/gnutls/gnutls.h	1750;"	d
GNUTLS_E_INCOMPAT_DSA_KEY_WITH_TLS_PROTOCOL	/usr/include/gnutls/gnutls.h	1770;"	d
GNUTLS_E_INSUFFICIENT_CRED	/usr/include/gnutls/gnutls.h	1659;"	d
GNUTLS_E_INSUFFICIENT_CREDENTIALS	/usr/include/gnutls/gnutls.h	1657;"	d
GNUTLS_E_INSUFICIENT_CRED	/usr/include/gnutls/gnutls.h	1660;"	d
GNUTLS_E_INSUFICIENT_CREDENTIALS	/usr/include/gnutls/gnutls.h	1658;"	d
GNUTLS_E_INTERNAL_ERROR	/usr/include/gnutls/gnutls.h	1686;"	d
GNUTLS_E_INTERRUPTED	/usr/include/gnutls/gnutls.h	1679;"	d
GNUTLS_E_INVALID_PASSWORD	/usr/include/gnutls/gnutls.h	1732;"	d
GNUTLS_E_INVALID_REQUEST	/usr/include/gnutls/gnutls.h	1677;"	d
GNUTLS_E_INVALID_SESSION	/usr/include/gnutls/gnutls.h	1640;"	d
GNUTLS_E_KEY_USAGE_VIOLATION	/usr/include/gnutls/gnutls.h	1675;"	d
GNUTLS_E_LARGE_PACKET	/usr/include/gnutls/gnutls.h	1637;"	d
GNUTLS_E_LOCKING_ERROR	/usr/include/gnutls/gnutls.h	1779;"	d
GNUTLS_E_MAC_VERIFY_FAILED	/usr/include/gnutls/gnutls.h	1733;"	d
GNUTLS_E_MEMORY_ERROR	/usr/include/gnutls/gnutls.h	1650;"	d
GNUTLS_E_MPI_PRINT_FAILED	/usr/include/gnutls/gnutls.h	1665;"	d
GNUTLS_E_MPI_SCAN_FAILED	/usr/include/gnutls/gnutls.h	1648;"	d
GNUTLS_E_NO_CERTIFICATE_FOUND	/usr/include/gnutls/gnutls.h	1676;"	d
GNUTLS_E_NO_CIPHER_SUITES	/usr/include/gnutls/gnutls.h	1699;"	d
GNUTLS_E_NO_COMPRESSION_ALGORITHMS	/usr/include/gnutls/gnutls.h	1698;"	d
GNUTLS_E_NO_TEMPORARY_DH_PARAMS	/usr/include/gnutls/gnutls.h	1706;"	d
GNUTLS_E_NO_TEMPORARY_RSA_PARAMS	/usr/include/gnutls/gnutls.h	1696;"	d
GNUTLS_E_OPENPGP_FINGERPRINT_UNSUPPORTED	/usr/include/gnutls/gnutls.h	1727;"	d
GNUTLS_E_OPENPGP_GETKEY_FAILED	/usr/include/gnutls/gnutls.h	1701;"	d
GNUTLS_E_OPENPGP_KEYRING_ERROR	/usr/include/gnutls/gnutls.h	1752;"	d
GNUTLS_E_OPENPGP_PREFERRED_KEY_ERROR	/usr/include/gnutls/gnutls.h	1769;"	d
GNUTLS_E_OPENPGP_SUBKEY_ERROR	/usr/include/gnutls/gnutls.h	1758;"	d
GNUTLS_E_OPENPGP_UID_REVOKED	/usr/include/gnutls/gnutls.h	1721;"	d
GNUTLS_E_PARSING_ERROR	/usr/include/gnutls/gnutls.h	1775;"	d
GNUTLS_E_PKCS11_ATTRIBUTE_ERROR	/usr/include/gnutls/gnutls.h	1780;"	d
GNUTLS_E_PKCS11_DATA_ERROR	/usr/include/gnutls/gnutls.h	1782;"	d
GNUTLS_E_PKCS11_DEVICE_ERROR	/usr/include/gnutls/gnutls.h	1781;"	d
GNUTLS_E_PKCS11_ERROR	/usr/include/gnutls/gnutls.h	1773;"	d
GNUTLS_E_PKCS11_KEY_ERROR	/usr/include/gnutls/gnutls.h	1784;"	d
GNUTLS_E_PKCS11_LOAD_ERROR	/usr/include/gnutls/gnutls.h	1774;"	d
GNUTLS_E_PKCS11_PIN_ERROR	/usr/include/gnutls/gnutls.h	1776;"	d
GNUTLS_E_PKCS11_PIN_EXPIRED	/usr/include/gnutls/gnutls.h	1785;"	d
GNUTLS_E_PKCS11_PIN_LOCKED	/usr/include/gnutls/gnutls.h	1786;"	d
GNUTLS_E_PKCS11_REQUESTED_OBJECT_NOT_AVAILBLE	/usr/include/gnutls/gnutls.h	1797;"	d
GNUTLS_E_PKCS11_SESSION_ERROR	/usr/include/gnutls/gnutls.h	1787;"	d
GNUTLS_E_PKCS11_SIGNATURE_ERROR	/usr/include/gnutls/gnutls.h	1788;"	d
GNUTLS_E_PKCS11_SLOT_ERROR	/usr/include/gnutls/gnutls.h	1778;"	d
GNUTLS_E_PKCS11_TOKEN_ERROR	/usr/include/gnutls/gnutls.h	1789;"	d
GNUTLS_E_PKCS11_UNSUPPORTED_FEATURE_ERROR	/usr/include/gnutls/gnutls.h	1783;"	d
GNUTLS_E_PKCS11_USER_ERROR	/usr/include/gnutls/gnutls.h	1790;"	d
GNUTLS_E_PKCS1_WRONG_PAD	/usr/include/gnutls/gnutls.h	1684;"	d
GNUTLS_E_PK_DECRYPTION_FAILED	/usr/include/gnutls/gnutls.h	1672;"	d
GNUTLS_E_PK_ENCRYPTION_FAILED	/usr/include/gnutls/gnutls.h	1671;"	d
GNUTLS_E_PK_SIGN_FAILED	/usr/include/gnutls/gnutls.h	1673;"	d
GNUTLS_E_PK_SIG_VERIFY_FAILED	/usr/include/gnutls/gnutls.h	1702;"	d
GNUTLS_E_PREMATURE_TERMINATION	/usr/include/gnutls/gnutls.h	1745;"	d
GNUTLS_E_PULL_ERROR	/usr/include/gnutls/gnutls.h	1681;"	d
GNUTLS_E_PUSH_ERROR	/usr/include/gnutls/gnutls.h	1680;"	d
GNUTLS_E_RANDOM_FAILED	/usr/include/gnutls/gnutls.h	1755;"	d
GNUTLS_E_RECEIVED_ILLEGAL_EXTENSION	/usr/include/gnutls/gnutls.h	1685;"	d
GNUTLS_E_RECEIVED_ILLEGAL_PARAMETER	/usr/include/gnutls/gnutls.h	1682;"	d
GNUTLS_E_RECORD_LIMIT_REACHED	/usr/include/gnutls/gnutls.h	1668;"	d
GNUTLS_E_REHANDSHAKE	/usr/include/gnutls/gnutls.h	1666;"	d
GNUTLS_E_REQUESTED_DATA_NOT_AVAILABLE	/usr/include/gnutls/gnutls.h	1683;"	d
GNUTLS_E_SAFE_RENEGOTIATION_FAILED	/usr/include/gnutls/gnutls.h	1742;"	d
GNUTLS_E_SHORT_MEMORY_BUFFER	/usr/include/gnutls/gnutls.h	1678;"	d
GNUTLS_E_SRP_PWD_ERROR	/usr/include/gnutls/gnutls.h	1656;"	d
GNUTLS_E_SRP_PWD_PARSING_ERROR	/usr/include/gnutls/gnutls.h	1705;"	d
GNUTLS_E_SUCCESS	/usr/include/gnutls/gnutls.h	1634;"	d
GNUTLS_E_TIMEDOUT	/usr/include/gnutls/gnutls.h	1793;"	d
GNUTLS_E_TOO_MANY_EMPTY_PACKETS	/usr/include/gnutls/gnutls.h	1689;"	d
GNUTLS_E_TOO_MANY_HANDSHAKE_PACKETS	/usr/include/gnutls/gnutls.h	1691;"	d
GNUTLS_E_UNEXPECTED_HANDSHAKE_PACKET	/usr/include/gnutls/gnutls.h	1645;"	d
GNUTLS_E_UNEXPECTED_PACKET	/usr/include/gnutls/gnutls.h	1642;"	d
GNUTLS_E_UNEXPECTED_PACKET_LENGTH	/usr/include/gnutls/gnutls.h	1639;"	d
GNUTLS_E_UNIMPLEMENTED_FEATURE	/usr/include/gnutls/gnutls.h	1801;"	d
GNUTLS_E_UNKNOWN_ALGORITHM	/usr/include/gnutls/gnutls.h	1740;"	d
GNUTLS_E_UNKNOWN_CIPHER_SUITE	/usr/include/gnutls/gnutls.h	1646;"	d
GNUTLS_E_UNKNOWN_CIPHER_TYPE	/usr/include/gnutls/gnutls.h	1636;"	d
GNUTLS_E_UNKNOWN_COMPRESSION_ALGORITHM	/usr/include/gnutls/gnutls.h	1635;"	d
GNUTLS_E_UNKNOWN_HASH_ALGORITHM	/usr/include/gnutls/gnutls.h	1729;"	d
GNUTLS_E_UNKNOWN_PKCS_BAG_TYPE	/usr/include/gnutls/gnutls.h	1731;"	d
GNUTLS_E_UNKNOWN_PKCS_CONTENT_TYPE	/usr/include/gnutls/gnutls.h	1730;"	d
GNUTLS_E_UNKNOWN_PK_ALGORITHM	/usr/include/gnutls/gnutls.h	1690;"	d
GNUTLS_E_UNKNOWN_SRP_USERNAME	/usr/include/gnutls/gnutls.h	1744;"	d
GNUTLS_E_UNSAFE_RENEGOTIATION_DENIED	/usr/include/gnutls/gnutls.h	1743;"	d
GNUTLS_E_UNSUPPORTED_CERTIFICATE_TYPE	/usr/include/gnutls/gnutls.h	1725;"	d
GNUTLS_E_UNSUPPORTED_SIGNATURE_ALGORITHM	/usr/include/gnutls/gnutls.h	1741;"	d
GNUTLS_E_UNSUPPORTED_VERSION_PACKET	/usr/include/gnutls/gnutls.h	1638;"	d
GNUTLS_E_UNWANTED_ALGORITHM	/usr/include/gnutls/gnutls.h	1647;"	d
GNUTLS_E_USER_ERROR	/usr/include/gnutls/gnutls.h	1794;"	d
GNUTLS_E_WARNING_ALERT_RECEIVED	/usr/include/gnutls/gnutls.h	1643;"	d
GNUTLS_E_WARNING_IA_FPHF_RECEIVED	/usr/include/gnutls/gnutls.h	1737;"	d
GNUTLS_E_WARNING_IA_IPHF_RECEIVED	/usr/include/gnutls/gnutls.h	1736;"	d
GNUTLS_E_X509_CERTIFICATE_ERROR	/usr/include/gnutls/gnutls.h	1723;"	d
GNUTLS_E_X509_UNKNOWN_SAN	/usr/include/gnutls/gnutls.h	1726;"	d
GNUTLS_E_X509_UNSUPPORTED_ATTRIBUTE	/usr/include/gnutls/gnutls.h	1728;"	d
GNUTLS_E_X509_UNSUPPORTED_CRITICAL_EXTENSION	/usr/include/gnutls/gnutls.h	1674;"	d
GNUTLS_E_X509_UNSUPPORTED_OID	/usr/include/gnutls/gnutls.h	1753;"	d
GNUTLS_FSAN_APPEND	/usr/include/gnutls/x509.h	86;"	d
GNUTLS_FSAN_SET	/usr/include/gnutls/x509.h	85;"	d
GNUTLS_H	/usr/include/gnutls/gnutls.h	35;"	d
GNUTLS_HANDSHAKE_CERTIFICATE_PKT	/usr/include/gnutls/gnutls.h	/^    GNUTLS_HANDSHAKE_CERTIFICATE_PKT = 11,$/;"	e	enum:__anon9
GNUTLS_HANDSHAKE_CERTIFICATE_REQUEST	/usr/include/gnutls/gnutls.h	/^    GNUTLS_HANDSHAKE_CERTIFICATE_REQUEST = 13,$/;"	e	enum:__anon9
GNUTLS_HANDSHAKE_CERTIFICATE_VERIFY	/usr/include/gnutls/gnutls.h	/^    GNUTLS_HANDSHAKE_CERTIFICATE_VERIFY = 15,$/;"	e	enum:__anon9
GNUTLS_HANDSHAKE_CHANGE_CIPHER_SPEC	/usr/include/gnutls/gnutls.h	/^    GNUTLS_HANDSHAKE_CHANGE_CIPHER_SPEC = 254,$/;"	e	enum:__anon9
GNUTLS_HANDSHAKE_CLIENT_HELLO	/usr/include/gnutls/gnutls.h	/^    GNUTLS_HANDSHAKE_CLIENT_HELLO = 1,$/;"	e	enum:__anon9
GNUTLS_HANDSHAKE_CLIENT_HELLO_V2	/usr/include/gnutls/gnutls.h	/^    GNUTLS_HANDSHAKE_CLIENT_HELLO_V2 = 1024,$/;"	e	enum:__anon9
GNUTLS_HANDSHAKE_CLIENT_KEY_EXCHANGE	/usr/include/gnutls/gnutls.h	/^    GNUTLS_HANDSHAKE_CLIENT_KEY_EXCHANGE = 16,$/;"	e	enum:__anon9
GNUTLS_HANDSHAKE_FINISHED	/usr/include/gnutls/gnutls.h	/^    GNUTLS_HANDSHAKE_FINISHED = 20,$/;"	e	enum:__anon9
GNUTLS_HANDSHAKE_HELLO_REQUEST	/usr/include/gnutls/gnutls.h	/^    GNUTLS_HANDSHAKE_HELLO_REQUEST = 0,$/;"	e	enum:__anon9
GNUTLS_HANDSHAKE_HELLO_VERIFY_REQUEST	/usr/include/gnutls/gnutls.h	/^    GNUTLS_HANDSHAKE_HELLO_VERIFY_REQUEST = 3,$/;"	e	enum:__anon9
GNUTLS_HANDSHAKE_NEW_SESSION_TICKET	/usr/include/gnutls/gnutls.h	/^    GNUTLS_HANDSHAKE_NEW_SESSION_TICKET = 4,$/;"	e	enum:__anon9
GNUTLS_HANDSHAKE_SERVER_HELLO	/usr/include/gnutls/gnutls.h	/^    GNUTLS_HANDSHAKE_SERVER_HELLO = 2,$/;"	e	enum:__anon9
GNUTLS_HANDSHAKE_SERVER_HELLO_DONE	/usr/include/gnutls/gnutls.h	/^    GNUTLS_HANDSHAKE_SERVER_HELLO_DONE = 14,$/;"	e	enum:__anon9
GNUTLS_HANDSHAKE_SERVER_KEY_EXCHANGE	/usr/include/gnutls/gnutls.h	/^    GNUTLS_HANDSHAKE_SERVER_KEY_EXCHANGE = 12,$/;"	e	enum:__anon9
GNUTLS_HANDSHAKE_SUPPLEMENTAL	/usr/include/gnutls/gnutls.h	/^    GNUTLS_HANDSHAKE_SUPPLEMENTAL = 23,$/;"	e	enum:__anon9
GNUTLS_IA_ACCESSLOCATION_GENERALNAME_TYPE	/usr/include/gnutls/x509.h	/^      GNUTLS_IA_ACCESSLOCATION_GENERALNAME_TYPE = 2,$/;"	e	enum:gnutls_info_access_what_t
GNUTLS_IA_ACCESSMETHOD_OID	/usr/include/gnutls/x509.h	/^      GNUTLS_IA_ACCESSMETHOD_OID = 1,$/;"	e	enum:gnutls_info_access_what_t
GNUTLS_IA_CAISSUERS_URI	/usr/include/gnutls/x509.h	/^      GNUTLS_IA_CAISSUERS_URI = 10106$/;"	e	enum:gnutls_info_access_what_t
GNUTLS_IA_OCSP_URI	/usr/include/gnutls/x509.h	/^      GNUTLS_IA_OCSP_URI = 10006,$/;"	e	enum:gnutls_info_access_what_t
GNUTLS_IA_URI	/usr/include/gnutls/x509.h	/^      GNUTLS_IA_URI = 106,$/;"	e	enum:gnutls_info_access_what_t
GNUTLS_KEY_CRL_SIGN	/usr/include/gnutls/gnutls.h	1614;"	d
GNUTLS_KEY_DATA_ENCIPHERMENT	/usr/include/gnutls/gnutls.h	1611;"	d
GNUTLS_KEY_DECIPHER_ONLY	/usr/include/gnutls/gnutls.h	1616;"	d
GNUTLS_KEY_DIGITAL_SIGNATURE	/usr/include/gnutls/gnutls.h	1607;"	d
GNUTLS_KEY_ENCIPHER_ONLY	/usr/include/gnutls/gnutls.h	1615;"	d
GNUTLS_KEY_KEY_AGREEMENT	/usr/include/gnutls/gnutls.h	1612;"	d
GNUTLS_KEY_KEY_CERT_SIGN	/usr/include/gnutls/gnutls.h	1613;"	d
GNUTLS_KEY_KEY_ENCIPHERMENT	/usr/include/gnutls/gnutls.h	1610;"	d
GNUTLS_KEY_NON_REPUDIATION	/usr/include/gnutls/gnutls.h	1608;"	d
GNUTLS_KP_ANY	/usr/include/gnutls/x509.h	79;"	d
GNUTLS_KP_CODE_SIGNING	/usr/include/gnutls/x509.h	74;"	d
GNUTLS_KP_EMAIL_PROTECTION	/usr/include/gnutls/x509.h	75;"	d
GNUTLS_KP_IPSEC_IKE	/usr/include/gnutls/x509.h	78;"	d
GNUTLS_KP_OCSP_SIGNING	/usr/include/gnutls/x509.h	77;"	d
GNUTLS_KP_TIME_STAMPING	/usr/include/gnutls/x509.h	76;"	d
GNUTLS_KP_TLS_WWW_CLIENT	/usr/include/gnutls/x509.h	73;"	d
GNUTLS_KP_TLS_WWW_SERVER	/usr/include/gnutls/x509.h	72;"	d
GNUTLS_KX_ANON_DH	/usr/include/gnutls/gnutls.h	/^    GNUTLS_KX_ANON_DH = 4,$/;"	e	enum:__anon1
GNUTLS_KX_ANON_ECDH	/usr/include/gnutls/gnutls.h	/^    GNUTLS_KX_ANON_ECDH = 11,$/;"	e	enum:__anon1
GNUTLS_KX_DHE_DSS	/usr/include/gnutls/gnutls.h	/^    GNUTLS_KX_DHE_DSS = 2,$/;"	e	enum:__anon1
GNUTLS_KX_DHE_PSK	/usr/include/gnutls/gnutls.h	/^    GNUTLS_KX_DHE_PSK = 10,$/;"	e	enum:__anon1
GNUTLS_KX_DHE_RSA	/usr/include/gnutls/gnutls.h	/^    GNUTLS_KX_DHE_RSA = 3,$/;"	e	enum:__anon1
GNUTLS_KX_ECDHE_ECDSA	/usr/include/gnutls/gnutls.h	/^    GNUTLS_KX_ECDHE_ECDSA = 13,$/;"	e	enum:__anon1
GNUTLS_KX_ECDHE_PSK	/usr/include/gnutls/gnutls.h	/^    GNUTLS_KX_ECDHE_PSK = 14,$/;"	e	enum:__anon1
GNUTLS_KX_ECDHE_RSA	/usr/include/gnutls/gnutls.h	/^    GNUTLS_KX_ECDHE_RSA = 12,$/;"	e	enum:__anon1
GNUTLS_KX_PSK	/usr/include/gnutls/gnutls.h	/^    GNUTLS_KX_PSK = 9,$/;"	e	enum:__anon1
GNUTLS_KX_RSA	/usr/include/gnutls/gnutls.h	/^    GNUTLS_KX_RSA = 1,$/;"	e	enum:__anon1
GNUTLS_KX_RSA_EXPORT	/usr/include/gnutls/gnutls.h	/^    GNUTLS_KX_RSA_EXPORT = 6,$/;"	e	enum:__anon1
GNUTLS_KX_SRP	/usr/include/gnutls/gnutls.h	/^    GNUTLS_KX_SRP = 5,$/;"	e	enum:__anon1
GNUTLS_KX_SRP_DSS	/usr/include/gnutls/gnutls.h	/^    GNUTLS_KX_SRP_DSS = 8,$/;"	e	enum:__anon1
GNUTLS_KX_SRP_RSA	/usr/include/gnutls/gnutls.h	/^    GNUTLS_KX_SRP_RSA = 7,$/;"	e	enum:__anon1
GNUTLS_KX_UNKNOWN	/usr/include/gnutls/gnutls.h	/^    GNUTLS_KX_UNKNOWN = 0,$/;"	e	enum:__anon1
GNUTLS_MAC_AEAD	/usr/include/gnutls/gnutls.h	/^    GNUTLS_MAC_AEAD = 200 \/* indicates that MAC is on the cipher *\/$/;"	e	enum:__anon4
GNUTLS_MAC_MD2	/usr/include/gnutls/gnutls.h	/^    GNUTLS_MAC_MD2 = 5,$/;"	e	enum:__anon4
GNUTLS_MAC_MD5	/usr/include/gnutls/gnutls.h	/^    GNUTLS_MAC_MD5 = 2,$/;"	e	enum:__anon4
GNUTLS_MAC_NULL	/usr/include/gnutls/gnutls.h	/^    GNUTLS_MAC_NULL = 1,$/;"	e	enum:__anon4
GNUTLS_MAC_RMD160	/usr/include/gnutls/gnutls.h	/^    GNUTLS_MAC_RMD160 = 4,$/;"	e	enum:__anon4
GNUTLS_MAC_SHA	/usr/include/gnutls/gnutls.h	197;"	d
GNUTLS_MAC_SHA1	/usr/include/gnutls/gnutls.h	/^    GNUTLS_MAC_SHA1 = 3,$/;"	e	enum:__anon4
GNUTLS_MAC_SHA224	/usr/include/gnutls/gnutls.h	/^    GNUTLS_MAC_SHA224 = 9,$/;"	e	enum:__anon4
GNUTLS_MAC_SHA256	/usr/include/gnutls/gnutls.h	/^    GNUTLS_MAC_SHA256 = 6,$/;"	e	enum:__anon4
GNUTLS_MAC_SHA384	/usr/include/gnutls/gnutls.h	/^    GNUTLS_MAC_SHA384 = 7,$/;"	e	enum:__anon4
GNUTLS_MAC_SHA512	/usr/include/gnutls/gnutls.h	/^    GNUTLS_MAC_SHA512 = 8,$/;"	e	enum:__anon4
GNUTLS_MAC_UNKNOWN	/usr/include/gnutls/gnutls.h	/^    GNUTLS_MAC_UNKNOWN = 0,$/;"	e	enum:__anon4
GNUTLS_MAX_ALGORITHM_NUM	/usr/include/gnutls/gnutls.h	268;"	d
GNUTLS_MAX_SESSION_ID	/usr/include/gnutls/gnutls.h	949;"	d
GNUTLS_NAME_DNS	/usr/include/gnutls/gnutls.h	/^    GNUTLS_NAME_DNS = 1$/;"	e	enum:__anon23
GNUTLS_NONBLOCK	/usr/include/gnutls/gnutls.h	300;"	d
GNUTLS_OID_AD_CAISSUERS	/usr/include/gnutls/x509.h	83;"	d
GNUTLS_OID_AD_OCSP	/usr/include/gnutls/x509.h	82;"	d
GNUTLS_OID_AIA	/usr/include/gnutls/x509.h	81;"	d
GNUTLS_OID_LDAP_DC	/usr/include/gnutls/x509.h	57;"	d
GNUTLS_OID_LDAP_UID	/usr/include/gnutls/x509.h	58;"	d
GNUTLS_OID_PKCS9_EMAIL	/usr/include/gnutls/x509.h	62;"	d
GNUTLS_OID_PKIX_COUNTRY_OF_CITIZENSHIP	/usr/include/gnutls/x509.h	67;"	d
GNUTLS_OID_PKIX_COUNTRY_OF_RESIDENCE	/usr/include/gnutls/x509.h	68;"	d
GNUTLS_OID_PKIX_DATE_OF_BIRTH	/usr/include/gnutls/x509.h	64;"	d
GNUTLS_OID_PKIX_GENDER	/usr/include/gnutls/x509.h	66;"	d
GNUTLS_OID_PKIX_PLACE_OF_BIRTH	/usr/include/gnutls/x509.h	65;"	d
GNUTLS_OID_X520_COMMON_NAME	/usr/include/gnutls/x509.h	43;"	d
GNUTLS_OID_X520_COUNTRY_NAME	/usr/include/gnutls/x509.h	40;"	d
GNUTLS_OID_X520_DN_QUALIFIER	/usr/include/gnutls/x509.h	52;"	d
GNUTLS_OID_X520_GENERATION_QUALIFIER	/usr/include/gnutls/x509.h	48;"	d
GNUTLS_OID_X520_GIVEN_NAME	/usr/include/gnutls/x509.h	50;"	d
GNUTLS_OID_X520_INITIALS	/usr/include/gnutls/x509.h	47;"	d
GNUTLS_OID_X520_LOCALITY_NAME	/usr/include/gnutls/x509.h	44;"	d
GNUTLS_OID_X520_NAME	/usr/include/gnutls/x509.h	55;"	d
GNUTLS_OID_X520_ORGANIZATIONAL_UNIT_NAME	/usr/include/gnutls/x509.h	42;"	d
GNUTLS_OID_X520_ORGANIZATION_NAME	/usr/include/gnutls/x509.h	41;"	d
GNUTLS_OID_X520_POSTALCODE	/usr/include/gnutls/x509.h	54;"	d
GNUTLS_OID_X520_PSEUDONYM	/usr/include/gnutls/x509.h	53;"	d
GNUTLS_OID_X520_STATE_OR_PROVINCE_NAME	/usr/include/gnutls/x509.h	45;"	d
GNUTLS_OID_X520_SURNAME	/usr/include/gnutls/x509.h	49;"	d
GNUTLS_OID_X520_TITLE	/usr/include/gnutls/x509.h	51;"	d
GNUTLS_OPENPGP_CERT	/usr/include/gnutls/gnutls.h	/^    GNUTLS_OPENPGP_CERT = 0,$/;"	e	enum:__anon12
GNUTLS_OPENPGP_CERT_FINGERPRINT	/usr/include/gnutls/gnutls.h	/^    GNUTLS_OPENPGP_CERT_FINGERPRINT = 1$/;"	e	enum:__anon12
GNUTLS_OPENPGP_FMT_BASE64	/usr/include/gnutls/openpgp.h	/^    GNUTLS_OPENPGP_FMT_BASE64$/;"	e	enum:gnutls_openpgp_crt_fmt
GNUTLS_OPENPGP_FMT_RAW	/usr/include/gnutls/openpgp.h	/^    GNUTLS_OPENPGP_FMT_RAW,$/;"	e	enum:gnutls_openpgp_crt_fmt
GNUTLS_OPENPGP_H	/usr/include/gnutls/openpgp.h	28;"	d
GNUTLS_OPENPGP_KEY	/usr/include/gnutls/compat.h	108;"	d
GNUTLS_OPENPGP_KEYID_SIZE	/usr/include/gnutls/openpgp.h	53;"	d
GNUTLS_OPENPGP_KEY_FINGERPRINT	/usr/include/gnutls/compat.h	109;"	d
GNUTLS_OPENSSL_H	/usr/include/gnutls/openssl.h	36;"	d
GNUTLS_PARAMS_DH	/usr/include/gnutls/gnutls.h	/^    GNUTLS_PARAMS_DH = 2,$/;"	e	enum:__anon2
GNUTLS_PARAMS_ECDH	/usr/include/gnutls/gnutls.h	/^    GNUTLS_PARAMS_ECDH = 3,$/;"	e	enum:__anon2
GNUTLS_PARAMS_RSA_EXPORT	/usr/include/gnutls/gnutls.h	/^    GNUTLS_PARAMS_RSA_EXPORT = 1,$/;"	e	enum:__anon2
GNUTLS_PCERT_NO_CERT	/usr/include/gnutls/abstract.h	228;"	d
GNUTLS_PKCS11_FLAG_AUTO	/usr/include/gnutls/pkcs11.h	120;"	d
GNUTLS_PKCS11_FLAG_MANUAL	/usr/include/gnutls/pkcs11.h	119;"	d
GNUTLS_PKCS11_MAX_PIN_LEN	/usr/include/gnutls/pkcs11.h	31;"	d
GNUTLS_PKCS11_OBJ_ATTR_ALL	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_ATTR_ALL    \/* everything! *\/$/;"	e	enum:__anon40
GNUTLS_PKCS11_OBJ_ATTR_CRT_ALL	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_ATTR_CRT_ALL = 1,   \/* all certificates *\/$/;"	e	enum:__anon40
GNUTLS_PKCS11_OBJ_ATTR_CRT_TRUSTED	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_ATTR_CRT_TRUSTED,   \/* certificates marked as trusted *\/$/;"	e	enum:__anon40
GNUTLS_PKCS11_OBJ_ATTR_CRT_WITH_PRIVKEY	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_ATTR_CRT_WITH_PRIVKEY,      \/* certificates with corresponding private key *\/$/;"	e	enum:__anon40
GNUTLS_PKCS11_OBJ_ATTR_PRIVKEY	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_ATTR_PRIVKEY,       \/* private keys *\/$/;"	e	enum:__anon40
GNUTLS_PKCS11_OBJ_ATTR_PUBKEY	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_ATTR_PUBKEY,        \/* public keys *\/$/;"	e	enum:__anon40
GNUTLS_PKCS11_OBJ_DATA	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_DATA$/;"	e	enum:__anon42
GNUTLS_PKCS11_OBJ_FLAG_LOGIN	/usr/include/gnutls/pkcs11.h	137;"	d
GNUTLS_PKCS11_OBJ_FLAG_LOGIN_SO	/usr/include/gnutls/pkcs11.h	140;"	d
GNUTLS_PKCS11_OBJ_FLAG_MARK_NOT_PRIVATE	/usr/include/gnutls/pkcs11.h	142;"	d
GNUTLS_PKCS11_OBJ_FLAG_MARK_PRIVATE	/usr/include/gnutls/pkcs11.h	141;"	d
GNUTLS_PKCS11_OBJ_FLAG_MARK_SENSITIVE	/usr/include/gnutls/pkcs11.h	139;"	d
GNUTLS_PKCS11_OBJ_FLAG_MARK_TRUSTED	/usr/include/gnutls/pkcs11.h	138;"	d
GNUTLS_PKCS11_OBJ_ID	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_ID,$/;"	e	enum:__anon39
GNUTLS_PKCS11_OBJ_ID_HEX	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_ID_HEX = 1,$/;"	e	enum:__anon39
GNUTLS_PKCS11_OBJ_LABEL	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_LABEL,$/;"	e	enum:__anon39
GNUTLS_PKCS11_OBJ_LIBRARY_DESCRIPTION	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_LIBRARY_DESCRIPTION,$/;"	e	enum:__anon39
GNUTLS_PKCS11_OBJ_LIBRARY_MANUFACTURER	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_LIBRARY_MANUFACTURER$/;"	e	enum:__anon39
GNUTLS_PKCS11_OBJ_LIBRARY_VERSION	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_LIBRARY_VERSION,$/;"	e	enum:__anon39
GNUTLS_PKCS11_OBJ_PRIVKEY	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_PRIVKEY,$/;"	e	enum:__anon42
GNUTLS_PKCS11_OBJ_PUBKEY	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_PUBKEY,$/;"	e	enum:__anon42
GNUTLS_PKCS11_OBJ_SECRET_KEY	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_SECRET_KEY,$/;"	e	enum:__anon42
GNUTLS_PKCS11_OBJ_TOKEN_LABEL	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_TOKEN_LABEL,$/;"	e	enum:__anon39
GNUTLS_PKCS11_OBJ_TOKEN_MANUFACTURER	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_TOKEN_MANUFACTURER,$/;"	e	enum:__anon39
GNUTLS_PKCS11_OBJ_TOKEN_MODEL	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_TOKEN_MODEL,$/;"	e	enum:__anon39
GNUTLS_PKCS11_OBJ_TOKEN_SERIAL	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_TOKEN_SERIAL,$/;"	e	enum:__anon39
GNUTLS_PKCS11_OBJ_UNKNOWN	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_UNKNOWN,$/;"	e	enum:__anon42
GNUTLS_PKCS11_OBJ_X509_CRT	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_OBJ_X509_CRT,$/;"	e	enum:__anon42
GNUTLS_PKCS11_PIN_CONTEXT_SPECIFIC	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_PIN_CONTEXT_SPECIFIC = (1 << 4),$/;"	e	enum:__anon37
GNUTLS_PKCS11_PIN_COUNT_LOW	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_PIN_COUNT_LOW = (1 << 3),$/;"	e	enum:__anon37
GNUTLS_PKCS11_PIN_FINAL_TRY	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_PIN_FINAL_TRY = (1 << 2),$/;"	e	enum:__anon37
GNUTLS_PKCS11_PIN_SO	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_PIN_SO = (1 << 1),$/;"	e	enum:__anon37
GNUTLS_PKCS11_PIN_USER	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_PIN_USER = (1 << 0),$/;"	e	enum:__anon37
GNUTLS_PKCS11_PIN_WRONG	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_PIN_WRONG = (1 << 5),$/;"	e	enum:__anon37
GNUTLS_PKCS11_TOKEN_HW	/usr/include/gnutls/pkcs11.h	301;"	d
GNUTLS_PKCS11_TOKEN_LABEL	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_TOKEN_LABEL,$/;"	e	enum:__anon41
GNUTLS_PKCS11_TOKEN_MANUFACTURER	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_TOKEN_MANUFACTURER,$/;"	e	enum:__anon41
GNUTLS_PKCS11_TOKEN_MODEL	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_TOKEN_MODEL$/;"	e	enum:__anon41
GNUTLS_PKCS11_TOKEN_SERIAL	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_TOKEN_SERIAL,$/;"	e	enum:__anon41
GNUTLS_PKCS11_URL_GENERIC	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_URL_GENERIC,    \/* URL specifies the object on token level *\/$/;"	e	enum:__anon38
GNUTLS_PKCS11_URL_LIB	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_URL_LIB,        \/* URL specifies the object on module level *\/$/;"	e	enum:__anon38
GNUTLS_PKCS11_URL_LIB_VERSION	/usr/include/gnutls/pkcs11.h	/^    GNUTLS_PKCS11_URL_LIB_VERSION \/* URL specifies the object on module and version level *\/$/;"	e	enum:__anon38
GNUTLS_PKCS12_H	/usr/include/gnutls/pkcs12.h	24;"	d
GNUTLS_PKCS8_PLAIN	/usr/include/gnutls/x509.h	/^    GNUTLS_PKCS8_PLAIN = GNUTLS_PKCS_PLAIN,$/;"	e	enum:gnutls_pkcs_encrypt_flags_t
GNUTLS_PKCS8_USE_PKCS12_3DES	/usr/include/gnutls/x509.h	/^    GNUTLS_PKCS8_USE_PKCS12_3DES = GNUTLS_PKCS_USE_PKCS12_3DES,$/;"	e	enum:gnutls_pkcs_encrypt_flags_t
GNUTLS_PKCS8_USE_PKCS12_ARCFOUR	/usr/include/gnutls/x509.h	/^    GNUTLS_PKCS8_USE_PKCS12_ARCFOUR = GNUTLS_PKCS_USE_PKCS12_ARCFOUR,$/;"	e	enum:gnutls_pkcs_encrypt_flags_t
GNUTLS_PKCS8_USE_PKCS12_RC2_40	/usr/include/gnutls/x509.h	/^    GNUTLS_PKCS8_USE_PKCS12_RC2_40 = GNUTLS_PKCS_USE_PKCS12_RC2_40,$/;"	e	enum:gnutls_pkcs_encrypt_flags_t
GNUTLS_PKCS_PLAIN	/usr/include/gnutls/x509.h	/^    GNUTLS_PKCS_PLAIN = 1,$/;"	e	enum:gnutls_pkcs_encrypt_flags_t
GNUTLS_PKCS_USE_PBES2_3DES	/usr/include/gnutls/x509.h	/^    GNUTLS_PKCS_USE_PBES2_3DES = 16,$/;"	e	enum:gnutls_pkcs_encrypt_flags_t
GNUTLS_PKCS_USE_PBES2_AES_128	/usr/include/gnutls/x509.h	/^    GNUTLS_PKCS_USE_PBES2_AES_128 = 32,$/;"	e	enum:gnutls_pkcs_encrypt_flags_t
GNUTLS_PKCS_USE_PBES2_AES_192	/usr/include/gnutls/x509.h	/^    GNUTLS_PKCS_USE_PBES2_AES_192 = 64,$/;"	e	enum:gnutls_pkcs_encrypt_flags_t
GNUTLS_PKCS_USE_PBES2_AES_256	/usr/include/gnutls/x509.h	/^    GNUTLS_PKCS_USE_PBES2_AES_256 = 128$/;"	e	enum:gnutls_pkcs_encrypt_flags_t
GNUTLS_PKCS_USE_PKCS12_3DES	/usr/include/gnutls/x509.h	/^    GNUTLS_PKCS_USE_PKCS12_3DES = 2,$/;"	e	enum:gnutls_pkcs_encrypt_flags_t
GNUTLS_PKCS_USE_PKCS12_ARCFOUR	/usr/include/gnutls/x509.h	/^    GNUTLS_PKCS_USE_PKCS12_ARCFOUR = 4,$/;"	e	enum:gnutls_pkcs_encrypt_flags_t
GNUTLS_PKCS_USE_PKCS12_RC2_40	/usr/include/gnutls/x509.h	/^    GNUTLS_PKCS_USE_PKCS12_RC2_40 = 8,$/;"	e	enum:gnutls_pkcs_encrypt_flags_t
GNUTLS_PK_DH	/usr/include/gnutls/gnutls.h	/^    GNUTLS_PK_DH = 3,$/;"	e	enum:__anon17
GNUTLS_PK_DSA	/usr/include/gnutls/gnutls.h	/^    GNUTLS_PK_DSA = 2,$/;"	e	enum:__anon17
GNUTLS_PK_ECC	/usr/include/gnutls/gnutls.h	/^    GNUTLS_PK_ECC = 4,$/;"	e	enum:__anon17
GNUTLS_PK_RSA	/usr/include/gnutls/gnutls.h	/^    GNUTLS_PK_RSA = 1,$/;"	e	enum:__anon17
GNUTLS_PK_UNKNOWN	/usr/include/gnutls/gnutls.h	/^    GNUTLS_PK_UNKNOWN = 0,$/;"	e	enum:__anon17
GNUTLS_PRIVKEY_EXT	/usr/include/gnutls/gnutls.h	/^      GNUTLS_PRIVKEY_EXT$/;"	e	enum:__anon26
GNUTLS_PRIVKEY_IMPORT_AUTO_RELEASE	/usr/include/gnutls/abstract.h	158;"	d
GNUTLS_PRIVKEY_IMPORT_COPY	/usr/include/gnutls/abstract.h	159;"	d
GNUTLS_PRIVKEY_OPENPGP	/usr/include/gnutls/gnutls.h	/^      GNUTLS_PRIVKEY_OPENPGP,$/;"	e	enum:__anon26
GNUTLS_PRIVKEY_PKCS11	/usr/include/gnutls/gnutls.h	/^      GNUTLS_PRIVKEY_PKCS11,$/;"	e	enum:__anon26
GNUTLS_PRIVKEY_X509	/usr/include/gnutls/gnutls.h	/^      GNUTLS_PRIVKEY_X509,$/;"	e	enum:__anon26
GNUTLS_PSK_KEY_HEX	/usr/include/gnutls/gnutls.h	/^    GNUTLS_PSK_KEY_HEX$/;"	e	enum:gnutls_psk_key_flags
GNUTLS_PSK_KEY_RAW	/usr/include/gnutls/gnutls.h	/^    GNUTLS_PSK_KEY_RAW = 0,$/;"	e	enum:gnutls_psk_key_flags
GNUTLS_PUBKEY_VERIFY_FLAG_TLS_RSA	/usr/include/gnutls/abstract.h	128;"	d
GNUTLS_RND_KEY	/usr/include/gnutls/crypto.h	/^    GNUTLS_RND_KEY = 2$/;"	e	enum:gnutls_rnd_level
GNUTLS_RND_NONCE	/usr/include/gnutls/crypto.h	/^    GNUTLS_RND_NONCE = 0,$/;"	e	enum:gnutls_rnd_level
GNUTLS_RND_RANDOM	/usr/include/gnutls/crypto.h	/^    GNUTLS_RND_RANDOM = 1,$/;"	e	enum:gnutls_rnd_level
GNUTLS_SAN_DN	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SAN_DN = 6,$/;"	e	enum:gnutls_x509_subject_alt_name_t
GNUTLS_SAN_DNSNAME	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SAN_DNSNAME = 1,$/;"	e	enum:gnutls_x509_subject_alt_name_t
GNUTLS_SAN_IPADDRESS	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SAN_IPADDRESS = 4,$/;"	e	enum:gnutls_x509_subject_alt_name_t
GNUTLS_SAN_OTHERNAME	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SAN_OTHERNAME = 5,$/;"	e	enum:gnutls_x509_subject_alt_name_t
GNUTLS_SAN_OTHERNAME_XMPP	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SAN_OTHERNAME_XMPP = 1000$/;"	e	enum:gnutls_x509_subject_alt_name_t
GNUTLS_SAN_RFC822NAME	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SAN_RFC822NAME = 2,$/;"	e	enum:gnutls_x509_subject_alt_name_t
GNUTLS_SAN_URI	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SAN_URI = 3,$/;"	e	enum:gnutls_x509_subject_alt_name_t
GNUTLS_SEC_PARAM_HIGH	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SEC_PARAM_HIGH,$/;"	e	enum:__anon20
GNUTLS_SEC_PARAM_LOW	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SEC_PARAM_LOW,$/;"	e	enum:__anon20
GNUTLS_SEC_PARAM_NORMAL	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SEC_PARAM_NORMAL,$/;"	e	enum:__anon20
GNUTLS_SEC_PARAM_ULTRA	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SEC_PARAM_ULTRA$/;"	e	enum:__anon20
GNUTLS_SEC_PARAM_UNKNOWN	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SEC_PARAM_UNKNOWN,$/;"	e	enum:__anon20
GNUTLS_SEC_PARAM_WEAK	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SEC_PARAM_WEAK,$/;"	e	enum:__anon20
GNUTLS_SERVER	/usr/include/gnutls/gnutls.h	297;"	d
GNUTLS_SHUT_RDWR	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SHUT_RDWR = 0,$/;"	e	enum:__anon13
GNUTLS_SHUT_WR	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SHUT_WR = 1$/;"	e	enum:__anon13
GNUTLS_SIGN_DSA_SHA	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_DSA_SHA = GNUTLS_SIGN_DSA_SHA1,$/;"	e	enum:__anon18
GNUTLS_SIGN_DSA_SHA1	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_DSA_SHA1 = 2,$/;"	e	enum:__anon18
GNUTLS_SIGN_DSA_SHA224	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_DSA_SHA224 = 10,$/;"	e	enum:__anon18
GNUTLS_SIGN_DSA_SHA256	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_DSA_SHA256 = 11,$/;"	e	enum:__anon18
GNUTLS_SIGN_ECDSA_SHA1	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_ECDSA_SHA1 = 12,$/;"	e	enum:__anon18
GNUTLS_SIGN_ECDSA_SHA224	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_ECDSA_SHA224 = 13,$/;"	e	enum:__anon18
GNUTLS_SIGN_ECDSA_SHA256	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_ECDSA_SHA256 = 14,$/;"	e	enum:__anon18
GNUTLS_SIGN_ECDSA_SHA384	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_ECDSA_SHA384 = 15,$/;"	e	enum:__anon18
GNUTLS_SIGN_ECDSA_SHA512	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_ECDSA_SHA512 = 16,$/;"	e	enum:__anon18
GNUTLS_SIGN_RSA_MD2	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_RSA_MD2 = 4,$/;"	e	enum:__anon18
GNUTLS_SIGN_RSA_MD5	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_RSA_MD5 = 3,$/;"	e	enum:__anon18
GNUTLS_SIGN_RSA_RMD160	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_RSA_RMD160 = 5,$/;"	e	enum:__anon18
GNUTLS_SIGN_RSA_SHA	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_RSA_SHA = GNUTLS_SIGN_RSA_SHA1,$/;"	e	enum:__anon18
GNUTLS_SIGN_RSA_SHA1	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_RSA_SHA1 = 1,$/;"	e	enum:__anon18
GNUTLS_SIGN_RSA_SHA224	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_RSA_SHA224 = 9,$/;"	e	enum:__anon18
GNUTLS_SIGN_RSA_SHA256	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_RSA_SHA256 = 6,$/;"	e	enum:__anon18
GNUTLS_SIGN_RSA_SHA384	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_RSA_SHA384 = 7,$/;"	e	enum:__anon18
GNUTLS_SIGN_RSA_SHA512	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_RSA_SHA512 = 8,$/;"	e	enum:__anon18
GNUTLS_SIGN_UNKNOWN	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SIGN_UNKNOWN = 0,$/;"	e	enum:__anon18
GNUTLS_SSL3	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SSL3 = 1,$/;"	e	enum:__anon14
GNUTLS_SUPPLEMENTAL_USER_MAPPING_DATA	/usr/include/gnutls/gnutls.h	/^    GNUTLS_SUPPLEMENTAL_USER_MAPPING_DATA = 0$/;"	e	enum:__anon24
GNUTLS_TLS1	/usr/include/gnutls/gnutls.h	/^    GNUTLS_TLS1 = GNUTLS_TLS1_0,$/;"	e	enum:__anon14
GNUTLS_TLS1_0	/usr/include/gnutls/gnutls.h	/^    GNUTLS_TLS1_0 = 2,$/;"	e	enum:__anon14
GNUTLS_TLS1_1	/usr/include/gnutls/gnutls.h	/^    GNUTLS_TLS1_1 = 3,$/;"	e	enum:__anon14
GNUTLS_TLS1_2	/usr/include/gnutls/gnutls.h	/^    GNUTLS_TLS1_2 = 4,$/;"	e	enum:__anon14
GNUTLS_TL_VERIFY_CRL	/usr/include/gnutls/x509.h	909;"	d
GNUTLS_VERIFY_ALLOW_ANY_X509_V1_CA_CRT	/usr/include/gnutls/x509.h	/^    GNUTLS_VERIFY_ALLOW_ANY_X509_V1_CA_CRT = 8,$/;"	e	enum:gnutls_certificate_verify_flags
GNUTLS_VERIFY_ALLOW_SIGN_RSA_MD2	/usr/include/gnutls/x509.h	/^    GNUTLS_VERIFY_ALLOW_SIGN_RSA_MD2 = 16,$/;"	e	enum:gnutls_certificate_verify_flags
GNUTLS_VERIFY_ALLOW_SIGN_RSA_MD5	/usr/include/gnutls/x509.h	/^    GNUTLS_VERIFY_ALLOW_SIGN_RSA_MD5 = 32,$/;"	e	enum:gnutls_certificate_verify_flags
GNUTLS_VERIFY_ALLOW_X509_V1_CA_CRT	/usr/include/gnutls/x509.h	/^    GNUTLS_VERIFY_ALLOW_X509_V1_CA_CRT = 2,$/;"	e	enum:gnutls_certificate_verify_flags
GNUTLS_VERIFY_DISABLE_CA_SIGN	/usr/include/gnutls/x509.h	/^    GNUTLS_VERIFY_DISABLE_CA_SIGN = 1,$/;"	e	enum:gnutls_certificate_verify_flags
GNUTLS_VERIFY_DISABLE_CRL_CHECKS	/usr/include/gnutls/x509.h	/^    GNUTLS_VERIFY_DISABLE_CRL_CHECKS = 512,$/;"	e	enum:gnutls_certificate_verify_flags
GNUTLS_VERIFY_DISABLE_TIME_CHECKS	/usr/include/gnutls/x509.h	/^    GNUTLS_VERIFY_DISABLE_TIME_CHECKS = 64,$/;"	e	enum:gnutls_certificate_verify_flags
GNUTLS_VERIFY_DISABLE_TRUSTED_TIME_CHECKS	/usr/include/gnutls/x509.h	/^    GNUTLS_VERIFY_DISABLE_TRUSTED_TIME_CHECKS = 128,$/;"	e	enum:gnutls_certificate_verify_flags
GNUTLS_VERIFY_DO_NOT_ALLOW_SAME	/usr/include/gnutls/x509.h	/^    GNUTLS_VERIFY_DO_NOT_ALLOW_SAME = 4,$/;"	e	enum:gnutls_certificate_verify_flags
GNUTLS_VERIFY_DO_NOT_ALLOW_X509_V1_CA_CRT	/usr/include/gnutls/x509.h	/^    GNUTLS_VERIFY_DO_NOT_ALLOW_X509_V1_CA_CRT = 256,$/;"	e	enum:gnutls_certificate_verify_flags
GNUTLS_VERSION	/usr/include/gnutls/gnutls.h	53;"	d
GNUTLS_VERSION_MAJOR	/usr/include/gnutls/gnutls.h	55;"	d
GNUTLS_VERSION_MAX	/usr/include/gnutls/gnutls.h	/^    GNUTLS_VERSION_MAX = GNUTLS_DTLS1_0,$/;"	e	enum:__anon14
GNUTLS_VERSION_MINOR	/usr/include/gnutls/gnutls.h	56;"	d
GNUTLS_VERSION_NUMBER	/usr/include/gnutls/gnutls.h	59;"	d
GNUTLS_VERSION_PATCH	/usr/include/gnutls/gnutls.h	57;"	d
GNUTLS_VERSION_UNKNOWN	/usr/include/gnutls/gnutls.h	/^    GNUTLS_VERSION_UNKNOWN = 0xff$/;"	e	enum:__anon14
GNUTLS_X509_CN_SIZE	/usr/include/gnutls/openssl.h	47;"	d
GNUTLS_X509_CRT_FULL	/usr/include/gnutls/compat.h	132;"	d
GNUTLS_X509_CRT_LIST_FAIL_IF_UNSORTED	/usr/include/gnutls/x509.h	/^    GNUTLS_X509_CRT_LIST_FAIL_IF_UNSORTED = 2$/;"	e	enum:gnutls_certificate_import_flags
GNUTLS_X509_CRT_LIST_IMPORT_FAIL_IF_EXCEED	/usr/include/gnutls/x509.h	/^    GNUTLS_X509_CRT_LIST_IMPORT_FAIL_IF_EXCEED = 1,$/;"	e	enum:gnutls_certificate_import_flags
GNUTLS_X509_CRT_ONELINE	/usr/include/gnutls/compat.h	133;"	d
GNUTLS_X509_CRT_UNSIGNED_FULL	/usr/include/gnutls/compat.h	134;"	d
GNUTLS_X509_C_SIZE	/usr/include/gnutls/openssl.h	48;"	d
GNUTLS_X509_EMAIL_SIZE	/usr/include/gnutls/openssl.h	53;"	d
GNUTLS_X509_FMT_DER	/usr/include/gnutls/gnutls.h	/^    GNUTLS_X509_FMT_DER = 0,$/;"	e	enum:__anon16
GNUTLS_X509_FMT_PEM	/usr/include/gnutls/gnutls.h	/^    GNUTLS_X509_FMT_PEM = 1$/;"	e	enum:__anon16
GNUTLS_X509_H	/usr/include/gnutls/x509.h	28;"	d
GNUTLS_X509_L_SIZE	/usr/include/gnutls/openssl.h	51;"	d
GNUTLS_X509_OU_SIZE	/usr/include/gnutls/openssl.h	50;"	d
GNUTLS_X509_O_SIZE	/usr/include/gnutls/openssl.h	49;"	d
GNUTLS_X509_S_SIZE	/usr/include/gnutls/openssl.h	52;"	d
HAVE_SSIZE_T	/usr/include/gnutls/gnutls.h	41;"	d
LIBGNUTLS_EXTRA_VERSION	/usr/include/gnutls/compat.h	146;"	d
LIBGNUTLS_VERSION	/usr/include/gnutls/compat.h	141;"	d
LIBGNUTLS_VERSION_MAJOR	/usr/include/gnutls/compat.h	142;"	d
LIBGNUTLS_VERSION_MINOR	/usr/include/gnutls/compat.h	143;"	d
LIBGNUTLS_VERSION_NUMBER	/usr/include/gnutls/compat.h	145;"	d
LIBGNUTLS_VERSION_PATCH	/usr/include/gnutls/compat.h	144;"	d
MD5	/usr/include/gnutls/openssl.h	/^  unsigned char *MD5 (const unsigned char *buf, unsigned long len,$/;"	p	signature:(const unsigned char *buf, unsigned long len, unsigned char *md)
MD5_CTX	/usr/include/gnutls/openssl.h	176;"	d
MD5_DIGEST_LENGTH	/usr/include/gnutls/openssl.h	315;"	d
MD5_Final	/usr/include/gnutls/openssl.h	/^  void MD5_Final (unsigned char *md, MD5_CTX * ctx);$/;"	p	signature:(unsigned char *md, MD5_CTX * ctx)
MD5_Init	/usr/include/gnutls/openssl.h	/^  void MD5_Init (MD5_CTX * ctx);$/;"	p	signature:(MD5_CTX * ctx)
MD5_Update	/usr/include/gnutls/openssl.h	/^  void MD5_Update (MD5_CTX * ctx, const void *buf, int len);$/;"	p	signature:(MD5_CTX * ctx, const void *buf, int len)
MD_CTX	/usr/include/gnutls/openssl.h	/^  } MD_CTX;$/;"	t	typeref:struct:__anon35
OPENSSL_VERSION_NUMBER	/usr/include/gnutls/openssl.h	67;"	d
OPENSSL_VERSION_TEXT	/usr/include/gnutls/openssl.h	69;"	d
OpenSSL_add_all_algorithms	/usr/include/gnutls/openssl.h	/^  void OpenSSL_add_all_algorithms (void);$/;"	p	signature:(void)
OpenSSL_add_ssl_algorithms	/usr/include/gnutls/openssl.h	179;"	d
RAND_bytes	/usr/include/gnutls/openssl.h	/^  int RAND_bytes (unsigned char *buf, int num);$/;"	p	signature:(unsigned char *buf, int num)
RAND_egd	/usr/include/gnutls/openssl.h	311;"	d
RAND_egd_bytes	/usr/include/gnutls/openssl.h	/^  int RAND_egd_bytes (const char *path, int bytes);$/;"	p	signature:(const char *path, int bytes)
RAND_file_name	/usr/include/gnutls/openssl.h	/^  const char *RAND_file_name (char *buf, size_t len);$/;"	p	signature:(char *buf, size_t len)
RAND_load_file	/usr/include/gnutls/openssl.h	/^  int RAND_load_file (const char *name, long maxbytes);$/;"	p	signature:(const char *name, long maxbytes)
RAND_pseudo_bytes	/usr/include/gnutls/openssl.h	/^  int RAND_pseudo_bytes (unsigned char *buf, int num);$/;"	p	signature:(unsigned char *buf, int num)
RAND_seed	/usr/include/gnutls/openssl.h	/^  void RAND_seed (const void *buf, int num);$/;"	p	signature:(const void *buf, int num)
RAND_status	/usr/include/gnutls/openssl.h	/^  int RAND_status (void);$/;"	p	signature:(void)
RAND_write_file	/usr/include/gnutls/openssl.h	/^  int RAND_write_file (const char *name);$/;"	p	signature:(const char *name)
RIPEMD160	/usr/include/gnutls/openssl.h	/^  unsigned char *RIPEMD160 (const unsigned char *buf, unsigned long len,$/;"	p	signature:(const unsigned char *buf, unsigned long len, unsigned char *md)
RIPEMD160_CTX	/usr/include/gnutls/openssl.h	177;"	d
RIPEMD160_Final	/usr/include/gnutls/openssl.h	/^  void RIPEMD160_Final (unsigned char *md, RIPEMD160_CTX * ctx);$/;"	p	signature:(unsigned char *md, RIPEMD160_CTX * ctx)
RIPEMD160_Init	/usr/include/gnutls/openssl.h	/^  void RIPEMD160_Init (RIPEMD160_CTX * ctx);$/;"	p	signature:(RIPEMD160_CTX * ctx)
RIPEMD160_Update	/usr/include/gnutls/openssl.h	/^  void RIPEMD160_Update (RIPEMD160_CTX * ctx, const void *buf, int len);$/;"	p	signature:(RIPEMD160_CTX * ctx, const void *buf, int len)
RSA	/usr/include/gnutls/openssl.h	/^  typedef struct rsa_st RSA;$/;"	t	typeref:struct:rsa_st
SSL	/usr/include/gnutls/openssl.h	/^  typedef struct _SSL SSL;$/;"	t	typeref:struct:_SSL
SSLEAY_VERSION_NUMBER	/usr/include/gnutls/openssl.h	68;"	d
SSL_CIPHER	/usr/include/gnutls/openssl.h	/^  } SSL_CIPHER;$/;"	t	typeref:struct:__anon33
SSL_CIPHER_description	/usr/include/gnutls/openssl.h	/^  char *SSL_CIPHER_description (SSL_CIPHER * cipher, char *buf, int size);$/;"	p	signature:(SSL_CIPHER * cipher, char *buf, int size)
SSL_CIPHER_get_bits	/usr/include/gnutls/openssl.h	/^  int SSL_CIPHER_get_bits (SSL_CIPHER * cipher, int *bits);$/;"	p	signature:(SSL_CIPHER * cipher, int *bits)
SSL_CIPHER_get_name	/usr/include/gnutls/openssl.h	/^  const char *SSL_CIPHER_get_name (SSL_CIPHER * cipher);$/;"	p	signature:(SSL_CIPHER * cipher)
SSL_CIPHER_get_version	/usr/include/gnutls/openssl.h	/^  const char *SSL_CIPHER_get_version (SSL_CIPHER * cipher);$/;"	p	signature:(SSL_CIPHER * cipher)
SSL_CTX	/usr/include/gnutls/openssl.h	/^  } SSL_CTX;$/;"	t	typeref:struct:_SSL_CTX
SSL_CTX_free	/usr/include/gnutls/openssl.h	/^  void SSL_CTX_free (SSL_CTX * ctx);$/;"	p	signature:(SSL_CTX * ctx)
SSL_CTX_new	/usr/include/gnutls/openssl.h	/^  SSL_CTX *SSL_CTX_new (SSL_METHOD * method);$/;"	p	signature:(SSL_METHOD * method)
SSL_CTX_sess_accept	/usr/include/gnutls/openssl.h	/^  long SSL_CTX_sess_accept (SSL_CTX * ctx);$/;"	p	signature:(SSL_CTX * ctx)
SSL_CTX_sess_accept_good	/usr/include/gnutls/openssl.h	/^  long SSL_CTX_sess_accept_good (SSL_CTX * ctx);$/;"	p	signature:(SSL_CTX * ctx)
SSL_CTX_sess_accept_renegotiate	/usr/include/gnutls/openssl.h	/^  long SSL_CTX_sess_accept_renegotiate (SSL_CTX * ctx);$/;"	p	signature:(SSL_CTX * ctx)
SSL_CTX_sess_connect	/usr/include/gnutls/openssl.h	/^  long SSL_CTX_sess_connect (SSL_CTX * ctx);$/;"	p	signature:(SSL_CTX * ctx)
SSL_CTX_sess_connect_good	/usr/include/gnutls/openssl.h	/^  long SSL_CTX_sess_connect_good (SSL_CTX * ctx);$/;"	p	signature:(SSL_CTX * ctx)
SSL_CTX_sess_connect_renegotiate	/usr/include/gnutls/openssl.h	/^  long SSL_CTX_sess_connect_renegotiate (SSL_CTX * ctx);$/;"	p	signature:(SSL_CTX * ctx)
SSL_CTX_sess_hits	/usr/include/gnutls/openssl.h	/^  long SSL_CTX_sess_hits (SSL_CTX * ctx);$/;"	p	signature:(SSL_CTX * ctx)
SSL_CTX_sess_misses	/usr/include/gnutls/openssl.h	/^  long SSL_CTX_sess_misses (SSL_CTX * ctx);$/;"	p	signature:(SSL_CTX * ctx)
SSL_CTX_sess_number	/usr/include/gnutls/openssl.h	/^  long SSL_CTX_sess_number (SSL_CTX * ctx);$/;"	p	signature:(SSL_CTX * ctx)
SSL_CTX_sess_timeouts	/usr/include/gnutls/openssl.h	/^  long SSL_CTX_sess_timeouts (SSL_CTX * ctx);$/;"	p	signature:(SSL_CTX * ctx)
SSL_CTX_set_cipher_list	/usr/include/gnutls/openssl.h	/^  int SSL_CTX_set_cipher_list (SSL_CTX * ctx, const char *list);$/;"	p	signature:(SSL_CTX * ctx, const char *list)
SSL_CTX_set_default_verify_paths	/usr/include/gnutls/openssl.h	/^  int SSL_CTX_set_default_verify_paths (SSL_CTX * ctx);$/;"	p	signature:(SSL_CTX * ctx)
SSL_CTX_set_mode	/usr/include/gnutls/openssl.h	/^  long SSL_CTX_set_mode (SSL_CTX * ctx, long mode);$/;"	p	signature:(SSL_CTX * ctx, long mode)
SSL_CTX_set_options	/usr/include/gnutls/openssl.h	/^  unsigned long SSL_CTX_set_options (SSL_CTX * ctx, unsigned long options);$/;"	p	signature:(SSL_CTX * ctx, unsigned long options)
SSL_CTX_set_verify	/usr/include/gnutls/openssl.h	/^  void SSL_CTX_set_verify (SSL_CTX * ctx, int verify_mode,$/;"	p	signature:(SSL_CTX * ctx, int verify_mode, int (*verify_callback) (int, X509_STORE_CTX *))
SSL_CTX_use_PrivateKey_file	/usr/include/gnutls/openssl.h	/^  int SSL_CTX_use_PrivateKey_file (SSL_CTX * ctx, const char *keyfile,$/;"	p	signature:(SSL_CTX * ctx, const char *keyfile, int type)
SSL_CTX_use_certificate_file	/usr/include/gnutls/openssl.h	/^  int SSL_CTX_use_certificate_file (SSL_CTX * ctx, const char *certfile,$/;"	p	signature:(SSL_CTX * ctx, const char *certfile, int type)
SSL_ERROR_NONE	/usr/include/gnutls/openssl.h	71;"	d
SSL_ERROR_SSL	/usr/include/gnutls/openssl.h	72;"	d
SSL_ERROR_SYSCALL	/usr/include/gnutls/openssl.h	75;"	d
SSL_ERROR_WANT_READ	/usr/include/gnutls/openssl.h	73;"	d
SSL_ERROR_WANT_WRITE	/usr/include/gnutls/openssl.h	74;"	d
SSL_ERROR_ZERO_RETURN	/usr/include/gnutls/openssl.h	76;"	d
SSL_FILETYPE_PEM	/usr/include/gnutls/openssl.h	78;"	d
SSL_METHOD	/usr/include/gnutls/openssl.h	/^  } SSL_METHOD;$/;"	t	typeref:struct:__anon32
SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER	/usr/include/gnutls/openssl.h	92;"	d
SSL_MODE_AUTO_RETRY	/usr/include/gnutls/openssl.h	93;"	d
SSL_MODE_ENABLE_PARTIAL_WRITE	/usr/include/gnutls/openssl.h	91;"	d
SSL_NOTHING	/usr/include/gnutls/openssl.h	251;"	d
SSL_OP_ALL	/usr/include/gnutls/openssl.h	88;"	d
SSL_OP_NO_TLSv1	/usr/include/gnutls/openssl.h	89;"	d
SSL_READING	/usr/include/gnutls/openssl.h	253;"	d
SSL_ST_OK	/usr/include/gnutls/openssl.h	82;"	d
SSL_VERIFY_NONE	/usr/include/gnutls/openssl.h	80;"	d
SSL_WRITING	/usr/include/gnutls/openssl.h	252;"	d
SSL_X509_LOOKUP	/usr/include/gnutls/openssl.h	254;"	d
SSL_accept	/usr/include/gnutls/openssl.h	/^  int SSL_accept (SSL * ssl);$/;"	p	signature:(SSL * ssl)
SSL_connect	/usr/include/gnutls/openssl.h	/^  int SSL_connect (SSL * ssl);$/;"	p	signature:(SSL * ssl)
SSL_free	/usr/include/gnutls/openssl.h	/^  void SSL_free (SSL * ssl);$/;"	p	signature:(SSL * ssl)
SSL_get_cipher	/usr/include/gnutls/openssl.h	184;"	d
SSL_get_cipher_bits	/usr/include/gnutls/openssl.h	185;"	d
SSL_get_cipher_name	/usr/include/gnutls/openssl.h	183;"	d
SSL_get_cipher_version	/usr/include/gnutls/openssl.h	186;"	d
SSL_get_current_cipher	/usr/include/gnutls/openssl.h	/^  SSL_CIPHER *SSL_get_current_cipher (SSL * ssl);$/;"	p	signature:(SSL * ssl)
SSL_get_error	/usr/include/gnutls/openssl.h	/^  int SSL_get_error (SSL * ssl, int ret);$/;"	p	signature:(SSL * ssl, int ret)
SSL_get_peer_certificate	/usr/include/gnutls/openssl.h	/^  const X509 *SSL_get_peer_certificate (SSL * ssl);$/;"	p	signature:(SSL * ssl)
SSL_library_init	/usr/include/gnutls/openssl.h	/^  int SSL_library_init (void);$/;"	p	signature:(void)
SSL_load_error_strings	/usr/include/gnutls/openssl.h	/^  void SSL_load_error_strings (void);$/;"	p	signature:(void)
SSL_new	/usr/include/gnutls/openssl.h	/^  SSL *SSL_new (SSL_CTX * ctx);$/;"	p	signature:(SSL_CTX * ctx)
SSL_pending	/usr/include/gnutls/openssl.h	/^  int SSL_pending (SSL * ssl);$/;"	p	signature:(SSL * ssl)
SSL_read	/usr/include/gnutls/openssl.h	/^  int SSL_read (SSL * ssl, void *buf, int len);$/;"	p	signature:(SSL * ssl, void *buf, int len)
SSL_set_bio	/usr/include/gnutls/openssl.h	/^  void SSL_set_bio (SSL * ssl, BIO * rbio, BIO * wbio);$/;"	p	signature:(SSL * ssl, BIO * rbio, BIO * wbio)
SSL_set_connect_state	/usr/include/gnutls/openssl.h	/^  void SSL_set_connect_state (SSL * ssl);$/;"	p	signature:(SSL * ssl)
SSL_set_fd	/usr/include/gnutls/openssl.h	/^  int SSL_set_fd (SSL * ssl, int fd);$/;"	p	signature:(SSL * ssl, int fd)
SSL_set_rfd	/usr/include/gnutls/openssl.h	/^  int SSL_set_rfd (SSL * ssl, int fd);$/;"	p	signature:(SSL * ssl, int fd)
SSL_set_verify	/usr/include/gnutls/openssl.h	/^  void SSL_set_verify (SSL * ssl, int verify_mode,$/;"	p	signature:(SSL * ssl, int verify_mode, int (*verify_callback) (int, X509_STORE_CTX *))
SSL_set_wfd	/usr/include/gnutls/openssl.h	/^  int SSL_set_wfd (SSL * ssl, int fd);$/;"	p	signature:(SSL * ssl, int fd)
SSL_shutdown	/usr/include/gnutls/openssl.h	/^  int SSL_shutdown (SSL * ssl);$/;"	p	signature:(SSL * ssl)
SSL_want	/usr/include/gnutls/openssl.h	/^  int SSL_want (SSL * ssl);$/;"	p	signature:(SSL * ssl)
SSL_want_nothing	/usr/include/gnutls/openssl.h	256;"	d
SSL_want_read	/usr/include/gnutls/openssl.h	257;"	d
SSL_want_write	/usr/include/gnutls/openssl.h	258;"	d
SSL_want_x509_lookup	/usr/include/gnutls/openssl.h	259;"	d
SSL_write	/usr/include/gnutls/openssl.h	/^  int SSL_write (SSL * ssl, const void *buf, int len);$/;"	p	signature:(SSL * ssl, const void *buf, int len)
SSLeay_add_all_algorithms	/usr/include/gnutls/openssl.h	181;"	d
SSLeay_add_ssl_algorithms	/usr/include/gnutls/openssl.h	180;"	d
SSLv23_client_method	/usr/include/gnutls/openssl.h	/^  SSL_METHOD *SSLv23_client_method (void);$/;"	p	signature:(void)
SSLv23_server_method	/usr/include/gnutls/openssl.h	/^  SSL_METHOD *SSLv23_server_method (void);$/;"	p	signature:(void)
SSLv3_client_method	/usr/include/gnutls/openssl.h	/^  SSL_METHOD *SSLv3_client_method (void);$/;"	p	signature:(void)
SSLv3_server_method	/usr/include/gnutls/openssl.h	/^  SSL_METHOD *SSLv3_server_method (void);$/;"	p	signature:(void)
TLS_MASTER_SIZE	/usr/include/gnutls/compat.h	137;"	d
TLS_RANDOM_SIZE	/usr/include/gnutls/compat.h	138;"	d
TLSv1_client_method	/usr/include/gnutls/openssl.h	/^  SSL_METHOD *TLSv1_client_method (void);$/;"	p	signature:(void)
TLSv1_server_method	/usr/include/gnutls/openssl.h	/^  SSL_METHOD *TLSv1_server_method (void);$/;"	p	signature:(void)
X509	/usr/include/gnutls/openssl.h	/^  typedef gnutls_datum_t X509;$/;"	t
X509_NAME	/usr/include/gnutls/openssl.h	/^  typedef gnutls_x509_dn X509_NAME;$/;"	t
X509_NAME_oneline	/usr/include/gnutls/openssl.h	/^  char *X509_NAME_oneline (gnutls_x509_dn * name, char *buf, int len);$/;"	p	signature:(gnutls_x509_dn * name, char *buf, int len)
X509_STORE_CTX	/usr/include/gnutls/openssl.h	/^  } X509_STORE_CTX;$/;"	t	typeref:struct:__anon34
X509_STORE_CTX_get_current_cert	/usr/include/gnutls/openssl.h	129;"	d
X509_V_ERR_CERT_HAS_EXPIRED	/usr/include/gnutls/openssl.h	85;"	d
X509_V_ERR_CERT_NOT_YET_VALID	/usr/include/gnutls/openssl.h	84;"	d
X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT	/usr/include/gnutls/openssl.h	86;"	d
X509_free	/usr/include/gnutls/openssl.h	/^  void X509_free (const X509 * cert);$/;"	p	signature:(const X509 * cert)
X509_get_issuer_name	/usr/include/gnutls/openssl.h	/^  X509_NAME *X509_get_issuer_name (const X509 * cert);$/;"	p	signature:(const X509 * cert)
X509_get_subject_name	/usr/include/gnutls/openssl.h	/^  X509_NAME *X509_get_subject_name (const X509 * cert);$/;"	p	signature:(const X509 * cert)
_BIO	/usr/include/gnutls/openssl.h	/^  typedef struct _BIO$/;"	s
_BIO::fd	/usr/include/gnutls/openssl.h	/^    gnutls_transport_ptr_t fd;$/;"	m	struct:_BIO	access:public
_GNUTLS_COMPAT_H	/usr/include/gnutls/compat.h	26;"	d
_GNUTLS_GCC_ATTR_DEPRECATED	/usr/include/gnutls/compat.h	39;"	d
_GNUTLS_GCC_ATTR_DEPRECATED	/usr/include/gnutls/compat.h	46;"	d
_GNUTLS_GCC_VERSION	/usr/include/gnutls/compat.h	35;"	d
_SSL	/usr/include/gnutls/openssl.h	/^  struct _SSL$/;"	s
_SSL::ciphersuite	/usr/include/gnutls/openssl.h	/^    SSL_CIPHER ciphersuite;$/;"	m	struct:_SSL	access:public
_SSL::ctx	/usr/include/gnutls/openssl.h	/^    SSL_CTX *ctx;$/;"	m	struct:_SSL	access:public
_SSL::gnutls_cred	/usr/include/gnutls/openssl.h	/^    gnutls_certificate_client_credentials gnutls_cred;$/;"	m	struct:_SSL	access:public
_SSL::gnutls_state	/usr/include/gnutls/openssl.h	/^    gnutls_session_t gnutls_state;$/;"	m	struct:_SSL	access:public
_SSL::last_error	/usr/include/gnutls/openssl.h	/^    int last_error;$/;"	m	struct:_SSL	access:public
_SSL::options	/usr/include/gnutls/openssl.h	/^    unsigned long options;$/;"	m	struct:_SSL	access:public
_SSL::rfd	/usr/include/gnutls/openssl.h	/^    gnutls_transport_ptr_t rfd;$/;"	m	struct:_SSL	access:public
_SSL::shutdown	/usr/include/gnutls/openssl.h	/^    int shutdown;$/;"	m	struct:_SSL	access:public
_SSL::state	/usr/include/gnutls/openssl.h	/^    int state;$/;"	m	struct:_SSL	access:public
_SSL::verify_callback	/usr/include/gnutls/openssl.h	/^    int (*verify_callback) (int, X509_STORE_CTX *);$/;"	m	struct:_SSL	access:public
_SSL::verify_mode	/usr/include/gnutls/openssl.h	/^    int verify_mode;$/;"	m	struct:_SSL	access:public
_SSL::wfd	/usr/include/gnutls/openssl.h	/^    gnutls_transport_ptr_t wfd;$/;"	m	struct:_SSL	access:public
_SSL_CTX	/usr/include/gnutls/openssl.h	/^  typedef struct _SSL_CTX$/;"	s
_SSL_CTX::certfile	/usr/include/gnutls/openssl.h	/^    char *certfile;$/;"	m	struct:_SSL_CTX	access:public
_SSL_CTX::certfile_type	/usr/include/gnutls/openssl.h	/^    int certfile_type;$/;"	m	struct:_SSL_CTX	access:public
_SSL_CTX::keyfile	/usr/include/gnutls/openssl.h	/^    char *keyfile;$/;"	m	struct:_SSL_CTX	access:public
_SSL_CTX::keyfile_type	/usr/include/gnutls/openssl.h	/^    int keyfile_type;$/;"	m	struct:_SSL_CTX	access:public
_SSL_CTX::method	/usr/include/gnutls/openssl.h	/^    SSL_METHOD *method;$/;"	m	struct:_SSL_CTX	access:public
_SSL_CTX::options	/usr/include/gnutls/openssl.h	/^    unsigned long options;$/;"	m	struct:_SSL_CTX	access:public
_SSL_CTX::verify_callback	/usr/include/gnutls/openssl.h	/^    int (*verify_callback) (int, X509_STORE_CTX *);$/;"	m	struct:_SSL_CTX	access:public
_SSL_CTX::verify_mode	/usr/include/gnutls/openssl.h	/^    int verify_mode;$/;"	m	struct:_SSL_CTX	access:public
__GNUTLS_ABSTRACT_H	/usr/include/gnutls/abstract.h	24;"	d
__GNUTLS_PKCS11_H	/usr/include/gnutls/pkcs11.h	24;"	d
__anon22::data	/usr/include/gnutls/gnutls.h	/^    unsigned char *data;$/;"	m	struct:__anon22	access:public
__anon22::size	/usr/include/gnutls/gnutls.h	/^    unsigned int size;$/;"	m	struct:__anon22	access:public
__anon25::iov_base	/usr/include/gnutls/gnutls.h	/^    void *iov_base;             \/* Starting address *\/$/;"	m	struct:__anon25	access:public
__anon25::iov_len	/usr/include/gnutls/gnutls.h	/^    size_t iov_len;             \/* Number of bytes to transfer *\/$/;"	m	struct:__anon25	access:public
__anon31::common_name	/usr/include/gnutls/openssl.h	/^    char common_name[GNUTLS_X509_CN_SIZE];$/;"	m	struct:__anon31	access:public
__anon31::country	/usr/include/gnutls/openssl.h	/^    char country[GNUTLS_X509_C_SIZE];$/;"	m	struct:__anon31	access:public
__anon31::email	/usr/include/gnutls/openssl.h	/^    char email[GNUTLS_X509_EMAIL_SIZE];$/;"	m	struct:__anon31	access:public
__anon31::locality_name	/usr/include/gnutls/openssl.h	/^    char locality_name[GNUTLS_X509_L_SIZE];$/;"	m	struct:__anon31	access:public
__anon31::organization	/usr/include/gnutls/openssl.h	/^    char organization[GNUTLS_X509_O_SIZE];$/;"	m	struct:__anon31	access:public
__anon31::organizational_unit_name	/usr/include/gnutls/openssl.h	/^    char organizational_unit_name[GNUTLS_X509_OU_SIZE];$/;"	m	struct:__anon31	access:public
__anon31::state_or_province_name	/usr/include/gnutls/openssl.h	/^    char state_or_province_name[GNUTLS_X509_S_SIZE];$/;"	m	struct:__anon31	access:public
__anon32::connend	/usr/include/gnutls/openssl.h	/^    unsigned int connend;$/;"	m	struct:__anon32	access:public
__anon32::priority_string	/usr/include/gnutls/openssl.h	/^    char priority_string[256];$/;"	m	struct:__anon32	access:public
__anon33::cert	/usr/include/gnutls/openssl.h	/^    gnutls_certificate_type_t cert;$/;"	m	struct:__anon33	access:public
__anon33::cipher	/usr/include/gnutls/openssl.h	/^    gnutls_cipher_algorithm_t cipher;$/;"	m	struct:__anon33	access:public
__anon33::compression	/usr/include/gnutls/openssl.h	/^    gnutls_compression_method_t compression;$/;"	m	struct:__anon33	access:public
__anon33::kx	/usr/include/gnutls/openssl.h	/^    gnutls_kx_algorithm_t kx;$/;"	m	struct:__anon33	access:public
__anon33::mac	/usr/include/gnutls/openssl.h	/^    gnutls_mac_algorithm_t mac;$/;"	m	struct:__anon33	access:public
__anon33::version	/usr/include/gnutls/openssl.h	/^    gnutls_protocol_t version;$/;"	m	struct:__anon33	access:public
__anon34::cert_list	/usr/include/gnutls/openssl.h	/^    const gnutls_datum_t *cert_list;$/;"	m	struct:__anon34	access:public
__anon34::error	/usr/include/gnutls/openssl.h	/^    int error;$/;"	m	struct:__anon34	access:public
__anon34::ssl	/usr/include/gnutls/openssl.h	/^    SSL *ssl;$/;"	m	struct:__anon34	access:public
__anon35::handle	/usr/include/gnutls/openssl.h	/^    void *handle;$/;"	m	struct:__anon35	access:public
__anon36::hsk_read_seq	/usr/include/gnutls/dtls.h	/^    unsigned int hsk_read_seq;$/;"	m	struct:__anon36	access:public
__anon36::hsk_write_seq	/usr/include/gnutls/dtls.h	/^    unsigned int hsk_write_seq;$/;"	m	struct:__anon36	access:public
__anon36::record_seq	/usr/include/gnutls/dtls.h	/^    unsigned int record_seq;$/;"	m	struct:__anon36	access:public
_gnutls_deinit	/usr/include/gnutls/gnutls.h	734;"	d
anon_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^    anon_client_credentials ();$/;"	p	class:gnutls::anon_client_credentials	access:public	signature:()
anon_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class anon_client_credentials:public credentials$/;"	c	namespace:gnutls	inherits:credentials
anon_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^    anon_server_credentials ();$/;"	p	class:gnutls::anon_server_credentials	access:public	signature:()
anon_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class anon_server_credentials:public credentials$/;"	c	namespace:gnutls	inherits:credentials
bye	/usr/include/gnutls/gnutlsxx.h	/^    int bye (gnutls_close_request_t how);$/;"	p	class:gnutls::session	access:public	signature:(gnutls_close_request_t how)
cert	/usr/include/gnutls/abstract.h	/^  gnutls_datum_t cert;$/;"	m	struct:gnutls_pcert_st	access:public
cert	/usr/include/gnutls/compat.h	/^  } cert;$/;"	m	struct:gnutls_retr_st	typeref:union:gnutls_retr_st::__anon29	access:public
cert	/usr/include/gnutls/gnutls.h	/^    } cert;$/;"	m	struct:gnutls_retr2_st	typeref:union:gnutls_retr2_st::__anon27	access:public
cert	/usr/include/gnutls/openssl.h	/^    gnutls_certificate_type_t cert;$/;"	m	struct:__anon33	access:public
cert_list	/usr/include/gnutls/openssl.h	/^    const gnutls_datum_t *cert_list;$/;"	m	struct:__anon34	access:public
cert_type	/usr/include/gnutls/gnutls.h	/^    gnutls_certificate_type_t cert_type;$/;"	m	struct:gnutls_retr2_st	access:public
certfile	/usr/include/gnutls/openssl.h	/^    char *certfile;$/;"	m	struct:_SSL_CTX	access:public
certfile_type	/usr/include/gnutls/openssl.h	/^    int certfile_type;$/;"	m	struct:_SSL_CTX	access:public
certificate_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class certificate_client_credentials:public certificate_credentials$/;"	c	namespace:gnutls	inherits:certificate_credentials
certificate_credentials	/usr/include/gnutls/gnutlsxx.h	/^    certificate_credentials ();$/;"	p	class:gnutls::certificate_credentials	access:public	signature:()
certificate_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class certificate_credentials:public credentials$/;"	c	namespace:gnutls	inherits:credentials
certificate_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class certificate_server_credentials:public certificate_credentials$/;"	c	namespace:gnutls	inherits:certificate_credentials
check_pending	/usr/include/gnutls/gnutlsxx.h	/^    size_t check_pending () const;$/;"	p	class:gnutls::session	access:public	signature:() const
cipher	/usr/include/gnutls/openssl.h	/^    gnutls_cipher_algorithm_t cipher;$/;"	m	struct:__anon33	access:public
ciphersuite	/usr/include/gnutls/openssl.h	/^    SSL_CIPHER ciphersuite;$/;"	m	struct:_SSL	access:public
clear_credentials	/usr/include/gnutls/gnutlsxx.h	/^    void clear_credentials ();$/;"	p	class:gnutls::session	access:public	signature:()
client_session	/usr/include/gnutls/gnutlsxx.h	/^    client_session ();$/;"	p	class:gnutls::client_session	access:public	signature:()
client_session	/usr/include/gnutls/gnutlsxx.h	/^  class client_session:public session$/;"	c	namespace:gnutls	inherits:session
common_name	/usr/include/gnutls/openssl.h	/^    char common_name[GNUTLS_X509_CN_SIZE];$/;"	m	struct:__anon31	access:public
compression	/usr/include/gnutls/openssl.h	/^    gnutls_compression_method_t compression;$/;"	m	struct:__anon33	access:public
connend	/usr/include/gnutls/openssl.h	/^    unsigned int connend;$/;"	m	struct:__anon32	access:public
country	/usr/include/gnutls/openssl.h	/^    char country[GNUTLS_X509_C_SIZE];$/;"	m	struct:__anon31	access:public
cred	/usr/include/gnutls/gnutlsxx.h	/^      gnutls_anon_server_credentials_t cred;$/;"	m	class:gnutls::anon_server_credentials	access:protected
cred	/usr/include/gnutls/gnutlsxx.h	/^      gnutls_certificate_credentials_t cred;$/;"	m	class:gnutls::certificate_credentials	access:protected
cred	/usr/include/gnutls/gnutlsxx.h	/^      gnutls_psk_client_credentials_t cred;$/;"	m	class:gnutls::psk_client_credentials	access:protected
cred	/usr/include/gnutls/gnutlsxx.h	/^      gnutls_psk_server_credentials_t cred;$/;"	m	class:gnutls::psk_server_credentials	access:protected
cred	/usr/include/gnutls/gnutlsxx.h	/^      gnutls_srp_client_credentials_t cred;$/;"	m	class:gnutls::srp_client_credentials	access:protected
cred	/usr/include/gnutls/gnutlsxx.h	/^      gnutls_srp_server_credentials_t cred;$/;"	m	class:gnutls::srp_server_credentials	access:protected
cred	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_anon_client_credentials_t cred;$/;"	m	class:gnutls::anon_client_credentials	access:protected
cred	/usr/include/gnutls/gnutlsxx.h	/^    void *cred;$/;"	m	class:gnutls::credentials	access:private
credentials	/usr/include/gnutls/gnutlsxx.h	/^    credentials (gnutls_credentials_type_t t);$/;"	p	class:gnutls::credentials	access:protected	signature:(gnutls_credentials_type_t t)
credentials	/usr/include/gnutls/gnutlsxx.h	/^  class credentials:private noncopyable$/;"	c	namespace:gnutls	inherits:noncopyable
ctx	/usr/include/gnutls/openssl.h	/^    SSL_CTX *ctx;$/;"	m	struct:_SSL	access:public
current_cert	/usr/include/gnutls/openssl.h	126;"	d
data	/usr/include/gnutls/gnutls.h	/^    unsigned char *data;$/;"	m	struct:__anon22	access:public
db_check_entry	/usr/include/gnutls/gnutlsxx.h	/^    bool db_check_entry (gnutls_datum_t & session_data) const;$/;"	p	class:gnutls::server_session	access:public	signature:(gnutls_datum_t & session_data) const
db_remove	/usr/include/gnutls/gnutlsxx.h	/^    void db_remove () const;$/;"	p	class:gnutls::server_session	access:public	signature:() const
deinit	/usr/include/gnutls/gnutls.h	/^    int deinit;$/;"	m	struct:gnutls_params_st	access:public
deinit_all	/usr/include/gnutls/compat.h	/^  unsigned int deinit_all;      \/* if non zero all keys will be deinited *\/$/;"	m	struct:gnutls_retr_st	access:public
deinit_all	/usr/include/gnutls/gnutls.h	/^    unsigned int deinit_all;    \/* if non zero all keys will be deinited *\/$/;"	m	struct:gnutls_retr2_st	access:public
dh	/usr/include/gnutls/gnutls.h	/^      gnutls_dh_params_t dh;$/;"	m	union:gnutls_params_st::params	access:public
dh_params	/usr/include/gnutls/gnutlsxx.h	/^    dh_params ();$/;"	p	class:gnutls::dh_params	access:public	signature:()
dh_params	/usr/include/gnutls/gnutlsxx.h	/^  class dh_params:private noncopyable$/;"	c	namespace:gnutls	inherits:noncopyable
ecdh	/usr/include/gnutls/gnutls.h	/^      gnutls_ecdh_params_t ecdh;$/;"	m	union:gnutls_params_st::params	access:public
email	/usr/include/gnutls/openssl.h	/^    char email[GNUTLS_X509_EMAIL_SIZE];$/;"	m	struct:__anon31	access:public
error	/usr/include/gnutls/openssl.h	/^    int error;$/;"	m	struct:__anon34	access:public
exception	/usr/include/gnutls/gnutlsxx.h	/^    exception (int x);$/;"	p	class:gnutls::exception	access:public	signature:(int x)
exception	/usr/include/gnutls/gnutlsxx.h	/^  class exception:public std::exception$/;"	c	namespace:gnutls	inherits:std::exception
export_pkcs1	/usr/include/gnutls/gnutlsxx.h	/^    void export_pkcs1 (gnutls_x509_crt_fmt_t format,$/;"	p	class:gnutls::rsa_params	access:public	signature:(gnutls_x509_crt_fmt_t format, unsigned char *params_data, size_t * params_data_size)
export_pkcs3	/usr/include/gnutls/gnutlsxx.h	/^    void export_pkcs3 (gnutls_x509_crt_fmt_t format,$/;"	p	class:gnutls::dh_params	access:public	signature:(gnutls_x509_crt_fmt_t format, unsigned char *params_data, size_t * params_data_size)
export_raw	/usr/include/gnutls/gnutlsxx.h	/^    void export_raw (gnutls_datum_t & m, gnutls_datum_t & e,$/;"	p	class:gnutls::rsa_params	access:public	signature:(gnutls_datum_t & m, gnutls_datum_t & e, gnutls_datum_t & d, gnutls_datum_t & p, gnutls_datum_t & q, gnutls_datum_t & u)
export_raw	/usr/include/gnutls/gnutlsxx.h	/^    void export_raw (gnutls_datum_t & prime, gnutls_datum_t & generator);$/;"	p	class:gnutls::dh_params	access:public	signature:(gnutls_datum_t & prime, gnutls_datum_t & generator)
fd	/usr/include/gnutls/openssl.h	/^    gnutls_transport_ptr_t fd;$/;"	m	struct:_BIO	access:public
free_ca_names	/usr/include/gnutls/gnutlsxx.h	/^    void free_ca_names ();$/;"	p	class:gnutls::certificate_credentials	access:public	signature:()
free_cas	/usr/include/gnutls/gnutlsxx.h	/^    void free_cas ();$/;"	p	class:gnutls::certificate_credentials	access:public	signature:()
free_crls	/usr/include/gnutls/gnutlsxx.h	/^    void free_crls ();$/;"	p	class:gnutls::certificate_credentials	access:public	signature:()
free_keys	/usr/include/gnutls/gnutlsxx.h	/^    void free_keys ();$/;"	p	class:gnutls::certificate_credentials	access:public	signature:()
generate	/usr/include/gnutls/gnutlsxx.h	/^    void generate (unsigned int bits);$/;"	p	class:gnutls::dh_params	access:public	signature:(unsigned int bits)
generate	/usr/include/gnutls/gnutlsxx.h	/^    void generate (unsigned int bits);$/;"	p	class:gnutls::rsa_params	access:public	signature:(unsigned int bits)
get_alert	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_alert_description_t get_alert () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_auth_type	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_credentials_type_t get_auth_type () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_certificate_type	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_certificate_type_t get_certificate_type () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_cipher	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_cipher_algorithm_t get_cipher () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_client_auth_type	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_credentials_type_t get_client_auth_type () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_code	/usr/include/gnutls/gnutlsxx.h	/^    int get_code ();$/;"	p	class:gnutls::exception	access:public	signature:()
get_compression	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_compression_method_t get_compression () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_data	/usr/include/gnutls/gnutlsxx.h	/^    void get_data (gnutls_session_t session, gnutls_datum_t & data) const;$/;"	p	class:gnutls::session	access:public	signature:(gnutls_session_t session, gnutls_datum_t & data) const
get_data	/usr/include/gnutls/gnutlsxx.h	/^    void get_data (void *session_data, size_t * session_data_size) const;$/;"	p	class:gnutls::session	access:public	signature:(void *session_data, size_t * session_data_size) const
get_dh_group	/usr/include/gnutls/gnutlsxx.h	/^    void get_dh_group (gnutls_datum_t & gen, gnutls_datum_t & prime) const;$/;"	p	class:gnutls::session	access:public	signature:(gnutls_datum_t & gen, gnutls_datum_t & prime) const
get_dh_peers_public_bits	/usr/include/gnutls/gnutlsxx.h	/^    unsigned int get_dh_peers_public_bits () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_dh_prime_bits	/usr/include/gnutls/gnutlsxx.h	/^    unsigned int get_dh_prime_bits () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_dh_pubkey	/usr/include/gnutls/gnutlsxx.h	/^    void get_dh_pubkey (gnutls_datum_t & raw_key) const;$/;"	p	class:gnutls::session	access:public	signature:(gnutls_datum_t & raw_key) const
get_dh_secret_bits	/usr/include/gnutls/gnutlsxx.h	/^    unsigned int get_dh_secret_bits () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_handshake_last_in	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_handshake_description_t get_handshake_last_in () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_handshake_last_out	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_handshake_description_t get_handshake_last_out () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_id	/usr/include/gnutls/gnutlsxx.h	/^    void get_id (void *session_id, size_t * session_id_size) const;$/;"	p	class:gnutls::session	access:public	signature:(void *session_id, size_t * session_id_size) const
get_kx	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_kx_algorithm_t get_kx () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_mac	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_mac_algorithm_t get_mac () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_max_size	/usr/include/gnutls/gnutlsxx.h	/^    size_t get_max_size () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_our_certificate	/usr/include/gnutls/gnutlsxx.h	/^    void get_our_certificate (gnutls_datum_t & cert) const;$/;"	p	class:gnutls::session	access:public	signature:(gnutls_datum_t & cert) const
get_params_t	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_dh_params_t get_params_t () const;$/;"	p	class:gnutls::dh_params	access:public	signature:() const
get_params_t	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_rsa_params_t get_params_t () const;$/;"	p	class:gnutls::rsa_params	access:public	signature:() const
get_peers_certificate	/usr/include/gnutls/gnutlsxx.h	/^    bool get_peers_certificate (const gnutls_datum_t ** certs,$/;"	p	class:gnutls::session	access:public	signature:(const gnutls_datum_t ** certs, unsigned int *certs_size) const
get_peers_certificate	/usr/include/gnutls/gnutlsxx.h	/^    bool get_peers_certificate (std::vector < gnutls_datum_t >$/;"	p	class:gnutls::session	access:public	signature:(std::vector < gnutls_datum_t > &out_certs) const
get_peers_certificate_activation_time	/usr/include/gnutls/gnutlsxx.h	/^    time_t get_peers_certificate_activation_time () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_peers_certificate_expiration_time	/usr/include/gnutls/gnutlsxx.h	/^    time_t get_peers_certificate_expiration_time () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_protocol_version	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_protocol_t get_protocol_version () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_psk_username	/usr/include/gnutls/gnutlsxx.h	/^    const char *get_psk_username () const;$/;"	p	class:gnutls::server_session	access:public	signature:() const
get_record_direction	/usr/include/gnutls/gnutlsxx.h	/^    bool get_record_direction () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_request_status	/usr/include/gnutls/gnutlsxx.h	/^    bool get_request_status ();$/;"	p	class:gnutls::client_session	access:public	signature:()
get_rsa_export_modulus_bits	/usr/include/gnutls/gnutlsxx.h	/^    unsigned int get_rsa_export_modulus_bits () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_rsa_export_pubkey	/usr/include/gnutls/gnutlsxx.h	/^    void get_rsa_export_pubkey (gnutls_datum_t & exponent,$/;"	p	class:gnutls::session	access:public	signature:(gnutls_datum_t & exponent, gnutls_datum_t & modulus) const
get_server_auth_type	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_credentials_type_t get_server_auth_type () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_server_name	/usr/include/gnutls/gnutlsxx.h	/^    void get_server_name (void *data, size_t * data_length,$/;"	p	class:gnutls::server_session	access:public	signature:(void *data, size_t * data_length, unsigned int *type, unsigned int indx) const
get_srp_username	/usr/include/gnutls/gnutlsxx.h	/^    const char *get_srp_username () const;$/;"	p	class:gnutls::server_session	access:public	signature:() const
get_transport_ptr	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_transport_ptr_t get_transport_ptr () const;$/;"	p	class:gnutls::session	access:public	signature:() const
get_transport_ptr	/usr/include/gnutls/gnutlsxx.h	/^    void get_transport_ptr (gnutls_transport_ptr_t & recv_ptr,$/;"	p	class:gnutls::session	access:public	signature:(gnutls_transport_ptr_t & recv_ptr, gnutls_transport_ptr_t & send_ptr) const
get_type	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_credentials_type_t get_type () const;$/;"	p	class:gnutls::credentials	access:public	signature:() const
get_user_ptr	/usr/include/gnutls/gnutlsxx.h	/^    void *get_user_ptr () const;$/;"	p	class:gnutls::session	access:public	signature:() const
giovec_t	/usr/include/gnutls/gnutls.h	/^  } giovec_t;$/;"	t	typeref:struct:__anon25
gnutls	/usr/include/gnutls/gnutlsxx.h	/^namespace gnutls$/;"	n
gnutls::DB	/usr/include/gnutls/gnutlsxx.h	/^  class DB:private noncopyable$/;"	c	namespace:gnutls	inherits:noncopyable
gnutls::DB::remove	/usr/include/gnutls/gnutlsxx.h	/^    virtual bool remove (const gnutls_datum_t & key) = 0;$/;"	p	class:gnutls::DB	access:public	signature:(const gnutls_datum_t & key)
gnutls::DB::retrieve	/usr/include/gnutls/gnutlsxx.h	/^    virtual bool retrieve (const gnutls_datum_t & key,$/;"	p	class:gnutls::DB	access:public	signature:(const gnutls_datum_t & key, gnutls_datum_t & data)
gnutls::DB::store	/usr/include/gnutls/gnutlsxx.h	/^    virtual bool store (const gnutls_datum_t & key,$/;"	p	class:gnutls::DB	access:public	signature:(const gnutls_datum_t & key, const gnutls_datum_t & data)
gnutls::DB::~DB	/usr/include/gnutls/gnutlsxx.h	/^    virtual ~ DB () = 0;$/;"	p	class:gnutls::DB	access:public	signature:()
gnutls::anon_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class anon_client_credentials:public credentials$/;"	c	namespace:gnutls	inherits:credentials
gnutls::anon_client_credentials::anon_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^    anon_client_credentials ();$/;"	p	class:gnutls::anon_client_credentials	access:public	signature:()
gnutls::anon_client_credentials::cred	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_anon_client_credentials_t cred;$/;"	m	class:gnutls::anon_client_credentials	access:protected
gnutls::anon_client_credentials::~anon_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^    ~anon_client_credentials ();$/;"	p	class:gnutls::anon_client_credentials	access:public	signature:()
gnutls::anon_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class anon_server_credentials:public credentials$/;"	c	namespace:gnutls	inherits:credentials
gnutls::anon_server_credentials::anon_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^    anon_server_credentials ();$/;"	p	class:gnutls::anon_server_credentials	access:public	signature:()
gnutls::anon_server_credentials::cred	/usr/include/gnutls/gnutlsxx.h	/^      gnutls_anon_server_credentials_t cred;$/;"	m	class:gnutls::anon_server_credentials	access:protected
gnutls::anon_server_credentials::set_dh_params	/usr/include/gnutls/gnutlsxx.h	/^    void set_dh_params (const dh_params & params);$/;"	p	class:gnutls::anon_server_credentials	access:public	signature:(const dh_params & params)
gnutls::anon_server_credentials::set_params_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_params_function (gnutls_params_function * func);$/;"	p	class:gnutls::anon_server_credentials	access:public	signature:(gnutls_params_function * func)
gnutls::anon_server_credentials::~anon_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^    ~anon_server_credentials ();$/;"	p	class:gnutls::anon_server_credentials	access:public	signature:()
gnutls::certificate_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class certificate_client_credentials:public certificate_credentials$/;"	c	namespace:gnutls	inherits:certificate_credentials
gnutls::certificate_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class certificate_credentials:public credentials$/;"	c	namespace:gnutls	inherits:credentials
gnutls::certificate_credentials::certificate_credentials	/usr/include/gnutls/gnutlsxx.h	/^    certificate_credentials ();$/;"	p	class:gnutls::certificate_credentials	access:public	signature:()
gnutls::certificate_credentials::cred	/usr/include/gnutls/gnutlsxx.h	/^      gnutls_certificate_credentials_t cred;$/;"	m	class:gnutls::certificate_credentials	access:protected
gnutls::certificate_credentials::free_ca_names	/usr/include/gnutls/gnutlsxx.h	/^    void free_ca_names ();$/;"	p	class:gnutls::certificate_credentials	access:public	signature:()
gnutls::certificate_credentials::free_cas	/usr/include/gnutls/gnutlsxx.h	/^    void free_cas ();$/;"	p	class:gnutls::certificate_credentials	access:public	signature:()
gnutls::certificate_credentials::free_crls	/usr/include/gnutls/gnutlsxx.h	/^    void free_crls ();$/;"	p	class:gnutls::certificate_credentials	access:public	signature:()
gnutls::certificate_credentials::free_keys	/usr/include/gnutls/gnutlsxx.h	/^    void free_keys ();$/;"	p	class:gnutls::certificate_credentials	access:public	signature:()
gnutls::certificate_credentials::set_dh_params	/usr/include/gnutls/gnutlsxx.h	/^    void set_dh_params (const dh_params & params);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const dh_params & params)
gnutls::certificate_credentials::set_retrieve_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_retrieve_function (gnutls_certificate_retrieve_function * func);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(gnutls_certificate_retrieve_function * func)
gnutls::certificate_credentials::set_rsa_export_params	/usr/include/gnutls/gnutlsxx.h	/^    void set_rsa_export_params (const rsa_params & params);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const rsa_params & params)
gnutls::certificate_credentials::set_simple_pkcs12_file	/usr/include/gnutls/gnutlsxx.h	/^    void set_simple_pkcs12_file (const char *pkcs12file,$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const char *pkcs12file, gnutls_x509_crt_fmt_t type, const char *password)
gnutls::certificate_credentials::set_verify_flags	/usr/include/gnutls/gnutlsxx.h	/^    void set_verify_flags (unsigned int flags);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(unsigned int flags)
gnutls::certificate_credentials::set_verify_limits	/usr/include/gnutls/gnutlsxx.h	/^    void set_verify_limits (unsigned int max_bits, unsigned int max_depth);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(unsigned int max_bits, unsigned int max_depth)
gnutls::certificate_credentials::set_x509_crl	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_crl (const gnutls_datum_t & CRL,$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const gnutls_datum_t & CRL, gnutls_x509_crt_fmt_t type)
gnutls::certificate_credentials::set_x509_crl	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_crl (gnutls_x509_crl_t * crl_list, int crl_list_size);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(gnutls_x509_crl_t * crl_list, int crl_list_size)
gnutls::certificate_credentials::set_x509_crl_file	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_crl_file (const char *crlfile, gnutls_x509_crt_fmt_t type);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const char *crlfile, gnutls_x509_crt_fmt_t type)
gnutls::certificate_credentials::set_x509_key	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_key (const gnutls_datum_t & CERT,$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const gnutls_datum_t & CERT, const gnutls_datum_t & KEY, gnutls_x509_crt_fmt_t type)
gnutls::certificate_credentials::set_x509_key	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_key (gnutls_x509_crt_t * cert_list, int cert_list_size,$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(gnutls_x509_crt_t * cert_list, int cert_list_size, gnutls_x509_privkey_t key)
gnutls::certificate_credentials::set_x509_key_file	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_key_file (const char *certfile, const char *KEYFILE,$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const char *certfile, const char *KEYFILE, gnutls_x509_crt_fmt_t type)
gnutls::certificate_credentials::set_x509_trust	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_trust (const gnutls_datum_t & CA,$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const gnutls_datum_t & CA, gnutls_x509_crt_fmt_t type)
gnutls::certificate_credentials::set_x509_trust	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_trust (gnutls_x509_crt_t * ca_list, int ca_list_size);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(gnutls_x509_crt_t * ca_list, int ca_list_size)
gnutls::certificate_credentials::set_x509_trust_file	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_trust_file (const char *cafile, gnutls_x509_crt_fmt_t type);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const char *cafile, gnutls_x509_crt_fmt_t type)
gnutls::certificate_credentials::~certificate_credentials	/usr/include/gnutls/gnutlsxx.h	/^    ~certificate_credentials ();$/;"	p	class:gnutls::certificate_credentials	access:public	signature:()
gnutls::certificate_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class certificate_server_credentials:public certificate_credentials$/;"	c	namespace:gnutls	inherits:certificate_credentials
gnutls::certificate_server_credentials::set_params_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_params_function (gnutls_params_function * func);$/;"	p	class:gnutls::certificate_server_credentials	access:public	signature:(gnutls_params_function * func)
gnutls::client_session	/usr/include/gnutls/gnutlsxx.h	/^  class client_session:public session$/;"	c	namespace:gnutls	inherits:session
gnutls::client_session::client_session	/usr/include/gnutls/gnutlsxx.h	/^    client_session ();$/;"	p	class:gnutls::client_session	access:public	signature:()
gnutls::client_session::get_request_status	/usr/include/gnutls/gnutlsxx.h	/^    bool get_request_status ();$/;"	p	class:gnutls::client_session	access:public	signature:()
gnutls::client_session::set_server_name	/usr/include/gnutls/gnutlsxx.h	/^    void set_server_name (gnutls_server_name_type_t type,$/;"	p	class:gnutls::client_session	access:public	signature:(gnutls_server_name_type_t type, const void *name, size_t name_length)
gnutls::client_session::~client_session	/usr/include/gnutls/gnutlsxx.h	/^    ~client_session ();$/;"	p	class:gnutls::client_session	access:public	signature:()
gnutls::credentials	/usr/include/gnutls/gnutlsxx.h	/^  class credentials:private noncopyable$/;"	c	namespace:gnutls	inherits:noncopyable
gnutls::credentials::cred	/usr/include/gnutls/gnutlsxx.h	/^    void *cred;$/;"	m	class:gnutls::credentials	access:private
gnutls::credentials::credentials	/usr/include/gnutls/gnutlsxx.h	/^    credentials (gnutls_credentials_type_t t);$/;"	p	class:gnutls::credentials	access:protected	signature:(gnutls_credentials_type_t t)
gnutls::credentials::get_type	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_credentials_type_t get_type () const;$/;"	p	class:gnutls::credentials	access:public	signature:() const
gnutls::credentials::ptr	/usr/include/gnutls/gnutlsxx.h	/^    void *ptr () const;$/;"	p	class:gnutls::credentials	access:protected	signature:() const
gnutls::credentials::set_ptr	/usr/include/gnutls/gnutlsxx.h	/^    void set_ptr (void *ptr);$/;"	p	class:gnutls::credentials	access:protected	signature:(void *ptr)
gnutls::credentials::type	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_credentials_type_t type;$/;"	m	class:gnutls::credentials	access:protected
gnutls::credentials::~credentials	/usr/include/gnutls/gnutlsxx.h	/^    virtual ~ credentials ()$/;"	f	class:gnutls::credentials	access:public	signature:()
gnutls::dh_params	/usr/include/gnutls/gnutlsxx.h	/^  class dh_params:private noncopyable$/;"	c	namespace:gnutls	inherits:noncopyable
gnutls::dh_params::dh_params	/usr/include/gnutls/gnutlsxx.h	/^    dh_params ();$/;"	p	class:gnutls::dh_params	access:public	signature:()
gnutls::dh_params::export_pkcs3	/usr/include/gnutls/gnutlsxx.h	/^    void export_pkcs3 (gnutls_x509_crt_fmt_t format,$/;"	p	class:gnutls::dh_params	access:public	signature:(gnutls_x509_crt_fmt_t format, unsigned char *params_data, size_t * params_data_size)
gnutls::dh_params::export_raw	/usr/include/gnutls/gnutlsxx.h	/^    void export_raw (gnutls_datum_t & prime, gnutls_datum_t & generator);$/;"	p	class:gnutls::dh_params	access:public	signature:(gnutls_datum_t & prime, gnutls_datum_t & generator)
gnutls::dh_params::generate	/usr/include/gnutls/gnutlsxx.h	/^    void generate (unsigned int bits);$/;"	p	class:gnutls::dh_params	access:public	signature:(unsigned int bits)
gnutls::dh_params::get_params_t	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_dh_params_t get_params_t () const;$/;"	p	class:gnutls::dh_params	access:public	signature:() const
gnutls::dh_params::import_pkcs3	/usr/include/gnutls/gnutlsxx.h	/^    void import_pkcs3 (const gnutls_datum_t & pkcs3_params,$/;"	p	class:gnutls::dh_params	access:public	signature:(const gnutls_datum_t & pkcs3_params, gnutls_x509_crt_fmt_t format)
gnutls::dh_params::import_raw	/usr/include/gnutls/gnutlsxx.h	/^    void import_raw (const gnutls_datum_t & prime,$/;"	p	class:gnutls::dh_params	access:public	signature:(const gnutls_datum_t & prime, const gnutls_datum_t & generator)
gnutls::dh_params::operator =	/usr/include/gnutls/gnutlsxx.h	/^      dh_params & operator= (const dh_params & src);$/;"	p	class:gnutls::dh_params	access:public	signature:(const dh_params & src)
gnutls::dh_params::params	/usr/include/gnutls/gnutlsxx.h	/^      gnutls_dh_params_t params;$/;"	m	class:gnutls::dh_params	access:protected
gnutls::dh_params::~dh_params	/usr/include/gnutls/gnutlsxx.h	/^    ~dh_params ();$/;"	p	class:gnutls::dh_params	access:public	signature:()
gnutls::exception	/usr/include/gnutls/gnutlsxx.h	/^  class exception:public std::exception$/;"	c	namespace:gnutls	inherits:std::exception
gnutls::exception::exception	/usr/include/gnutls/gnutlsxx.h	/^    exception (int x);$/;"	p	class:gnutls::exception	access:public	signature:(int x)
gnutls::exception::get_code	/usr/include/gnutls/gnutlsxx.h	/^    int get_code ();$/;"	p	class:gnutls::exception	access:public	signature:()
gnutls::exception::retcode	/usr/include/gnutls/gnutlsxx.h	/^    int retcode;$/;"	m	class:gnutls::exception	access:protected
gnutls::exception::what	/usr/include/gnutls/gnutlsxx.h	/^    const char *what () const throw ();$/;"	p	class:gnutls::exception	access:public	signature:() const
gnutls::noncopyable	/usr/include/gnutls/gnutlsxx.h	/^  class noncopyable$/;"	c	namespace:gnutls
gnutls::noncopyable::noncopyable	/usr/include/gnutls/gnutlsxx.h	/^      noncopyable (const noncopyable &);$/;"	p	class:gnutls::noncopyable	access:private	signature:(const noncopyable &)
gnutls::noncopyable::noncopyable	/usr/include/gnutls/gnutlsxx.h	/^    noncopyable ()$/;"	f	class:gnutls::noncopyable	access:protected	signature:()
gnutls::noncopyable::operator =	/usr/include/gnutls/gnutlsxx.h	/^    noncopyable & operator= (const noncopyable &);$/;"	p	class:gnutls::noncopyable	access:private	signature:(const noncopyable &)
gnutls::noncopyable::~noncopyable	/usr/include/gnutls/gnutlsxx.h	/^     ~noncopyable ()$/;"	f	class:gnutls::noncopyable	access:protected	signature:()
gnutls::psk_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class psk_client_credentials:public credentials$/;"	c	namespace:gnutls	inherits:credentials
gnutls::psk_client_credentials::cred	/usr/include/gnutls/gnutlsxx.h	/^      gnutls_psk_client_credentials_t cred;$/;"	m	class:gnutls::psk_client_credentials	access:protected
gnutls::psk_client_credentials::psk_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^    psk_client_credentials ();$/;"	p	class:gnutls::psk_client_credentials	access:public	signature:()
gnutls::psk_client_credentials::set_credentials	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials (const char *username, const gnutls_datum_t & key,$/;"	p	class:gnutls::psk_client_credentials	access:public	signature:(const char *username, const gnutls_datum_t & key, gnutls_psk_key_flags flags)
gnutls::psk_client_credentials::set_credentials_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials_function (gnutls_psk_client_credentials_function *$/;"	p	class:gnutls::psk_client_credentials	access:public	signature:(gnutls_psk_client_credentials_function * func)
gnutls::psk_client_credentials::~psk_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^    ~psk_client_credentials ();$/;"	p	class:gnutls::psk_client_credentials	access:public	signature:()
gnutls::psk_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class psk_server_credentials:public credentials$/;"	c	namespace:gnutls	inherits:credentials
gnutls::psk_server_credentials::cred	/usr/include/gnutls/gnutlsxx.h	/^      gnutls_psk_server_credentials_t cred;$/;"	m	class:gnutls::psk_server_credentials	access:protected
gnutls::psk_server_credentials::psk_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^    psk_server_credentials ();$/;"	p	class:gnutls::psk_server_credentials	access:public	signature:()
gnutls::psk_server_credentials::set_credentials_file	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials_file (const char *password_file);$/;"	p	class:gnutls::psk_server_credentials	access:public	signature:(const char *password_file)
gnutls::psk_server_credentials::set_credentials_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials_function (gnutls_psk_server_credentials_function *$/;"	p	class:gnutls::psk_server_credentials	access:public	signature:(gnutls_psk_server_credentials_function * func)
gnutls::psk_server_credentials::set_dh_params	/usr/include/gnutls/gnutlsxx.h	/^    void set_dh_params (const dh_params & params);$/;"	p	class:gnutls::psk_server_credentials	access:public	signature:(const dh_params & params)
gnutls::psk_server_credentials::set_params_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_params_function (gnutls_params_function * func);$/;"	p	class:gnutls::psk_server_credentials	access:public	signature:(gnutls_params_function * func)
gnutls::psk_server_credentials::~psk_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^    ~psk_server_credentials ();$/;"	p	class:gnutls::psk_server_credentials	access:public	signature:()
gnutls::rsa_params	/usr/include/gnutls/gnutlsxx.h	/^  class rsa_params:private noncopyable$/;"	c	namespace:gnutls	inherits:noncopyable
gnutls::rsa_params::export_pkcs1	/usr/include/gnutls/gnutlsxx.h	/^    void export_pkcs1 (gnutls_x509_crt_fmt_t format,$/;"	p	class:gnutls::rsa_params	access:public	signature:(gnutls_x509_crt_fmt_t format, unsigned char *params_data, size_t * params_data_size)
gnutls::rsa_params::export_raw	/usr/include/gnutls/gnutlsxx.h	/^    void export_raw (gnutls_datum_t & m, gnutls_datum_t & e,$/;"	p	class:gnutls::rsa_params	access:public	signature:(gnutls_datum_t & m, gnutls_datum_t & e, gnutls_datum_t & d, gnutls_datum_t & p, gnutls_datum_t & q, gnutls_datum_t & u)
gnutls::rsa_params::generate	/usr/include/gnutls/gnutlsxx.h	/^    void generate (unsigned int bits);$/;"	p	class:gnutls::rsa_params	access:public	signature:(unsigned int bits)
gnutls::rsa_params::get_params_t	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_rsa_params_t get_params_t () const;$/;"	p	class:gnutls::rsa_params	access:public	signature:() const
gnutls::rsa_params::import_pkcs1	/usr/include/gnutls/gnutlsxx.h	/^    void import_pkcs1 (const gnutls_datum_t & pkcs1_params,$/;"	p	class:gnutls::rsa_params	access:public	signature:(const gnutls_datum_t & pkcs1_params, gnutls_x509_crt_fmt_t format)
gnutls::rsa_params::import_raw	/usr/include/gnutls/gnutlsxx.h	/^    void import_raw (const gnutls_datum_t & m,$/;"	p	class:gnutls::rsa_params	access:public	signature:(const gnutls_datum_t & m, const gnutls_datum_t & e, const gnutls_datum_t & d, const gnutls_datum_t & p, const gnutls_datum_t & q, const gnutls_datum_t & u)
gnutls::rsa_params::operator =	/usr/include/gnutls/gnutlsxx.h	/^      rsa_params & operator= (const rsa_params & src);$/;"	p	class:gnutls::rsa_params	access:public	signature:(const rsa_params & src)
gnutls::rsa_params::params	/usr/include/gnutls/gnutlsxx.h	/^      gnutls_rsa_params_t params;$/;"	m	class:gnutls::rsa_params	access:protected
gnutls::rsa_params::rsa_params	/usr/include/gnutls/gnutlsxx.h	/^    rsa_params ();$/;"	p	class:gnutls::rsa_params	access:public	signature:()
gnutls::rsa_params::~rsa_params	/usr/include/gnutls/gnutlsxx.h	/^    ~rsa_params ();$/;"	p	class:gnutls::rsa_params	access:public	signature:()
gnutls::server_session	/usr/include/gnutls/gnutlsxx.h	/^  class server_session:public session$/;"	c	namespace:gnutls	inherits:session
gnutls::server_session::db_check_entry	/usr/include/gnutls/gnutlsxx.h	/^    bool db_check_entry (gnutls_datum_t & session_data) const;$/;"	p	class:gnutls::server_session	access:public	signature:(gnutls_datum_t & session_data) const
gnutls::server_session::db_remove	/usr/include/gnutls/gnutlsxx.h	/^    void db_remove () const;$/;"	p	class:gnutls::server_session	access:public	signature:() const
gnutls::server_session::get_psk_username	/usr/include/gnutls/gnutlsxx.h	/^    const char *get_psk_username () const;$/;"	p	class:gnutls::server_session	access:public	signature:() const
gnutls::server_session::get_server_name	/usr/include/gnutls/gnutlsxx.h	/^    void get_server_name (void *data, size_t * data_length,$/;"	p	class:gnutls::server_session	access:public	signature:(void *data, size_t * data_length, unsigned int *type, unsigned int indx) const
gnutls::server_session::get_srp_username	/usr/include/gnutls/gnutlsxx.h	/^    const char *get_srp_username () const;$/;"	p	class:gnutls::server_session	access:public	signature:() const
gnutls::server_session::rehandshake	/usr/include/gnutls/gnutlsxx.h	/^    int rehandshake ();$/;"	p	class:gnutls::server_session	access:public	signature:()
gnutls::server_session::server_session	/usr/include/gnutls/gnutlsxx.h	/^    server_session ();$/;"	p	class:gnutls::server_session	access:public	signature:()
gnutls::server_session::set_certificate_request	/usr/include/gnutls/gnutlsxx.h	/^    void set_certificate_request (gnutls_certificate_request_t);$/;"	p	class:gnutls::server_session	access:public	signature:(gnutls_certificate_request_t)
gnutls::server_session::set_db	/usr/include/gnutls/gnutlsxx.h	/^    void set_db (const DB & db);$/;"	p	class:gnutls::server_session	access:public	signature:(const DB & db)
gnutls::server_session::set_db_cache_expiration	/usr/include/gnutls/gnutlsxx.h	/^    void set_db_cache_expiration (unsigned int seconds);$/;"	p	class:gnutls::server_session	access:public	signature:(unsigned int seconds)
gnutls::server_session::~server_session	/usr/include/gnutls/gnutlsxx.h	/^    ~server_session ();$/;"	p	class:gnutls::server_session	access:public	signature:()
gnutls::session	/usr/include/gnutls/gnutlsxx.h	/^  class session:private noncopyable$/;"	c	namespace:gnutls	inherits:noncopyable
gnutls::session::bye	/usr/include/gnutls/gnutlsxx.h	/^    int bye (gnutls_close_request_t how);$/;"	p	class:gnutls::session	access:public	signature:(gnutls_close_request_t how)
gnutls::session::check_pending	/usr/include/gnutls/gnutlsxx.h	/^    size_t check_pending () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::clear_credentials	/usr/include/gnutls/gnutlsxx.h	/^    void clear_credentials ();$/;"	p	class:gnutls::session	access:public	signature:()
gnutls::session::get_alert	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_alert_description_t get_alert () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_auth_type	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_credentials_type_t get_auth_type () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_certificate_type	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_certificate_type_t get_certificate_type () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_cipher	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_cipher_algorithm_t get_cipher () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_client_auth_type	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_credentials_type_t get_client_auth_type () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_compression	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_compression_method_t get_compression () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_data	/usr/include/gnutls/gnutlsxx.h	/^    void get_data (gnutls_session_t session, gnutls_datum_t & data) const;$/;"	p	class:gnutls::session	access:public	signature:(gnutls_session_t session, gnutls_datum_t & data) const
gnutls::session::get_data	/usr/include/gnutls/gnutlsxx.h	/^    void get_data (void *session_data, size_t * session_data_size) const;$/;"	p	class:gnutls::session	access:public	signature:(void *session_data, size_t * session_data_size) const
gnutls::session::get_dh_group	/usr/include/gnutls/gnutlsxx.h	/^    void get_dh_group (gnutls_datum_t & gen, gnutls_datum_t & prime) const;$/;"	p	class:gnutls::session	access:public	signature:(gnutls_datum_t & gen, gnutls_datum_t & prime) const
gnutls::session::get_dh_peers_public_bits	/usr/include/gnutls/gnutlsxx.h	/^    unsigned int get_dh_peers_public_bits () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_dh_prime_bits	/usr/include/gnutls/gnutlsxx.h	/^    unsigned int get_dh_prime_bits () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_dh_pubkey	/usr/include/gnutls/gnutlsxx.h	/^    void get_dh_pubkey (gnutls_datum_t & raw_key) const;$/;"	p	class:gnutls::session	access:public	signature:(gnutls_datum_t & raw_key) const
gnutls::session::get_dh_secret_bits	/usr/include/gnutls/gnutlsxx.h	/^    unsigned int get_dh_secret_bits () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_handshake_last_in	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_handshake_description_t get_handshake_last_in () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_handshake_last_out	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_handshake_description_t get_handshake_last_out () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_id	/usr/include/gnutls/gnutlsxx.h	/^    void get_id (void *session_id, size_t * session_id_size) const;$/;"	p	class:gnutls::session	access:public	signature:(void *session_id, size_t * session_id_size) const
gnutls::session::get_kx	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_kx_algorithm_t get_kx () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_mac	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_mac_algorithm_t get_mac () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_max_size	/usr/include/gnutls/gnutlsxx.h	/^    size_t get_max_size () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_our_certificate	/usr/include/gnutls/gnutlsxx.h	/^    void get_our_certificate (gnutls_datum_t & cert) const;$/;"	p	class:gnutls::session	access:public	signature:(gnutls_datum_t & cert) const
gnutls::session::get_peers_certificate	/usr/include/gnutls/gnutlsxx.h	/^    bool get_peers_certificate (const gnutls_datum_t ** certs,$/;"	p	class:gnutls::session	access:public	signature:(const gnutls_datum_t ** certs, unsigned int *certs_size) const
gnutls::session::get_peers_certificate	/usr/include/gnutls/gnutlsxx.h	/^    bool get_peers_certificate (std::vector < gnutls_datum_t >$/;"	p	class:gnutls::session	access:public	signature:(std::vector < gnutls_datum_t > &out_certs) const
gnutls::session::get_peers_certificate_activation_time	/usr/include/gnutls/gnutlsxx.h	/^    time_t get_peers_certificate_activation_time () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_peers_certificate_expiration_time	/usr/include/gnutls/gnutlsxx.h	/^    time_t get_peers_certificate_expiration_time () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_protocol_version	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_protocol_t get_protocol_version () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_record_direction	/usr/include/gnutls/gnutlsxx.h	/^    bool get_record_direction () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_rsa_export_modulus_bits	/usr/include/gnutls/gnutlsxx.h	/^    unsigned int get_rsa_export_modulus_bits () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_rsa_export_pubkey	/usr/include/gnutls/gnutlsxx.h	/^    void get_rsa_export_pubkey (gnutls_datum_t & exponent,$/;"	p	class:gnutls::session	access:public	signature:(gnutls_datum_t & exponent, gnutls_datum_t & modulus) const
gnutls::session::get_server_auth_type	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_credentials_type_t get_server_auth_type () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_transport_ptr	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_transport_ptr_t get_transport_ptr () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::get_transport_ptr	/usr/include/gnutls/gnutlsxx.h	/^    void get_transport_ptr (gnutls_transport_ptr_t & recv_ptr,$/;"	p	class:gnutls::session	access:public	signature:(gnutls_transport_ptr_t & recv_ptr, gnutls_transport_ptr_t & send_ptr) const
gnutls::session::get_user_ptr	/usr/include/gnutls/gnutlsxx.h	/^    void *get_user_ptr () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::handshake	/usr/include/gnutls/gnutlsxx.h	/^    int handshake ();$/;"	p	class:gnutls::session	access:public	signature:()
gnutls::session::is_resumed	/usr/include/gnutls/gnutlsxx.h	/^    bool is_resumed () const;$/;"	p	class:gnutls::session	access:public	signature:() const
gnutls::session::prf	/usr/include/gnutls/gnutlsxx.h	/^    void prf (size_t label_size, const char *label,$/;"	p	class:gnutls::session	access:public	signature:(size_t label_size, const char *label, int server_random_first, size_t extra_size, const char *extra, size_t outsize, char *out)
gnutls::session::prf_raw	/usr/include/gnutls/gnutlsxx.h	/^    void prf_raw (size_t label_size, const char *label,$/;"	p	class:gnutls::session	access:public	signature:(size_t label_size, const char *label, size_t seed_size, const char *seed, size_t outsize, char *out)
gnutls::session::recv	/usr/include/gnutls/gnutlsxx.h	/^    ssize_t recv (void *data, size_t sizeofdata);$/;"	p	class:gnutls::session	access:public	signature:(void *data, size_t sizeofdata)
gnutls::session::s	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_session_t s;$/;"	m	class:gnutls::session	access:protected
gnutls::session::send	/usr/include/gnutls/gnutlsxx.h	/^    ssize_t send (const void *data, size_t sizeofdata);$/;"	p	class:gnutls::session	access:public	signature:(const void *data, size_t sizeofdata)
gnutls::session::send_alert	/usr/include/gnutls/gnutlsxx.h	/^    int send_alert (gnutls_alert_level_t level,$/;"	p	class:gnutls::session	access:public	signature:(gnutls_alert_level_t level, gnutls_alert_description_t desc)
gnutls::session::send_appropriate_alert	/usr/include/gnutls/gnutlsxx.h	/^    int send_appropriate_alert (int err);$/;"	p	class:gnutls::session	access:public	signature:(int err)
gnutls::session::send_openpgp_cert	/usr/include/gnutls/gnutlsxx.h	/^    void send_openpgp_cert (gnutls_openpgp_crt_status_t status);$/;"	p	class:gnutls::session	access:public	signature:(gnutls_openpgp_crt_status_t status)
gnutls::session::session	/usr/include/gnutls/gnutlsxx.h	/^    session (unsigned int);$/;"	p	class:gnutls::session	access:public	signature:(unsigned int)
gnutls::session::set_credentials	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials (class credentials & cred);$/;"	p	class:gnutls::session	access:public	signature:(class credentials & cred)
gnutls::session::set_data	/usr/include/gnutls/gnutlsxx.h	/^    void set_data (const void *session_data, size_t session_data_size);$/;"	p	class:gnutls::session	access:public	signature:(const void *session_data, size_t session_data_size)
gnutls::session::set_dh_prime_bits	/usr/include/gnutls/gnutlsxx.h	/^    void set_dh_prime_bits (unsigned int bits);$/;"	p	class:gnutls::session	access:public	signature:(unsigned int bits)
gnutls::session::set_max_handshake_packet_length	/usr/include/gnutls/gnutlsxx.h	/^    void set_max_handshake_packet_length (size_t max);$/;"	p	class:gnutls::session	access:public	signature:(size_t max)
gnutls::session::set_max_size	/usr/include/gnutls/gnutlsxx.h	/^    void set_max_size (size_t size);$/;"	p	class:gnutls::session	access:public	signature:(size_t size)
gnutls::session::set_priority	/usr/include/gnutls/gnutlsxx.h	/^    void set_priority (const char *prio, const char **err_pos);$/;"	p	class:gnutls::session	access:public	signature:(const char *prio, const char **err_pos)
gnutls::session::set_priority	/usr/include/gnutls/gnutlsxx.h	/^    void set_priority (gnutls_priority_t p);$/;"	p	class:gnutls::session	access:public	signature:(gnutls_priority_t p)
gnutls::session::set_private_extensions	/usr/include/gnutls/gnutlsxx.h	/^    void set_private_extensions (bool allow);$/;"	p	class:gnutls::session	access:public	signature:(bool allow)
gnutls::session::set_transport_lowat	/usr/include/gnutls/gnutlsxx.h	/^    void set_transport_lowat (size_t num);$/;"	p	class:gnutls::session	access:public	signature:(size_t num)
gnutls::session::set_transport_ptr	/usr/include/gnutls/gnutlsxx.h	/^    void set_transport_ptr (gnutls_transport_ptr_t ptr);$/;"	p	class:gnutls::session	access:public	signature:(gnutls_transport_ptr_t ptr)
gnutls::session::set_transport_ptr	/usr/include/gnutls/gnutlsxx.h	/^    void set_transport_ptr (gnutls_transport_ptr_t recv_ptr,$/;"	p	class:gnutls::session	access:public	signature:(gnutls_transport_ptr_t recv_ptr, gnutls_transport_ptr_t send_ptr)
gnutls::session::set_transport_pull_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_transport_pull_function (gnutls_pull_func pull_func);$/;"	p	class:gnutls::session	access:public	signature:(gnutls_pull_func pull_func)
gnutls::session::set_transport_push_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_transport_push_function (gnutls_push_func push_func);$/;"	p	class:gnutls::session	access:public	signature:(gnutls_push_func push_func)
gnutls::session::set_user_ptr	/usr/include/gnutls/gnutlsxx.h	/^    void set_user_ptr (void *ptr);$/;"	p	class:gnutls::session	access:public	signature:(void *ptr)
gnutls::session::verify_peers_certificate	/usr/include/gnutls/gnutlsxx.h	/^    void verify_peers_certificate (unsigned int &status) const;$/;"	p	class:gnutls::session	access:public	signature:(unsigned int &status) const
gnutls::session::~session	/usr/include/gnutls/gnutlsxx.h	/^    virtual ~ session ();$/;"	p	class:gnutls::session	access:public	signature:()
gnutls::srp_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class srp_client_credentials:public credentials$/;"	c	namespace:gnutls	inherits:credentials
gnutls::srp_client_credentials::cred	/usr/include/gnutls/gnutlsxx.h	/^      gnutls_srp_client_credentials_t cred;$/;"	m	class:gnutls::srp_client_credentials	access:protected
gnutls::srp_client_credentials::set_credentials	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials (const char *username, const char *password);$/;"	p	class:gnutls::srp_client_credentials	access:public	signature:(const char *username, const char *password)
gnutls::srp_client_credentials::set_credentials_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials_function (gnutls_srp_client_credentials_function *$/;"	p	class:gnutls::srp_client_credentials	access:public	signature:(gnutls_srp_client_credentials_function * func)
gnutls::srp_client_credentials::srp_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^    srp_client_credentials ();$/;"	p	class:gnutls::srp_client_credentials	access:public	signature:()
gnutls::srp_client_credentials::~srp_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^    ~srp_client_credentials ();$/;"	p	class:gnutls::srp_client_credentials	access:public	signature:()
gnutls::srp_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class srp_server_credentials:public credentials$/;"	c	namespace:gnutls	inherits:credentials
gnutls::srp_server_credentials::cred	/usr/include/gnutls/gnutlsxx.h	/^      gnutls_srp_server_credentials_t cred;$/;"	m	class:gnutls::srp_server_credentials	access:protected
gnutls::srp_server_credentials::set_credentials_file	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials_file (const char *password_file,$/;"	p	class:gnutls::srp_server_credentials	access:public	signature:(const char *password_file, const char *password_conf_file)
gnutls::srp_server_credentials::set_credentials_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials_function (gnutls_srp_server_credentials_function *$/;"	p	class:gnutls::srp_server_credentials	access:public	signature:(gnutls_srp_server_credentials_function * func)
gnutls::srp_server_credentials::srp_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^    srp_server_credentials ();$/;"	p	class:gnutls::srp_server_credentials	access:public	signature:()
gnutls::srp_server_credentials::~srp_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^    ~srp_server_credentials ();$/;"	p	class:gnutls::srp_server_credentials	access:public	signature:()
gnutls_alert_description	/usr/include/gnutls/compat.h	74;"	d
gnutls_alert_description_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_alert_description_t;$/;"	t	typeref:enum:__anon8
gnutls_alert_get	/usr/include/gnutls/gnutls.h	/^  gnutls_alert_description_t gnutls_alert_get (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_alert_get_name	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_alert_get_name (gnutls_alert_description_t alert);$/;"	p	signature:(gnutls_alert_description_t alert)
gnutls_alert_get_strname	/usr/include/gnutls/gnutls.h	/^  const char * gnutls_alert_get_strname (gnutls_alert_description_t alert);$/;"	p	signature:(gnutls_alert_description_t alert)
gnutls_alert_level	/usr/include/gnutls/compat.h	73;"	d
gnutls_alert_level_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_alert_level_t;$/;"	t	typeref:enum:__anon7
gnutls_alert_send	/usr/include/gnutls/gnutls.h	/^  int gnutls_alert_send (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_alert_level_t level, gnutls_alert_description_t desc)
gnutls_alert_send_appropriate	/usr/include/gnutls/gnutls.h	/^  int gnutls_alert_send_appropriate (gnutls_session_t session, int err);$/;"	p	signature:(gnutls_session_t session, int err)
gnutls_alloc_function	/usr/include/gnutls/gnutls.h	/^  typedef void *(*gnutls_alloc_function) (size_t);$/;"	t
gnutls_anon_allocate_client_credentials	/usr/include/gnutls/gnutls.h	/^    gnutls_anon_allocate_client_credentials (gnutls_anon_client_credentials_t$/;"	p	signature:(gnutls_anon_client_credentials_t * sc)
gnutls_anon_allocate_server_credentials	/usr/include/gnutls/gnutls.h	/^    gnutls_anon_allocate_server_credentials (gnutls_anon_server_credentials_t$/;"	p	signature:(gnutls_anon_server_credentials_t * sc)
gnutls_anon_client_credentials	/usr/include/gnutls/compat.h	90;"	d
gnutls_anon_client_credentials_t	/usr/include/gnutls/gnutls.h	/^    *gnutls_anon_client_credentials_t;$/;"	t	typeref:struct:gnutls_anon_client_credentials_st
gnutls_anon_free_client_credentials	/usr/include/gnutls/gnutls.h	/^    gnutls_anon_free_client_credentials (gnutls_anon_client_credentials_t sc);$/;"	p	signature:(gnutls_anon_client_credentials_t sc)
gnutls_anon_free_server_credentials	/usr/include/gnutls/gnutls.h	/^  void gnutls_anon_free_server_credentials (gnutls_anon_server_credentials_t$/;"	p	signature:(gnutls_anon_server_credentials_t sc)
gnutls_anon_server_credentials	/usr/include/gnutls/compat.h	89;"	d
gnutls_anon_server_credentials_t	/usr/include/gnutls/gnutls.h	/^    *gnutls_anon_server_credentials_t;$/;"	t	typeref:struct:gnutls_anon_server_credentials_st
gnutls_anon_set_params_function	/usr/include/gnutls/gnutls.h	/^  void gnutls_anon_set_params_function (gnutls_anon_server_credentials_t res,$/;"	p	signature:(gnutls_anon_server_credentials_t res, gnutls_params_function * func)
gnutls_anon_set_server_dh_params	/usr/include/gnutls/gnutls.h	/^  void gnutls_anon_set_server_dh_params (gnutls_anon_server_credentials_t res,$/;"	p	signature:(gnutls_anon_server_credentials_t res, gnutls_dh_params_t dh_params)
gnutls_anon_set_server_params_function	/usr/include/gnutls/gnutls.h	/^    gnutls_anon_set_server_params_function (gnutls_anon_server_credentials_t$/;"	p	signature:(gnutls_anon_server_credentials_t res, gnutls_params_function * func)
gnutls_audit_log_func	/usr/include/gnutls/gnutls.h	/^  typedef void (*gnutls_audit_log_func) (gnutls_session_t, const char *);$/;"	t
gnutls_auth_client_get_type	/usr/include/gnutls/gnutls.h	/^    gnutls_auth_client_get_type (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_auth_get_type	/usr/include/gnutls/gnutls.h	/^  gnutls_credentials_type_t gnutls_auth_get_type (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_auth_server_get_type	/usr/include/gnutls/gnutls.h	/^    gnutls_auth_server_get_type (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_bye	/usr/include/gnutls/gnutls.h	/^  int gnutls_bye (gnutls_session_t session, gnutls_close_request_t how);$/;"	p	signature:(gnutls_session_t session, gnutls_close_request_t how)
gnutls_calloc_function	/usr/include/gnutls/gnutls.h	/^  typedef void *(*gnutls_calloc_function) (size_t, size_t);$/;"	t
gnutls_certificate_activation_time_peers	/usr/include/gnutls/gnutls.h	/^  time_t gnutls_certificate_activation_time_peers (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_certificate_allocate_credentials	/usr/include/gnutls/gnutls.h	/^    gnutls_certificate_allocate_credentials (gnutls_certificate_credentials_t$/;"	p	signature:(gnutls_certificate_credentials_t * res)
gnutls_certificate_client_credentials	/usr/include/gnutls/gnutls.h	/^    gnutls_certificate_client_credentials;$/;"	t
gnutls_certificate_client_get_request_status	/usr/include/gnutls/gnutls.h	/^  int gnutls_certificate_client_get_request_status (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_certificate_client_retrieve_function	/usr/include/gnutls/compat.h	/^typedef int gnutls_certificate_client_retrieve_function (gnutls_session_t,$/;"	t
gnutls_certificate_credentials	/usr/include/gnutls/compat.h	88;"	d
gnutls_certificate_credentials_t	/usr/include/gnutls/gnutls.h	/^    *gnutls_certificate_credentials_t;$/;"	t	typeref:struct:gnutls_certificate_credentials_st
gnutls_certificate_expiration_time_peers	/usr/include/gnutls/gnutls.h	/^  time_t gnutls_certificate_expiration_time_peers (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_certificate_free_ca_names	/usr/include/gnutls/gnutls.h	/^  void gnutls_certificate_free_ca_names (gnutls_certificate_credentials_t sc);$/;"	p	signature:(gnutls_certificate_credentials_t sc)
gnutls_certificate_free_cas	/usr/include/gnutls/gnutls.h	/^  void gnutls_certificate_free_cas (gnutls_certificate_credentials_t sc);$/;"	p	signature:(gnutls_certificate_credentials_t sc)
gnutls_certificate_free_credentials	/usr/include/gnutls/gnutls.h	/^    gnutls_certificate_free_credentials (gnutls_certificate_credentials_t sc);$/;"	p	signature:(gnutls_certificate_credentials_t sc)
gnutls_certificate_free_crls	/usr/include/gnutls/gnutls.h	/^  void gnutls_certificate_free_crls (gnutls_certificate_credentials_t sc);$/;"	p	signature:(gnutls_certificate_credentials_t sc)
gnutls_certificate_free_keys	/usr/include/gnutls/gnutls.h	/^  void gnutls_certificate_free_keys (gnutls_certificate_credentials_t sc);$/;"	p	signature:(gnutls_certificate_credentials_t sc)
gnutls_certificate_get_issuer	/usr/include/gnutls/gnutls.h	/^    gnutls_certificate_get_issuer (gnutls_certificate_credentials_t sc,$/;"	p	signature:(gnutls_certificate_credentials_t sc, gnutls_x509_crt_t cert, gnutls_x509_crt_t* issuer, unsigned int flags)
gnutls_certificate_get_openpgp_keyring	/usr/include/gnutls/gnutls.h	/^    gnutls_certificate_get_openpgp_keyring (gnutls_certificate_credentials_t$/;"	p	signature:(gnutls_certificate_credentials_t sc, gnutls_openpgp_keyring_t * keyring)
gnutls_certificate_get_ours	/usr/include/gnutls/gnutls.h	/^  const gnutls_datum_t *gnutls_certificate_get_ours (gnutls_session_t$/;"	p	signature:(gnutls_session_t session)
gnutls_certificate_get_peers	/usr/include/gnutls/gnutls.h	/^  const gnutls_datum_t *gnutls_certificate_get_peers (gnutls_session_t$/;"	p	signature:(gnutls_session_t session, unsigned int *list_size)
gnutls_certificate_import_flags	/usr/include/gnutls/x509.h	/^  typedef enum gnutls_certificate_import_flags$/;"	g
gnutls_certificate_import_flags	/usr/include/gnutls/x509.h	/^  } gnutls_certificate_import_flags;$/;"	t	typeref:enum:gnutls_certificate_import_flags
gnutls_certificate_print_formats	/usr/include/gnutls/gnutls.h	/^  typedef enum gnutls_certificate_print_formats$/;"	g
gnutls_certificate_print_formats_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_certificate_print_formats_t;$/;"	t	typeref:enum:gnutls_certificate_print_formats
gnutls_certificate_request	/usr/include/gnutls/compat.h	70;"	d
gnutls_certificate_request_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_certificate_request_t;$/;"	t	typeref:enum:__anon11
gnutls_certificate_retrieve_function	/usr/include/gnutls/gnutls.h	/^  typedef int gnutls_certificate_retrieve_function (gnutls_session_t,$/;"	t
gnutls_certificate_retrieve_function2	/usr/include/gnutls/abstract.h	/^  typedef int gnutls_certificate_retrieve_function2 (gnutls_session_t,$/;"	t
gnutls_certificate_send_x509_rdn_sequence	/usr/include/gnutls/gnutls.h	/^  void gnutls_certificate_send_x509_rdn_sequence (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, int status)
gnutls_certificate_server_credentials	/usr/include/gnutls/gnutls.h	/^    gnutls_certificate_server_credentials;$/;"	t
gnutls_certificate_server_retrieve_function	/usr/include/gnutls/compat.h	/^typedef int gnutls_certificate_server_retrieve_function (gnutls_session_t,$/;"	t
gnutls_certificate_server_set_request	/usr/include/gnutls/gnutls.h	/^    gnutls_certificate_server_set_request (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_certificate_request_t req)
gnutls_certificate_set_dh_params	/usr/include/gnutls/gnutls.h	/^  void gnutls_certificate_set_dh_params (gnutls_certificate_credentials_t res,$/;"	p	signature:(gnutls_certificate_credentials_t res, gnutls_dh_params_t dh_params)
gnutls_certificate_set_key	/usr/include/gnutls/abstract.h	/^gnutls_certificate_set_key (gnutls_certificate_credentials_t res,$/;"	p	signature:(gnutls_certificate_credentials_t res, const char** names, int names_size, gnutls_pcert_st * pcert_list, int pcert_list_size, gnutls_privkey_t key)
gnutls_certificate_set_openpgp_key	/usr/include/gnutls/openpgp.h	/^  int gnutls_certificate_set_openpgp_key (gnutls_certificate_credentials_t res,$/;"	p	signature:(gnutls_certificate_credentials_t res, gnutls_openpgp_crt_t crt, gnutls_openpgp_privkey_t pkey)
gnutls_certificate_set_openpgp_key_file	/usr/include/gnutls/openpgp.h	/^    gnutls_certificate_set_openpgp_key_file (gnutls_certificate_credentials_t$/;"	p	signature:(gnutls_certificate_credentials_t res, const char *certfile, const char *keyfile, gnutls_openpgp_crt_fmt_t format)
gnutls_certificate_set_openpgp_key_file2	/usr/include/gnutls/openpgp.h	/^    gnutls_certificate_set_openpgp_key_file2 (gnutls_certificate_credentials_t$/;"	p	signature:(gnutls_certificate_credentials_t res, const char *certfile, const char *keyfile, const char *subkey_id, gnutls_openpgp_crt_fmt_t format)
gnutls_certificate_set_openpgp_key_mem	/usr/include/gnutls/openpgp.h	/^  int gnutls_certificate_set_openpgp_key_mem (gnutls_certificate_credentials_t$/;"	p	signature:(gnutls_certificate_credentials_t res, const gnutls_datum_t * cert, const gnutls_datum_t * key, gnutls_openpgp_crt_fmt_t format)
gnutls_certificate_set_openpgp_key_mem2	/usr/include/gnutls/openpgp.h	/^    gnutls_certificate_set_openpgp_key_mem2 (gnutls_certificate_credentials_t$/;"	p	signature:(gnutls_certificate_credentials_t res, const gnutls_datum_t * cert, const gnutls_datum_t * key, const char *subkey_id, gnutls_openpgp_crt_fmt_t format)
gnutls_certificate_set_openpgp_keyring_file	/usr/include/gnutls/openpgp.h	/^  int gnutls_certificate_set_openpgp_keyring_file ($/;"	p	signature:( gnutls_certificate_credentials_t c, const char *file, gnutls_openpgp_crt_fmt_t format)
gnutls_certificate_set_openpgp_keyring_mem	/usr/include/gnutls/openpgp.h	/^  int gnutls_certificate_set_openpgp_keyring_mem ($/;"	p	signature:( gnutls_certificate_credentials_t c, const unsigned char *data, size_t dlen, gnutls_openpgp_crt_fmt_t format)
gnutls_certificate_set_params_function	/usr/include/gnutls/gnutls.h	/^    gnutls_certificate_set_params_function (gnutls_certificate_credentials_t$/;"	p	signature:(gnutls_certificate_credentials_t res, gnutls_params_function * func)
gnutls_certificate_set_retrieve_function	/usr/include/gnutls/gnutls.h	/^  void gnutls_certificate_set_retrieve_function ($/;"	p	signature:( gnutls_certificate_credentials_t cred, gnutls_certificate_retrieve_function * func)
gnutls_certificate_set_retrieve_function2	/usr/include/gnutls/abstract.h	/^void gnutls_certificate_set_retrieve_function2$/;"	p	signature:(gnutls_certificate_credentials_t cred, gnutls_certificate_retrieve_function2 * func)
gnutls_certificate_set_verify_flags	/usr/include/gnutls/gnutls.h	/^  void gnutls_certificate_set_verify_flags (gnutls_certificate_credentials_t$/;"	p	signature:(gnutls_certificate_credentials_t res, unsigned int flags)
gnutls_certificate_set_verify_function	/usr/include/gnutls/gnutls.h	/^    gnutls_certificate_set_verify_function (gnutls_certificate_credentials_t$/;"	p	signature:(gnutls_certificate_credentials_t cred, gnutls_certificate_verify_function * func)
gnutls_certificate_set_verify_limits	/usr/include/gnutls/gnutls.h	/^  void gnutls_certificate_set_verify_limits (gnutls_certificate_credentials_t$/;"	p	signature:(gnutls_certificate_credentials_t res, unsigned int max_bits, unsigned int max_depth)
gnutls_certificate_set_x509_crl	/usr/include/gnutls/gnutls.h	/^  int gnutls_certificate_set_x509_crl (gnutls_certificate_credentials_t res,$/;"	p	signature:(gnutls_certificate_credentials_t res, gnutls_x509_crl_t * crl_list, int crl_list_size)
gnutls_certificate_set_x509_crl_file	/usr/include/gnutls/gnutls.h	/^    gnutls_certificate_set_x509_crl_file (gnutls_certificate_credentials_t$/;"	p	signature:(gnutls_certificate_credentials_t res, const char *crlfile, gnutls_x509_crt_fmt_t type)
gnutls_certificate_set_x509_crl_mem	/usr/include/gnutls/gnutls.h	/^  int gnutls_certificate_set_x509_crl_mem (gnutls_certificate_credentials_t$/;"	p	signature:(gnutls_certificate_credentials_t res, const gnutls_datum_t * CRL, gnutls_x509_crt_fmt_t type)
gnutls_certificate_set_x509_key	/usr/include/gnutls/gnutls.h	/^  int gnutls_certificate_set_x509_key (gnutls_certificate_credentials_t res,$/;"	p	signature:(gnutls_certificate_credentials_t res, gnutls_x509_crt_t * cert_list, int cert_list_size, gnutls_x509_privkey_t key)
gnutls_certificate_set_x509_key_file	/usr/include/gnutls/gnutls.h	/^    gnutls_certificate_set_x509_key_file (gnutls_certificate_credentials_t$/;"	p	signature:(gnutls_certificate_credentials_t res, const char *certfile, const char *keyfile, gnutls_x509_crt_fmt_t type)
gnutls_certificate_set_x509_key_mem	/usr/include/gnutls/gnutls.h	/^  int gnutls_certificate_set_x509_key_mem (gnutls_certificate_credentials_t$/;"	p	signature:(gnutls_certificate_credentials_t res, const gnutls_datum_t * cert, const gnutls_datum_t * key, gnutls_x509_crt_fmt_t type)
gnutls_certificate_set_x509_simple_pkcs12_file	/usr/include/gnutls/gnutls.h	/^  int gnutls_certificate_set_x509_simple_pkcs12_file$/;"	p	signature:(gnutls_certificate_credentials_t res, const char *pkcs12file, gnutls_x509_crt_fmt_t type, const char *password)
gnutls_certificate_set_x509_simple_pkcs12_mem	/usr/include/gnutls/gnutls.h	/^  int gnutls_certificate_set_x509_simple_pkcs12_mem$/;"	p	signature:(gnutls_certificate_credentials_t res, const gnutls_datum_t * p12blob, gnutls_x509_crt_fmt_t type, const char *password)
gnutls_certificate_set_x509_trust	/usr/include/gnutls/gnutls.h	/^  int gnutls_certificate_set_x509_trust (gnutls_certificate_credentials_t res,$/;"	p	signature:(gnutls_certificate_credentials_t res, gnutls_x509_crt_t * ca_list, int ca_list_size)
gnutls_certificate_set_x509_trust_file	/usr/include/gnutls/gnutls.h	/^    gnutls_certificate_set_x509_trust_file (gnutls_certificate_credentials_t$/;"	p	signature:(gnutls_certificate_credentials_t cred, const char *cafile, gnutls_x509_crt_fmt_t type)
gnutls_certificate_set_x509_trust_mem	/usr/include/gnutls/gnutls.h	/^  int gnutls_certificate_set_x509_trust_mem (gnutls_certificate_credentials_t$/;"	p	signature:(gnutls_certificate_credentials_t res, const gnutls_datum_t * ca, gnutls_x509_crt_fmt_t type)
gnutls_certificate_status	/usr/include/gnutls/compat.h	71;"	d
gnutls_certificate_status_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_certificate_status_t;$/;"	t	typeref:enum:__anon10
gnutls_certificate_type	/usr/include/gnutls/compat.h	97;"	d
gnutls_certificate_type_get	/usr/include/gnutls/gnutls.h	/^    gnutls_certificate_type_get (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_certificate_type_get_id	/usr/include/gnutls/gnutls.h	/^  gnutls_certificate_type_t gnutls_certificate_type_get_id (const char *name);$/;"	p	signature:(const char *name)
gnutls_certificate_type_get_name	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_certificate_type_get_name (gnutls_certificate_type_t$/;"	p	signature:(gnutls_certificate_type_t type)
gnutls_certificate_type_list	/usr/include/gnutls/gnutls.h	/^  const gnutls_certificate_type_t *gnutls_certificate_type_list (void);$/;"	p	signature:(void)
gnutls_certificate_type_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_certificate_type_t;$/;"	t	typeref:enum:__anon15
gnutls_certificate_verify_flags	/usr/include/gnutls/x509.h	/^  typedef enum gnutls_certificate_verify_flags$/;"	g
gnutls_certificate_verify_flags	/usr/include/gnutls/x509.h	/^  } gnutls_certificate_verify_flags;$/;"	t	typeref:enum:gnutls_certificate_verify_flags
gnutls_certificate_verify_function	/usr/include/gnutls/gnutls.h	/^  typedef int gnutls_certificate_verify_function (gnutls_session_t);$/;"	t
gnutls_certificate_verify_peers2	/usr/include/gnutls/gnutls.h	/^  int gnutls_certificate_verify_peers2 (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, unsigned int *status)
gnutls_certificateype	/usr/include/gnutls/compat.h	61;"	d
gnutls_channel_binding_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_channel_binding_t;$/;"	t	typeref:enum:__anon21
gnutls_check_version	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_check_version (const char *req_version);$/;"	p	signature:(const char *req_version)
gnutls_cipher_add_auth	/usr/include/gnutls/crypto.h	/^  int gnutls_cipher_add_auth( gnutls_cipher_hd_t handle, const void* text, size_t text_size);$/;"	p	signature:( gnutls_cipher_hd_t handle, const void* text, size_t text_size)
gnutls_cipher_algorithm	/usr/include/gnutls/compat.h	53;"	d
gnutls_cipher_algorithm	/usr/include/gnutls/gnutls.h	/^  typedef enum gnutls_cipher_algorithm$/;"	g
gnutls_cipher_algorithm_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_cipher_algorithm_t;$/;"	t	typeref:enum:gnutls_cipher_algorithm
gnutls_cipher_decrypt	/usr/include/gnutls/crypto.h	/^  int gnutls_cipher_decrypt (const gnutls_cipher_hd_t handle,$/;"	p	signature:(const gnutls_cipher_hd_t handle, void *ciphertext, size_t ciphertextlen)
gnutls_cipher_decrypt2	/usr/include/gnutls/crypto.h	/^  int gnutls_cipher_decrypt2 (gnutls_cipher_hd_t handle,$/;"	p	signature:(gnutls_cipher_hd_t handle, const void *ciphertext, size_t ciphertextlen, void *text, size_t textlen)
gnutls_cipher_deinit	/usr/include/gnutls/crypto.h	/^  void gnutls_cipher_deinit (gnutls_cipher_hd_t handle);$/;"	p	signature:(gnutls_cipher_hd_t handle)
gnutls_cipher_encrypt	/usr/include/gnutls/crypto.h	/^  int gnutls_cipher_encrypt (const gnutls_cipher_hd_t handle,$/;"	p	signature:(const gnutls_cipher_hd_t handle, void *text, size_t textlen)
gnutls_cipher_encrypt2	/usr/include/gnutls/crypto.h	/^  int gnutls_cipher_encrypt2 (gnutls_cipher_hd_t handle, const void *text,$/;"	p	signature:(gnutls_cipher_hd_t handle, const void *text, size_t textlen, void *ciphertext, size_t ciphertextlen)
gnutls_cipher_get	/usr/include/gnutls/gnutls.h	/^  gnutls_cipher_algorithm_t gnutls_cipher_get (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_cipher_get_block_size	/usr/include/gnutls/crypto.h	/^  int gnutls_cipher_get_block_size (gnutls_cipher_algorithm_t algorithm);$/;"	p	signature:(gnutls_cipher_algorithm_t algorithm)
gnutls_cipher_get_id	/usr/include/gnutls/gnutls.h	/^  gnutls_cipher_algorithm_t gnutls_cipher_get_id (const char *name);$/;"	p	signature:(const char *name)
gnutls_cipher_get_key_size	/usr/include/gnutls/gnutls.h	/^  size_t gnutls_cipher_get_key_size (gnutls_cipher_algorithm_t algorithm);$/;"	p	signature:(gnutls_cipher_algorithm_t algorithm)
gnutls_cipher_get_name	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_cipher_get_name (gnutls_cipher_algorithm_t algorithm);$/;"	p	signature:(gnutls_cipher_algorithm_t algorithm)
gnutls_cipher_hd_t	/usr/include/gnutls/crypto.h	/^  typedef struct api_cipher_hd_st *gnutls_cipher_hd_t;$/;"	t	typeref:struct:api_cipher_hd_st
gnutls_cipher_init	/usr/include/gnutls/crypto.h	/^  int gnutls_cipher_init (gnutls_cipher_hd_t * handle,$/;"	p	signature:(gnutls_cipher_hd_t * handle, gnutls_cipher_algorithm_t cipher, const gnutls_datum_t * key, const gnutls_datum_t * iv)
gnutls_cipher_list	/usr/include/gnutls/gnutls.h	/^  const gnutls_cipher_algorithm_t *gnutls_cipher_list (void);$/;"	p	signature:(void)
gnutls_cipher_set_iv	/usr/include/gnutls/crypto.h	/^  void gnutls_cipher_set_iv (gnutls_cipher_hd_t handle, void *iv, size_t ivlen);$/;"	p	signature:(gnutls_cipher_hd_t handle, void *iv, size_t ivlen)
gnutls_cipher_suite_get_name	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_cipher_suite_get_name (gnutls_kx_algorithm_t$/;"	p	signature:(gnutls_kx_algorithm_t kx_algorithm, gnutls_cipher_algorithm_t cipher_algorithm, gnutls_mac_algorithm_t mac_algorithm)
gnutls_cipher_suite_info	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_cipher_suite_info (size_t idx,$/;"	p	signature:(size_t idx, unsigned char *cs_id, gnutls_kx_algorithm_t * kx, gnutls_cipher_algorithm_t * cipher, gnutls_mac_algorithm_t * mac, gnutls_protocol_t * min_version)
gnutls_cipher_tag	/usr/include/gnutls/crypto.h	/^  int gnutls_cipher_tag( gnutls_cipher_hd_t handle, void* tag, size_t tag_size);$/;"	p	signature:( gnutls_cipher_hd_t handle, void* tag, size_t tag_size)
gnutls_close_request	/usr/include/gnutls/compat.h	68;"	d
gnutls_close_request_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_close_request_t;$/;"	t	typeref:enum:__anon13
gnutls_compression_get	/usr/include/gnutls/gnutls.h	/^    gnutls_compression_get (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_compression_get_id	/usr/include/gnutls/gnutls.h	/^  gnutls_compression_method_t gnutls_compression_get_id (const char *name);$/;"	p	signature:(const char *name)
gnutls_compression_get_name	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_compression_get_name (gnutls_compression_method_t$/;"	p	signature:(gnutls_compression_method_t algorithm)
gnutls_compression_list	/usr/include/gnutls/gnutls.h	/^  const gnutls_compression_method_t *gnutls_compression_list (void);$/;"	p	signature:(void)
gnutls_compression_method	/usr/include/gnutls/compat.h	58;"	d
gnutls_compression_method_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_compression_method_t;$/;"	t	typeref:enum:__anon6
gnutls_connection_end	/usr/include/gnutls/compat.h	59;"	d
gnutls_connection_end_t	/usr/include/gnutls/compat.h	50;"	d
gnutls_cred	/usr/include/gnutls/openssl.h	/^    gnutls_certificate_client_credentials gnutls_cred;$/;"	m	struct:_SSL	access:public
gnutls_cred_set	/usr/include/gnutls/gnutls.h	1002;"	d
gnutls_credentials_clear	/usr/include/gnutls/gnutls.h	/^  void gnutls_credentials_clear (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_credentials_set	/usr/include/gnutls/gnutls.h	/^  int gnutls_credentials_set (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_credentials_type_t type, void *cred)
gnutls_credentials_type	/usr/include/gnutls/compat.h	96;"	d
gnutls_credentials_type_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_credentials_type_t;$/;"	t	typeref:enum:__anon3
gnutls_credentialsype	/usr/include/gnutls/compat.h	60;"	d
gnutls_datum	/usr/include/gnutls/compat.h	98;"	d
gnutls_datum_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_datum_t;$/;"	t	typeref:struct:__anon22
gnutls_db_check_entry	/usr/include/gnutls/gnutls.h	/^  int gnutls_db_check_entry (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_datum_t session_entry)
gnutls_db_get_ptr	/usr/include/gnutls/gnutls.h	/^  void *gnutls_db_get_ptr (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_db_remove_func	/usr/include/gnutls/gnutls.h	/^  typedef int (*gnutls_db_remove_func) (void *, gnutls_datum_t key);$/;"	t
gnutls_db_remove_session	/usr/include/gnutls/gnutls.h	/^  void gnutls_db_remove_session (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_db_retr_func	/usr/include/gnutls/gnutls.h	/^  typedef gnutls_datum_t (*gnutls_db_retr_func) (void *, gnutls_datum_t key);$/;"	t
gnutls_db_set_cache_expiration	/usr/include/gnutls/gnutls.h	/^  void gnutls_db_set_cache_expiration (gnutls_session_t session, int seconds);$/;"	p	signature:(gnutls_session_t session, int seconds)
gnutls_db_set_ptr	/usr/include/gnutls/gnutls.h	/^  void gnutls_db_set_ptr (gnutls_session_t session, void *ptr);$/;"	p	signature:(gnutls_session_t session, void *ptr)
gnutls_db_set_remove_function	/usr/include/gnutls/gnutls.h	/^  void gnutls_db_set_remove_function (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_db_remove_func rem_func)
gnutls_db_set_retrieve_function	/usr/include/gnutls/gnutls.h	/^  void gnutls_db_set_retrieve_function (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_db_retr_func retr_func)
gnutls_db_set_store_function	/usr/include/gnutls/gnutls.h	/^  void gnutls_db_set_store_function (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_db_store_func store_func)
gnutls_db_store_func	/usr/include/gnutls/gnutls.h	/^  typedef int (*gnutls_db_store_func) (void *, gnutls_datum_t key,$/;"	t
gnutls_deinit	/usr/include/gnutls/gnutls.h	/^  void gnutls_deinit (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_dh_get_group	/usr/include/gnutls/gnutls.h	/^  int gnutls_dh_get_group (gnutls_session_t session, gnutls_datum_t * raw_gen,$/;"	p	signature:(gnutls_session_t session, gnutls_datum_t * raw_gen, gnutls_datum_t * raw_prime)
gnutls_dh_get_peers_public_bits	/usr/include/gnutls/gnutls.h	/^  int gnutls_dh_get_peers_public_bits (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_dh_get_prime_bits	/usr/include/gnutls/gnutls.h	/^  int gnutls_dh_get_prime_bits (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_dh_get_pubkey	/usr/include/gnutls/gnutls.h	/^  int gnutls_dh_get_pubkey (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_datum_t * raw_key)
gnutls_dh_get_secret_bits	/usr/include/gnutls/gnutls.h	/^  int gnutls_dh_get_secret_bits (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_dh_params	/usr/include/gnutls/compat.h	93;"	d
gnutls_dh_params_cpy	/usr/include/gnutls/gnutls.h	/^  int gnutls_dh_params_cpy (gnutls_dh_params_t dst, gnutls_dh_params_t src);$/;"	p	signature:(gnutls_dh_params_t dst, gnutls_dh_params_t src)
gnutls_dh_params_deinit	/usr/include/gnutls/gnutls.h	/^  void gnutls_dh_params_deinit (gnutls_dh_params_t dh_params);$/;"	p	signature:(gnutls_dh_params_t dh_params)
gnutls_dh_params_export_pkcs3	/usr/include/gnutls/gnutls.h	/^  int gnutls_dh_params_export_pkcs3 (gnutls_dh_params_t params,$/;"	p	signature:(gnutls_dh_params_t params, gnutls_x509_crt_fmt_t format, unsigned char *params_data, size_t * params_data_size)
gnutls_dh_params_export_raw	/usr/include/gnutls/gnutls.h	/^  int gnutls_dh_params_export_raw (gnutls_dh_params_t params,$/;"	p	signature:(gnutls_dh_params_t params, gnutls_datum_t * prime, gnutls_datum_t * generator, unsigned int *bits)
gnutls_dh_params_generate2	/usr/include/gnutls/gnutls.h	/^  int gnutls_dh_params_generate2 (gnutls_dh_params_t params,$/;"	p	signature:(gnutls_dh_params_t params, unsigned int bits)
gnutls_dh_params_import_pkcs3	/usr/include/gnutls/gnutls.h	/^  int gnutls_dh_params_import_pkcs3 (gnutls_dh_params_t params,$/;"	p	signature:(gnutls_dh_params_t params, const gnutls_datum_t * pkcs3_params, gnutls_x509_crt_fmt_t format)
gnutls_dh_params_import_raw	/usr/include/gnutls/gnutls.h	/^  int gnutls_dh_params_import_raw (gnutls_dh_params_t dh_params,$/;"	p	signature:(gnutls_dh_params_t dh_params, const gnutls_datum_t * prime, const gnutls_datum_t * generator)
gnutls_dh_params_init	/usr/include/gnutls/gnutls.h	/^  int gnutls_dh_params_init (gnutls_dh_params_t * dh_params);$/;"	p	signature:(gnutls_dh_params_t * dh_params)
gnutls_dh_params_t	/usr/include/gnutls/gnutls.h	/^  typedef struct gnutls_dh_params_int *gnutls_dh_params_t;$/;"	t	typeref:struct:gnutls_dh_params_int
gnutls_dh_set_prime_bits	/usr/include/gnutls/gnutls.h	/^  void gnutls_dh_set_prime_bits (gnutls_session_t session, unsigned int bits);$/;"	p	signature:(gnutls_session_t session, unsigned int bits)
gnutls_digest_algorithm	/usr/include/gnutls/compat.h	57;"	d
gnutls_digest_algorithm_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_digest_algorithm_t;$/;"	t	typeref:enum:__anon5
gnutls_dtls_cookie_send	/usr/include/gnutls/dtls.h	/^  int gnutls_dtls_cookie_send (gnutls_datum_t* key,$/;"	p	signature:(gnutls_datum_t* key, void* client_data, size_t client_data_size, gnutls_dtls_prestate_st* prestate, gnutls_transport_ptr_t ptr, gnutls_push_func push_func)
gnutls_dtls_cookie_verify	/usr/include/gnutls/dtls.h	/^  int gnutls_dtls_cookie_verify (gnutls_datum_t* key,$/;"	p	signature:(gnutls_datum_t* key, void* client_data, size_t client_data_size, void* _msg, size_t msg_size, gnutls_dtls_prestate_st* prestate)
gnutls_dtls_get_data_mtu	/usr/include/gnutls/dtls.h	/^unsigned int gnutls_dtls_get_data_mtu (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_dtls_get_mtu	/usr/include/gnutls/dtls.h	/^unsigned int gnutls_dtls_get_mtu (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_dtls_prestate_set	/usr/include/gnutls/dtls.h	/^  void gnutls_dtls_prestate_set (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_dtls_prestate_st* prestate)
gnutls_dtls_prestate_st	/usr/include/gnutls/dtls.h	/^  } gnutls_dtls_prestate_st;$/;"	t	typeref:struct:__anon36
gnutls_dtls_set_mtu	/usr/include/gnutls/dtls.h	/^  void gnutls_dtls_set_mtu (gnutls_session_t session, unsigned int mtu);$/;"	p	signature:(gnutls_session_t session, unsigned int mtu)
gnutls_dtls_set_timeouts	/usr/include/gnutls/dtls.h	/^void gnutls_dtls_set_timeouts (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, unsigned int retrans_timeout, unsigned int total_timeout)
gnutls_ecc_curve_get	/usr/include/gnutls/gnutls.h	/^gnutls_ecc_curve_t gnutls_ecc_curve_get(gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_ecc_curve_get_name	/usr/include/gnutls/gnutls.h	/^const char * gnutls_ecc_curve_get_name (gnutls_ecc_curve_t curve);$/;"	p	signature:(gnutls_ecc_curve_t curve)
gnutls_ecc_curve_get_size	/usr/include/gnutls/gnutls.h	/^int gnutls_ecc_curve_get_size (gnutls_ecc_curve_t curve);$/;"	p	signature:(gnutls_ecc_curve_t curve)
gnutls_ecc_curve_t	/usr/include/gnutls/gnutls.h	/^} gnutls_ecc_curve_t;$/;"	t	typeref:enum:__anon19
gnutls_ecdh_params_t	/usr/include/gnutls/gnutls.h	/^  typedef struct gnutls_ecdh_params_int *gnutls_ecdh_params_t;$/;"	t	typeref:struct:gnutls_ecdh_params_int
gnutls_errno_func	/usr/include/gnutls/gnutls.h	/^  typedef int (*gnutls_errno_func) (gnutls_transport_ptr_t);$/;"	t
gnutls_error_is_fatal	/usr/include/gnutls/gnutls.h	/^  int gnutls_error_is_fatal (int error);$/;"	p	signature:(int error)
gnutls_error_to_alert	/usr/include/gnutls/gnutls.h	/^  int gnutls_error_to_alert (int err, int *level);$/;"	p	signature:(int err, int *level)
gnutls_fingerprint	/usr/include/gnutls/gnutls.h	/^  int gnutls_fingerprint (gnutls_digest_algorithm_t algo,$/;"	p	signature:(gnutls_digest_algorithm_t algo, const gnutls_datum_t * data, void *result, size_t * result_size)
gnutls_free_function	/usr/include/gnutls/gnutls.h	/^  typedef void (*gnutls_free_function) (void *);$/;"	t
gnutls_global_deinit	/usr/include/gnutls/gnutls.h	/^  void gnutls_global_deinit (void);$/;"	p	signature:(void)
gnutls_global_init	/usr/include/gnutls/gnutls.h	/^  int gnutls_global_init (void);$/;"	p	signature:(void)
gnutls_global_set_audit_log_function	/usr/include/gnutls/gnutls.h	/^  void gnutls_global_set_audit_log_function (gnutls_audit_log_func log_func);$/;"	p	signature:(gnutls_audit_log_func log_func)
gnutls_global_set_log_function	/usr/include/gnutls/gnutls.h	/^  void gnutls_global_set_log_function (gnutls_log_func log_func);$/;"	p	signature:(gnutls_log_func log_func)
gnutls_global_set_log_level	/usr/include/gnutls/gnutls.h	/^  void gnutls_global_set_log_level (int level);$/;"	p	signature:(int level)
gnutls_global_set_mem_functions	/usr/include/gnutls/gnutls.h	/^    gnutls_global_set_mem_functions (gnutls_alloc_function alloc_func,$/;"	p	signature:(gnutls_alloc_function alloc_func, gnutls_alloc_function secure_alloc_func, gnutls_is_secure_function is_secure_func, gnutls_realloc_function realloc_func, gnutls_free_function free_func)
gnutls_global_set_mutex	/usr/include/gnutls/gnutls.h	/^  void gnutls_global_set_mutex (mutex_init_func init, mutex_deinit_func deinit,$/;"	p	signature:(mutex_init_func init, mutex_deinit_func deinit, mutex_lock_func lock, mutex_unlock_func unlock)
gnutls_global_set_time_function	/usr/include/gnutls/gnutls.h	/^  void gnutls_global_set_time_function (gnutls_time_func time_func);$/;"	p	signature:(gnutls_time_func time_func)
gnutls_handshake	/usr/include/gnutls/gnutls.h	/^  int gnutls_handshake (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_handshake_description_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_handshake_description_t;$/;"	t	typeref:enum:__anon9
gnutls_handshake_get_last_in	/usr/include/gnutls/gnutls.h	/^    gnutls_handshake_get_last_in (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_handshake_get_last_out	/usr/include/gnutls/gnutls.h	/^    gnutls_handshake_get_last_out (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_handshake_post_client_hello_func	/usr/include/gnutls/gnutls.h	/^  typedef int (*gnutls_handshake_post_client_hello_func) (gnutls_session_t);$/;"	t
gnutls_handshake_set_max_packet_length	/usr/include/gnutls/gnutls.h	/^  void gnutls_handshake_set_max_packet_length (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, size_t max)
gnutls_handshake_set_post_client_hello_function	/usr/include/gnutls/gnutls.h	/^    gnutls_handshake_set_post_client_hello_function (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_handshake_post_client_hello_func func)
gnutls_handshake_set_private_extensions	/usr/include/gnutls/gnutls.h	/^  void gnutls_handshake_set_private_extensions (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, int allow)
gnutls_hash	/usr/include/gnutls/crypto.h	/^  int gnutls_hash (gnutls_hash_hd_t handle, const void *text, size_t textlen);$/;"	p	signature:(gnutls_hash_hd_t handle, const void *text, size_t textlen)
gnutls_hash_deinit	/usr/include/gnutls/crypto.h	/^  void gnutls_hash_deinit (gnutls_hash_hd_t handle, void *digest);$/;"	p	signature:(gnutls_hash_hd_t handle, void *digest)
gnutls_hash_fast	/usr/include/gnutls/crypto.h	/^  int gnutls_hash_fast (gnutls_digest_algorithm_t algorithm,$/;"	p	signature:(gnutls_digest_algorithm_t algorithm, const void *text, size_t textlen, void *digest)
gnutls_hash_get_len	/usr/include/gnutls/crypto.h	/^  int gnutls_hash_get_len (gnutls_digest_algorithm_t algorithm);$/;"	p	signature:(gnutls_digest_algorithm_t algorithm)
gnutls_hash_hd_t	/usr/include/gnutls/crypto.h	/^  typedef struct hash_hd_st *gnutls_hash_hd_t;$/;"	t	typeref:struct:hash_hd_st
gnutls_hash_init	/usr/include/gnutls/crypto.h	/^  int gnutls_hash_init (gnutls_hash_hd_t * dig,$/;"	p	signature:(gnutls_hash_hd_t * dig, gnutls_digest_algorithm_t algorithm)
gnutls_hash_output	/usr/include/gnutls/crypto.h	/^  void gnutls_hash_output (gnutls_hash_hd_t handle, void *digest);$/;"	p	signature:(gnutls_hash_hd_t handle, void *digest)
gnutls_hex2bin	/usr/include/gnutls/gnutls.h	/^  int gnutls_hex2bin (const char *hex_data, size_t hex_size,$/;"	p	signature:(const char *hex_data, size_t hex_size, char *bin_data, size_t * bin_size)
gnutls_hex_decode	/usr/include/gnutls/gnutls.h	/^  int gnutls_hex_decode (const gnutls_datum_t * hex_data, char *result,$/;"	p	signature:(const gnutls_datum_t * hex_data, char *result, size_t * result_size)
gnutls_hex_encode	/usr/include/gnutls/gnutls.h	/^  int gnutls_hex_encode (const gnutls_datum_t * data, char *result,$/;"	p	signature:(const gnutls_datum_t * data, char *result, size_t * result_size)
gnutls_hmac	/usr/include/gnutls/crypto.h	/^  int gnutls_hmac (gnutls_hmac_hd_t handle, const void *text, size_t textlen);$/;"	p	signature:(gnutls_hmac_hd_t handle, const void *text, size_t textlen)
gnutls_hmac_deinit	/usr/include/gnutls/crypto.h	/^  void gnutls_hmac_deinit (gnutls_hmac_hd_t handle, void *digest);$/;"	p	signature:(gnutls_hmac_hd_t handle, void *digest)
gnutls_hmac_fast	/usr/include/gnutls/crypto.h	/^  int gnutls_hmac_fast (gnutls_mac_algorithm_t algorithm, const void *key,$/;"	p	signature:(gnutls_mac_algorithm_t algorithm, const void *key, size_t keylen, const void *text, size_t textlen, void *digest)
gnutls_hmac_get_len	/usr/include/gnutls/crypto.h	/^  int gnutls_hmac_get_len (gnutls_mac_algorithm_t algorithm);$/;"	p	signature:(gnutls_mac_algorithm_t algorithm)
gnutls_hmac_hd_t	/usr/include/gnutls/crypto.h	/^  typedef struct hmac_hd_st *gnutls_hmac_hd_t;$/;"	t	typeref:struct:hmac_hd_st
gnutls_hmac_init	/usr/include/gnutls/crypto.h	/^  int gnutls_hmac_init (gnutls_hmac_hd_t * dig,$/;"	p	signature:(gnutls_hmac_hd_t * dig, gnutls_digest_algorithm_t algorithm, const void *key, size_t keylen)
gnutls_hmac_output	/usr/include/gnutls/crypto.h	/^  void gnutls_hmac_output (gnutls_hmac_hd_t handle, void *digest);$/;"	p	signature:(gnutls_hmac_hd_t handle, void *digest)
gnutls_info_access_what_t	/usr/include/gnutls/x509.h	/^    } gnutls_info_access_what_t;$/;"	t	typeref:enum:gnutls_info_access_what_t
gnutls_info_access_what_t	/usr/include/gnutls/x509.h	/^  typedef enum gnutls_info_access_what_t$/;"	g
gnutls_init	/usr/include/gnutls/gnutls.h	/^  int gnutls_init (gnutls_session_t * session,$/;"	p	signature:(gnutls_session_t * session, unsigned int flags)
gnutls_is_secure_function	/usr/include/gnutls/gnutls.h	/^  typedef int (*gnutls_is_secure_function) (const void *);$/;"	t
gnutls_key_generate	/usr/include/gnutls/gnutls.h	/^  int gnutls_key_generate (gnutls_datum_t * key, unsigned int key_size);$/;"	p	signature:(gnutls_datum_t * key, unsigned int key_size)
gnutls_kx_algorithm	/usr/include/gnutls/compat.h	54;"	d
gnutls_kx_algorithm_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_kx_algorithm_t;$/;"	t	typeref:enum:__anon1
gnutls_kx_get	/usr/include/gnutls/gnutls.h	/^  gnutls_kx_algorithm_t gnutls_kx_get (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_kx_get_id	/usr/include/gnutls/gnutls.h	/^  gnutls_kx_algorithm_t gnutls_kx_get_id (const char *name);$/;"	p	signature:(const char *name)
gnutls_kx_get_name	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_kx_get_name (gnutls_kx_algorithm_t algorithm);$/;"	p	signature:(gnutls_kx_algorithm_t algorithm)
gnutls_kx_list	/usr/include/gnutls/gnutls.h	/^  const gnutls_kx_algorithm_t *gnutls_kx_list (void);$/;"	p	signature:(void)
gnutls_log_func	/usr/include/gnutls/gnutls.h	/^  typedef void (*gnutls_log_func) (int, const char *);$/;"	t
gnutls_mac_algorithm	/usr/include/gnutls/compat.h	56;"	d
gnutls_mac_algorithm_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_mac_algorithm_t;$/;"	t	typeref:enum:__anon4
gnutls_mac_get	/usr/include/gnutls/gnutls.h	/^  gnutls_mac_algorithm_t gnutls_mac_get (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_mac_get_id	/usr/include/gnutls/gnutls.h	/^  gnutls_mac_algorithm_t gnutls_mac_get_id (const char *name);$/;"	p	signature:(const char *name)
gnutls_mac_get_key_size	/usr/include/gnutls/gnutls.h	/^  size_t gnutls_mac_get_key_size (gnutls_mac_algorithm_t algorithm);$/;"	p	signature:(gnutls_mac_algorithm_t algorithm)
gnutls_mac_get_name	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_mac_get_name (gnutls_mac_algorithm_t algorithm);$/;"	p	signature:(gnutls_mac_algorithm_t algorithm)
gnutls_mac_list	/usr/include/gnutls/gnutls.h	/^  const gnutls_mac_algorithm_t *gnutls_mac_list (void);$/;"	p	signature:(void)
gnutls_openpgp_crt_check_hostname	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_check_hostname (gnutls_openpgp_crt_t key,$/;"	p	signature:(gnutls_openpgp_crt_t key, const char *hostname)
gnutls_openpgp_crt_deinit	/usr/include/gnutls/openpgp.h	/^  void gnutls_openpgp_crt_deinit (gnutls_openpgp_crt_t key);$/;"	p	signature:(gnutls_openpgp_crt_t key)
gnutls_openpgp_crt_export	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_export (gnutls_openpgp_crt_t key,$/;"	p	signature:(gnutls_openpgp_crt_t key, gnutls_openpgp_crt_fmt_t format, void *output_data, size_t * output_data_size)
gnutls_openpgp_crt_fmt	/usr/include/gnutls/openpgp.h	/^  typedef enum gnutls_openpgp_crt_fmt$/;"	g
gnutls_openpgp_crt_fmt_t	/usr/include/gnutls/openpgp.h	/^  } gnutls_openpgp_crt_fmt_t;$/;"	t	typeref:enum:gnutls_openpgp_crt_fmt
gnutls_openpgp_crt_get_auth_subkey	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_auth_subkey (gnutls_openpgp_crt_t crt,$/;"	p	signature:(gnutls_openpgp_crt_t crt, gnutls_openpgp_keyid_t keyid, unsigned int flag)
gnutls_openpgp_crt_get_creation_time	/usr/include/gnutls/openpgp.h	/^  time_t gnutls_openpgp_crt_get_creation_time (gnutls_openpgp_crt_t key);$/;"	p	signature:(gnutls_openpgp_crt_t key)
gnutls_openpgp_crt_get_expiration_time	/usr/include/gnutls/openpgp.h	/^  time_t gnutls_openpgp_crt_get_expiration_time (gnutls_openpgp_crt_t key);$/;"	p	signature:(gnutls_openpgp_crt_t key)
gnutls_openpgp_crt_get_fingerprint	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_fingerprint (gnutls_openpgp_crt_t key, void *fpr,$/;"	p	signature:(gnutls_openpgp_crt_t key, void *fpr, size_t * fprlen)
gnutls_openpgp_crt_get_id	/usr/include/gnutls/compat.h	128;"	d
gnutls_openpgp_crt_get_key_id	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_key_id (gnutls_openpgp_crt_t key,$/;"	p	signature:(gnutls_openpgp_crt_t key, gnutls_openpgp_keyid_t keyid)
gnutls_openpgp_crt_get_key_usage	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_key_usage (gnutls_openpgp_crt_t key,$/;"	p	signature:(gnutls_openpgp_crt_t key, unsigned int *key_usage)
gnutls_openpgp_crt_get_name	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_name (gnutls_openpgp_crt_t key,$/;"	p	signature:(gnutls_openpgp_crt_t key, int idx, char *buf, size_t * sizeof_buf)
gnutls_openpgp_crt_get_pk_algorithm	/usr/include/gnutls/openpgp.h	/^    gnutls_openpgp_crt_get_pk_algorithm (gnutls_openpgp_crt_t key,$/;"	p	signature:(gnutls_openpgp_crt_t key, unsigned int *bits)
gnutls_openpgp_crt_get_pk_dsa_raw	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_pk_dsa_raw (gnutls_openpgp_crt_t crt,$/;"	p	signature:(gnutls_openpgp_crt_t crt, gnutls_datum_t * p, gnutls_datum_t * q, gnutls_datum_t * g, gnutls_datum_t * y)
gnutls_openpgp_crt_get_pk_rsa_raw	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_pk_rsa_raw (gnutls_openpgp_crt_t crt,$/;"	p	signature:(gnutls_openpgp_crt_t crt, gnutls_datum_t * m, gnutls_datum_t * e)
gnutls_openpgp_crt_get_preferred_key_id	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_preferred_key_id (gnutls_openpgp_crt_t key,$/;"	p	signature:(gnutls_openpgp_crt_t key, gnutls_openpgp_keyid_t keyid)
gnutls_openpgp_crt_get_revoked_status	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_revoked_status (gnutls_openpgp_crt_t key);$/;"	p	signature:(gnutls_openpgp_crt_t key)
gnutls_openpgp_crt_get_subkey_count	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_subkey_count (gnutls_openpgp_crt_t key);$/;"	p	signature:(gnutls_openpgp_crt_t key)
gnutls_openpgp_crt_get_subkey_creation_time	/usr/include/gnutls/openpgp.h	/^  time_t gnutls_openpgp_crt_get_subkey_creation_time (gnutls_openpgp_crt_t$/;"	p	signature:(gnutls_openpgp_crt_t key, unsigned int idx)
gnutls_openpgp_crt_get_subkey_expiration_time	/usr/include/gnutls/openpgp.h	/^  time_t gnutls_openpgp_crt_get_subkey_expiration_time (gnutls_openpgp_crt_t$/;"	p	signature:(gnutls_openpgp_crt_t key, unsigned int idx)
gnutls_openpgp_crt_get_subkey_fingerprint	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_subkey_fingerprint (gnutls_openpgp_crt_t key,$/;"	p	signature:(gnutls_openpgp_crt_t key, unsigned int idx, void *fpr, size_t * fprlen)
gnutls_openpgp_crt_get_subkey_id	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_subkey_id (gnutls_openpgp_crt_t key,$/;"	p	signature:(gnutls_openpgp_crt_t key, unsigned int idx, gnutls_openpgp_keyid_t keyid)
gnutls_openpgp_crt_get_subkey_idx	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_subkey_idx (gnutls_openpgp_crt_t key,$/;"	p	signature:(gnutls_openpgp_crt_t key, const gnutls_openpgp_keyid_t keyid)
gnutls_openpgp_crt_get_subkey_pk_algorithm	/usr/include/gnutls/openpgp.h	/^    gnutls_openpgp_crt_get_subkey_pk_algorithm (gnutls_openpgp_crt_t key,$/;"	p	signature:(gnutls_openpgp_crt_t key, unsigned int idx, unsigned int *bits)
gnutls_openpgp_crt_get_subkey_pk_dsa_raw	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_subkey_pk_dsa_raw (gnutls_openpgp_crt_t crt,$/;"	p	signature:(gnutls_openpgp_crt_t crt, unsigned int idx, gnutls_datum_t * p, gnutls_datum_t * q, gnutls_datum_t * g, gnutls_datum_t * y)
gnutls_openpgp_crt_get_subkey_pk_rsa_raw	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_subkey_pk_rsa_raw (gnutls_openpgp_crt_t crt,$/;"	p	signature:(gnutls_openpgp_crt_t crt, unsigned int idx, gnutls_datum_t * m, gnutls_datum_t * e)
gnutls_openpgp_crt_get_subkey_revoked_status	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_subkey_revoked_status (gnutls_openpgp_crt_t key,$/;"	p	signature:(gnutls_openpgp_crt_t key, unsigned int idx)
gnutls_openpgp_crt_get_subkey_usage	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_subkey_usage (gnutls_openpgp_crt_t key,$/;"	p	signature:(gnutls_openpgp_crt_t key, unsigned int idx, unsigned int *key_usage)
gnutls_openpgp_crt_get_version	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_get_version (gnutls_openpgp_crt_t key);$/;"	p	signature:(gnutls_openpgp_crt_t key)
gnutls_openpgp_crt_import	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_import (gnutls_openpgp_crt_t key,$/;"	p	signature:(gnutls_openpgp_crt_t key, const gnutls_datum_t * data, gnutls_openpgp_crt_fmt_t format)
gnutls_openpgp_crt_init	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_init (gnutls_openpgp_crt_t * key);$/;"	p	signature:(gnutls_openpgp_crt_t * key)
gnutls_openpgp_crt_print	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_print (gnutls_openpgp_crt_t cert,$/;"	p	signature:(gnutls_openpgp_crt_t cert, gnutls_certificate_print_formats_t format, gnutls_datum_t * out)
gnutls_openpgp_crt_set_preferred_key_id	/usr/include/gnutls/openpgp.h	/^    gnutls_openpgp_crt_set_preferred_key_id (gnutls_openpgp_crt_t key,$/;"	p	signature:(gnutls_openpgp_crt_t key, const gnutls_openpgp_keyid_t keyid)
gnutls_openpgp_crt_status_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_openpgp_crt_status_t;$/;"	t	typeref:enum:__anon12
gnutls_openpgp_crt_t	/usr/include/gnutls/gnutls.h	/^  typedef struct gnutls_openpgp_crt_int *gnutls_openpgp_crt_t;$/;"	t	typeref:struct:gnutls_openpgp_crt_int
gnutls_openpgp_crt_verify_ring	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_verify_ring (gnutls_openpgp_crt_t key,$/;"	p	signature:(gnutls_openpgp_crt_t key, gnutls_openpgp_keyring_t keyring, unsigned int flags, unsigned int *verify )
gnutls_openpgp_crt_verify_self	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_crt_verify_self (gnutls_openpgp_crt_t key,$/;"	p	signature:(gnutls_openpgp_crt_t key, unsigned int flags, unsigned int *verify)
gnutls_openpgp_key	/usr/include/gnutls/compat.h	76;"	d
gnutls_openpgp_key_check_hostname	/usr/include/gnutls/compat.h	125;"	d
gnutls_openpgp_key_deinit	/usr/include/gnutls/compat.h	114;"	d
gnutls_openpgp_key_export	/usr/include/gnutls/compat.h	116;"	d
gnutls_openpgp_key_fmt	/usr/include/gnutls/compat.h	63;"	d
gnutls_openpgp_key_fmt_t	/usr/include/gnutls/compat.h	107;"	d
gnutls_openpgp_key_get_creation_time	/usr/include/gnutls/compat.h	122;"	d
gnutls_openpgp_key_get_expiration_time	/usr/include/gnutls/compat.h	123;"	d
gnutls_openpgp_key_get_fingerprint	/usr/include/gnutls/compat.h	118;"	d
gnutls_openpgp_key_get_id	/usr/include/gnutls/compat.h	124;"	d
gnutls_openpgp_key_get_key_usage	/usr/include/gnutls/compat.h	117;"	d
gnutls_openpgp_key_get_name	/usr/include/gnutls/compat.h	120;"	d
gnutls_openpgp_key_get_pk_algorithm	/usr/include/gnutls/compat.h	119;"	d
gnutls_openpgp_key_get_version	/usr/include/gnutls/compat.h	121;"	d
gnutls_openpgp_key_import	/usr/include/gnutls/compat.h	115;"	d
gnutls_openpgp_key_init	/usr/include/gnutls/compat.h	113;"	d
gnutls_openpgp_key_status	/usr/include/gnutls/compat.h	69;"	d
gnutls_openpgp_key_status_t	/usr/include/gnutls/compat.h	111;"	d
gnutls_openpgp_key_t	/usr/include/gnutls/compat.h	112;"	d
gnutls_openpgp_keyid_t	/usr/include/gnutls/openpgp.h	/^  typedef unsigned char gnutls_openpgp_keyid_t[GNUTLS_OPENPGP_KEYID_SIZE];$/;"	t
gnutls_openpgp_keyring	/usr/include/gnutls/compat.h	78;"	d
gnutls_openpgp_keyring_check_id	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_keyring_check_id (gnutls_openpgp_keyring_t ring,$/;"	p	signature:(gnutls_openpgp_keyring_t ring, const gnutls_openpgp_keyid_t keyid, unsigned int flags)
gnutls_openpgp_keyring_deinit	/usr/include/gnutls/openpgp.h	/^  void gnutls_openpgp_keyring_deinit (gnutls_openpgp_keyring_t keyring);$/;"	p	signature:(gnutls_openpgp_keyring_t keyring)
gnutls_openpgp_keyring_get_crt	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_keyring_get_crt (gnutls_openpgp_keyring_t ring,$/;"	p	signature:(gnutls_openpgp_keyring_t ring, unsigned int idx, gnutls_openpgp_crt_t * cert)
gnutls_openpgp_keyring_get_crt_count	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_keyring_get_crt_count (gnutls_openpgp_keyring_t ring);$/;"	p	signature:(gnutls_openpgp_keyring_t ring)
gnutls_openpgp_keyring_import	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_keyring_import (gnutls_openpgp_keyring_t keyring,$/;"	p	signature:(gnutls_openpgp_keyring_t keyring, const gnutls_datum_t * data, gnutls_openpgp_crt_fmt_t format)
gnutls_openpgp_keyring_init	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_keyring_init (gnutls_openpgp_keyring_t * keyring);$/;"	p	signature:(gnutls_openpgp_keyring_t * keyring)
gnutls_openpgp_keyring_t	/usr/include/gnutls/gnutls.h	/^  typedef struct gnutls_openpgp_keyring_int *gnutls_openpgp_keyring_t;$/;"	t	typeref:struct:gnutls_openpgp_keyring_int
gnutls_openpgp_privkey	/usr/include/gnutls/compat.h	77;"	d
gnutls_openpgp_privkey_deinit	/usr/include/gnutls/openpgp.h	/^  void gnutls_openpgp_privkey_deinit (gnutls_openpgp_privkey_t key);$/;"	p	signature:(gnutls_openpgp_privkey_t key)
gnutls_openpgp_privkey_export	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_privkey_export (gnutls_openpgp_privkey_t key,$/;"	p	signature:(gnutls_openpgp_privkey_t key, gnutls_openpgp_crt_fmt_t format, const char *password, unsigned int flags, void *output_data, size_t * output_data_size)
gnutls_openpgp_privkey_export_dsa_raw	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_privkey_export_dsa_raw (gnutls_openpgp_privkey_t pkey,$/;"	p	signature:(gnutls_openpgp_privkey_t pkey, gnutls_datum_t * p, gnutls_datum_t * q, gnutls_datum_t * g, gnutls_datum_t * y, gnutls_datum_t * x)
gnutls_openpgp_privkey_export_rsa_raw	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_privkey_export_rsa_raw (gnutls_openpgp_privkey_t pkey,$/;"	p	signature:(gnutls_openpgp_privkey_t pkey, gnutls_datum_t * m, gnutls_datum_t * e, gnutls_datum_t * d, gnutls_datum_t * p, gnutls_datum_t * q, gnutls_datum_t * u)
gnutls_openpgp_privkey_export_subkey_dsa_raw	/usr/include/gnutls/openpgp.h	/^    gnutls_openpgp_privkey_export_subkey_dsa_raw (gnutls_openpgp_privkey_t$/;"	p	signature:(gnutls_openpgp_privkey_t pkey, unsigned int idx, gnutls_datum_t * p, gnutls_datum_t * q, gnutls_datum_t * g, gnutls_datum_t * y, gnutls_datum_t * x)
gnutls_openpgp_privkey_export_subkey_rsa_raw	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_privkey_export_subkey_rsa_raw (gnutls_openpgp_privkey_t$/;"	p	signature:(gnutls_openpgp_privkey_t pkey, unsigned int idx, gnutls_datum_t * m, gnutls_datum_t * e, gnutls_datum_t * d, gnutls_datum_t * p, gnutls_datum_t * q, gnutls_datum_t * u)
gnutls_openpgp_privkey_get_fingerprint	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_privkey_get_fingerprint (gnutls_openpgp_privkey_t key,$/;"	p	signature:(gnutls_openpgp_privkey_t key, void *fpr, size_t * fprlen)
gnutls_openpgp_privkey_get_key_id	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_privkey_get_key_id (gnutls_openpgp_privkey_t key,$/;"	p	signature:(gnutls_openpgp_privkey_t key, gnutls_openpgp_keyid_t keyid)
gnutls_openpgp_privkey_get_pk_algorithm	/usr/include/gnutls/openpgp.h	/^    gnutls_openpgp_privkey_get_pk_algorithm (gnutls_openpgp_privkey_t key,$/;"	p	signature:(gnutls_openpgp_privkey_t key, unsigned int *bits)
gnutls_openpgp_privkey_get_preferred_key_id	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_privkey_get_preferred_key_id (gnutls_openpgp_privkey_t$/;"	p	signature:(gnutls_openpgp_privkey_t key, gnutls_openpgp_keyid_t keyid)
gnutls_openpgp_privkey_get_revoked_status	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_privkey_get_revoked_status (gnutls_openpgp_privkey_t$/;"	p	signature:(gnutls_openpgp_privkey_t key)
gnutls_openpgp_privkey_get_subkey_count	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_privkey_get_subkey_count (gnutls_openpgp_privkey_t key);$/;"	p	signature:(gnutls_openpgp_privkey_t key)
gnutls_openpgp_privkey_get_subkey_creation_time	/usr/include/gnutls/openpgp.h	/^    gnutls_openpgp_privkey_get_subkey_creation_time (gnutls_openpgp_privkey_t$/;"	p	signature:(gnutls_openpgp_privkey_t key, unsigned int idx)
gnutls_openpgp_privkey_get_subkey_expiration_time	/usr/include/gnutls/openpgp.h	/^    gnutls_openpgp_privkey_get_subkey_expiration_time$/;"	p	signature:(gnutls_openpgp_privkey_t key, unsigned int idx)
gnutls_openpgp_privkey_get_subkey_fingerprint	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_privkey_get_subkey_fingerprint (gnutls_openpgp_privkey_t$/;"	p	signature:(gnutls_openpgp_privkey_t key, unsigned int idx, void *fpr, size_t * fprlen)
gnutls_openpgp_privkey_get_subkey_id	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_privkey_get_subkey_id (gnutls_openpgp_privkey_t key,$/;"	p	signature:(gnutls_openpgp_privkey_t key, unsigned int idx, gnutls_openpgp_keyid_t keyid)
gnutls_openpgp_privkey_get_subkey_idx	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_privkey_get_subkey_idx (gnutls_openpgp_privkey_t key,$/;"	p	signature:(gnutls_openpgp_privkey_t key, const gnutls_openpgp_keyid_t keyid)
gnutls_openpgp_privkey_get_subkey_pk_algorithm	/usr/include/gnutls/openpgp.h	/^    gnutls_openpgp_privkey_get_subkey_pk_algorithm (gnutls_openpgp_privkey_t$/;"	p	signature:(gnutls_openpgp_privkey_t key, unsigned int idx, unsigned int *bits)
gnutls_openpgp_privkey_get_subkey_revoked_status	/usr/include/gnutls/openpgp.h	/^    gnutls_openpgp_privkey_get_subkey_revoked_status (gnutls_openpgp_privkey_t$/;"	p	signature:(gnutls_openpgp_privkey_t key, unsigned int idx)
gnutls_openpgp_privkey_import	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_privkey_import (gnutls_openpgp_privkey_t key,$/;"	p	signature:(gnutls_openpgp_privkey_t key, const gnutls_datum_t * data, gnutls_openpgp_crt_fmt_t format, const char *password, unsigned int flags)
gnutls_openpgp_privkey_init	/usr/include/gnutls/openpgp.h	/^  int gnutls_openpgp_privkey_init (gnutls_openpgp_privkey_t * key);$/;"	p	signature:(gnutls_openpgp_privkey_t * key)
gnutls_openpgp_privkey_sec_param	/usr/include/gnutls/openpgp.h	/^    gnutls_openpgp_privkey_sec_param (gnutls_openpgp_privkey_t key);$/;"	p	signature:(gnutls_openpgp_privkey_t key)
gnutls_openpgp_privkey_set_preferred_key_id	/usr/include/gnutls/openpgp.h	/^    gnutls_openpgp_privkey_set_preferred_key_id (gnutls_openpgp_privkey_t key,$/;"	p	signature:(gnutls_openpgp_privkey_t key, const gnutls_openpgp_keyid_t keyid)
gnutls_openpgp_privkey_t	/usr/include/gnutls/gnutls.h	/^  typedef struct gnutls_openpgp_privkey_int *gnutls_openpgp_privkey_t;$/;"	t	typeref:struct:gnutls_openpgp_privkey_int
gnutls_openpgp_recv_key_func	/usr/include/gnutls/openpgp.h	/^  typedef int (*gnutls_openpgp_recv_key_func) (gnutls_session_t session,$/;"	t
gnutls_openpgp_send_cert	/usr/include/gnutls/gnutls.h	/^  void gnutls_openpgp_send_cert (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_openpgp_crt_status_t status)
gnutls_openpgp_send_key	/usr/include/gnutls/compat.h	110;"	d
gnutls_openpgp_set_recv_key_function	/usr/include/gnutls/openpgp.h	/^    gnutls_openpgp_set_recv_key_function (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_openpgp_recv_key_func func)
gnutls_params_function	/usr/include/gnutls/gnutls.h	/^  typedef int gnutls_params_function (gnutls_session_t, gnutls_params_type_t,$/;"	t
gnutls_params_st	/usr/include/gnutls/gnutls.h	/^  typedef struct gnutls_params_st$/;"	s
gnutls_params_st	/usr/include/gnutls/gnutls.h	/^  } gnutls_params_st;$/;"	t	typeref:struct:gnutls_params_st
gnutls_params_st::deinit	/usr/include/gnutls/gnutls.h	/^    int deinit;$/;"	m	struct:gnutls_params_st	access:public
gnutls_params_st::params	/usr/include/gnutls/gnutls.h	/^    union params$/;"	u	struct:gnutls_params_st	access:public
gnutls_params_st::params	/usr/include/gnutls/gnutls.h	/^    } params;$/;"	m	struct:gnutls_params_st	typeref:union:gnutls_params_st::params	access:public
gnutls_params_st::params::dh	/usr/include/gnutls/gnutls.h	/^      gnutls_dh_params_t dh;$/;"	m	union:gnutls_params_st::params	access:public
gnutls_params_st::params::ecdh	/usr/include/gnutls/gnutls.h	/^      gnutls_ecdh_params_t ecdh;$/;"	m	union:gnutls_params_st::params	access:public
gnutls_params_st::params::rsa_export	/usr/include/gnutls/gnutls.h	/^      gnutls_rsa_params_t rsa_export;$/;"	m	union:gnutls_params_st::params	access:public
gnutls_params_st::type	/usr/include/gnutls/gnutls.h	/^    gnutls_params_type_t type;$/;"	m	struct:gnutls_params_st	access:public
gnutls_params_type	/usr/include/gnutls/compat.h	95;"	d
gnutls_params_type_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_params_type_t;$/;"	t	typeref:enum:__anon2
gnutls_paramsype	/usr/include/gnutls/compat.h	55;"	d
gnutls_pcert_deinit	/usr/include/gnutls/abstract.h	/^void gnutls_pcert_deinit (gnutls_pcert_st* pcert);$/;"	p	signature:(gnutls_pcert_st* pcert)
gnutls_pcert_import_openpgp	/usr/include/gnutls/abstract.h	/^int gnutls_pcert_import_openpgp (gnutls_pcert_st* pcert,$/;"	p	signature:(gnutls_pcert_st* pcert, gnutls_openpgp_crt_t crt, unsigned int flags)
gnutls_pcert_import_openpgp_raw	/usr/include/gnutls/abstract.h	/^int gnutls_pcert_import_openpgp_raw (gnutls_pcert_st* pcert,$/;"	p	signature:(gnutls_pcert_st* pcert, const gnutls_datum_t* cert, gnutls_openpgp_crt_fmt_t format, gnutls_openpgp_keyid_t keyid, unsigned int flags)
gnutls_pcert_import_x509	/usr/include/gnutls/abstract.h	/^int gnutls_pcert_import_x509 (gnutls_pcert_st* pcert,$/;"	p	signature:(gnutls_pcert_st* pcert, gnutls_x509_crt_t crt, unsigned int flags)
gnutls_pcert_import_x509_raw	/usr/include/gnutls/abstract.h	/^int gnutls_pcert_import_x509_raw (gnutls_pcert_st* pcert,$/;"	p	signature:(gnutls_pcert_st* pcert, const gnutls_datum_t* cert, gnutls_x509_crt_fmt_t format, unsigned int flags)
gnutls_pcert_list_import_x509_raw	/usr/include/gnutls/abstract.h	/^gnutls_pcert_list_import_x509_raw (gnutls_pcert_st * pcerts,$/;"	p	signature:(gnutls_pcert_st * pcerts, unsigned int *pcert_max, const gnutls_datum_t * data, gnutls_x509_crt_fmt_t format, unsigned int flags)
gnutls_pcert_st	/usr/include/gnutls/abstract.h	/^typedef struct gnutls_pcert_st$/;"	s
gnutls_pcert_st	/usr/include/gnutls/abstract.h	/^} gnutls_pcert_st;$/;"	t	typeref:struct:gnutls_pcert_st
gnutls_pcert_st::cert	/usr/include/gnutls/abstract.h	/^  gnutls_datum_t cert;$/;"	m	struct:gnutls_pcert_st	access:public
gnutls_pcert_st::pubkey	/usr/include/gnutls/abstract.h	/^  gnutls_pubkey_t pubkey;$/;"	m	struct:gnutls_pcert_st	access:public
gnutls_pcert_st::type	/usr/include/gnutls/abstract.h	/^  gnutls_certificate_type_t type;$/;"	m	struct:gnutls_pcert_st	access:public
gnutls_pem_base64_decode	/usr/include/gnutls/gnutls.h	/^  int gnutls_pem_base64_decode (const char *header,$/;"	p	signature:(const char *header, const gnutls_datum_t * b64_data, unsigned char *result, size_t * result_size)
gnutls_pem_base64_decode_alloc	/usr/include/gnutls/gnutls.h	/^  int gnutls_pem_base64_decode_alloc (const char *header,$/;"	p	signature:(const char *header, const gnutls_datum_t * b64_data, gnutls_datum_t * result)
gnutls_pem_base64_encode	/usr/include/gnutls/gnutls.h	/^  int gnutls_pem_base64_encode (const char *msg, const gnutls_datum_t * data,$/;"	p	signature:(const char *msg, const gnutls_datum_t * data, char *result, size_t * result_size)
gnutls_pem_base64_encode_alloc	/usr/include/gnutls/gnutls.h	/^  int gnutls_pem_base64_encode_alloc (const char *msg,$/;"	p	signature:(const char *msg, const gnutls_datum_t * data, gnutls_datum_t * result)
gnutls_perror	/usr/include/gnutls/gnutls.h	/^  void gnutls_perror (int error);$/;"	p	signature:(int error)
gnutls_pk_algorithm	/usr/include/gnutls/compat.h	64;"	d
gnutls_pk_algorithm_get_name	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_pk_algorithm_get_name (gnutls_pk_algorithm_t algorithm);$/;"	p	signature:(gnutls_pk_algorithm_t algorithm)
gnutls_pk_algorithm_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_pk_algorithm_t;$/;"	t	typeref:enum:__anon17
gnutls_pk_bits_to_sec_param	/usr/include/gnutls/gnutls.h	/^  gnutls_sec_param_t gnutls_pk_bits_to_sec_param (gnutls_pk_algorithm_t algo,$/;"	p	signature:(gnutls_pk_algorithm_t algo, unsigned int bits)
gnutls_pk_get_id	/usr/include/gnutls/gnutls.h	/^  gnutls_pk_algorithm_t gnutls_pk_get_id (const char *name);$/;"	p	signature:(const char *name)
gnutls_pk_get_name	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_pk_get_name (gnutls_pk_algorithm_t algorithm);$/;"	p	signature:(gnutls_pk_algorithm_t algorithm)
gnutls_pk_list	/usr/include/gnutls/gnutls.h	/^  const gnutls_pk_algorithm_t *gnutls_pk_list (void);$/;"	p	signature:(void)
gnutls_pkcs11_add_provider	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_add_provider (const char *name, const char *params);$/;"	p	signature:(const char *name, const char *params)
gnutls_pkcs11_copy_secret_key	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_copy_secret_key (const char *token_url,$/;"	p	signature:(const char *token_url, gnutls_datum_t * key, const char *label, unsigned int key_usage , unsigned int flags )
gnutls_pkcs11_copy_x509_crt	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_copy_x509_crt (const char *token_url, gnutls_x509_crt_t crt,$/;"	p	signature:(const char *token_url, gnutls_x509_crt_t crt, const char *label, unsigned int flags )
gnutls_pkcs11_copy_x509_privkey	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_copy_x509_privkey (const char *token_url, gnutls_x509_privkey_t key, $/;"	p	signature:(const char *token_url, gnutls_x509_privkey_t key, const char *label, unsigned int key_usage , unsigned int flags )
gnutls_pkcs11_deinit	/usr/include/gnutls/pkcs11.h	/^void gnutls_pkcs11_deinit (void);$/;"	p	signature:(void)
gnutls_pkcs11_delete_url	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_delete_url (const char *object_url, unsigned int flags$/;"	p	signature:(const char *object_url, unsigned int flags )
gnutls_pkcs11_init	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_init (unsigned int flags, const char *deprecated_config_file);$/;"	p	signature:(unsigned int flags, const char *deprecated_config_file)
gnutls_pkcs11_obj_attr_t	/usr/include/gnutls/pkcs11.h	/^  } gnutls_pkcs11_obj_attr_t;$/;"	t	typeref:enum:__anon40
gnutls_pkcs11_obj_deinit	/usr/include/gnutls/pkcs11.h	/^void gnutls_pkcs11_obj_deinit (gnutls_pkcs11_obj_t obj);$/;"	p	signature:(gnutls_pkcs11_obj_t obj)
gnutls_pkcs11_obj_export	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_obj_export (gnutls_pkcs11_obj_t obj,$/;"	p	signature:(gnutls_pkcs11_obj_t obj, void *output_data, size_t * output_data_size)
gnutls_pkcs11_obj_export_url	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_obj_export_url (gnutls_pkcs11_obj_t obj,$/;"	p	signature:(gnutls_pkcs11_obj_t obj, gnutls_pkcs11_url_type_t detailed, char **url)
gnutls_pkcs11_obj_get_info	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_obj_get_info (gnutls_pkcs11_obj_t crt,$/;"	p	signature:(gnutls_pkcs11_obj_t crt, gnutls_pkcs11_obj_info_t itype, void *output, size_t * output_size)
gnutls_pkcs11_obj_get_type	/usr/include/gnutls/pkcs11.h	/^gnutls_pkcs11_obj_type_t gnutls_pkcs11_obj_get_type (gnutls_pkcs11_obj_t obj);$/;"	p	signature:(gnutls_pkcs11_obj_t obj)
gnutls_pkcs11_obj_import_url	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_obj_import_url (gnutls_pkcs11_obj_t cert,$/;"	p	signature:(gnutls_pkcs11_obj_t cert, const char *url, unsigned int flags )
gnutls_pkcs11_obj_info_t	/usr/include/gnutls/pkcs11.h	/^  } gnutls_pkcs11_obj_info_t;$/;"	t	typeref:enum:__anon39
gnutls_pkcs11_obj_init	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_obj_init (gnutls_pkcs11_obj_t * obj);$/;"	p	signature:(gnutls_pkcs11_obj_t * obj)
gnutls_pkcs11_obj_list_import_url	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_obj_list_import_url (gnutls_pkcs11_obj_t * p_list,$/;"	p	signature:(gnutls_pkcs11_obj_t * p_list, unsigned int *const n_list, const char *url, gnutls_pkcs11_obj_attr_t attrs, unsigned int flags )
gnutls_pkcs11_obj_t	/usr/include/gnutls/pkcs11.h	/^typedef struct gnutls_pkcs11_obj_st *gnutls_pkcs11_obj_t;$/;"	t	typeref:struct:gnutls_pkcs11_obj_st
gnutls_pkcs11_obj_type_t	/usr/include/gnutls/pkcs11.h	/^  } gnutls_pkcs11_obj_type_t;$/;"	t	typeref:enum:__anon42
gnutls_pkcs11_pin_callback_t	/usr/include/gnutls/pkcs11.h	/^typedef int (*gnutls_pkcs11_pin_callback_t) (void *userdata, int attempt,$/;"	t
gnutls_pkcs11_pin_flag_t	/usr/include/gnutls/pkcs11.h	/^  } gnutls_pkcs11_pin_flag_t;$/;"	t	typeref:enum:__anon37
gnutls_pkcs11_privkey_deinit	/usr/include/gnutls/pkcs11.h	/^void gnutls_pkcs11_privkey_deinit (gnutls_pkcs11_privkey_t key);$/;"	p	signature:(gnutls_pkcs11_privkey_t key)
gnutls_pkcs11_privkey_export_url	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_privkey_export_url (gnutls_pkcs11_privkey_t key,$/;"	p	signature:(gnutls_pkcs11_privkey_t key, gnutls_pkcs11_url_type_t detailed, char **url)
gnutls_pkcs11_privkey_generate	/usr/include/gnutls/pkcs11.h	/^gnutls_pkcs11_privkey_generate (const char* url, $/;"	p	signature:(const char* url, gnutls_pk_algorithm_t pk, unsigned int bits, const char* label, unsigned int flags)
gnutls_pkcs11_privkey_get_info	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_privkey_get_info (gnutls_pkcs11_privkey_t pkey,$/;"	p	signature:(gnutls_pkcs11_privkey_t pkey, gnutls_pkcs11_obj_info_t itype, void *output, size_t * output_size)
gnutls_pkcs11_privkey_get_pk_algorithm	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_privkey_get_pk_algorithm (gnutls_pkcs11_privkey_t key,$/;"	p	signature:(gnutls_pkcs11_privkey_t key, unsigned int *bits)
gnutls_pkcs11_privkey_import_url	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_privkey_import_url (gnutls_pkcs11_privkey_t pkey,$/;"	p	signature:(gnutls_pkcs11_privkey_t pkey, const char *url, unsigned int flags)
gnutls_pkcs11_privkey_init	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_privkey_init (gnutls_pkcs11_privkey_t * key);$/;"	p	signature:(gnutls_pkcs11_privkey_t * key)
gnutls_pkcs11_privkey_t	/usr/include/gnutls/gnutls.h	/^  typedef struct gnutls_pkcs11_privkey_st *gnutls_pkcs11_privkey_t;$/;"	t	typeref:struct:gnutls_pkcs11_privkey_st
gnutls_pkcs11_set_pin_function	/usr/include/gnutls/pkcs11.h	/^void gnutls_pkcs11_set_pin_function (gnutls_pkcs11_pin_callback_t fn,$/;"	p	signature:(gnutls_pkcs11_pin_callback_t fn, void *userdata)
gnutls_pkcs11_set_token_function	/usr/include/gnutls/pkcs11.h	/^void gnutls_pkcs11_set_token_function (gnutls_pkcs11_token_callback_t fn,$/;"	p	signature:(gnutls_pkcs11_token_callback_t fn, void *userdata)
gnutls_pkcs11_token_callback_t	/usr/include/gnutls/pkcs11.h	/^typedef int (*gnutls_pkcs11_token_callback_t) (void *const userdata,$/;"	t
gnutls_pkcs11_token_get_flags	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_token_get_flags (const char *url, unsigned int *flags);$/;"	p	signature:(const char *url, unsigned int *flags)
gnutls_pkcs11_token_get_info	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_token_get_info (const char *url,$/;"	p	signature:(const char *url, gnutls_pkcs11_token_info_t ttype, void *output, size_t * output_size)
gnutls_pkcs11_token_get_mechanism	/usr/include/gnutls/pkcs11.h	/^gnutls_pkcs11_token_get_mechanism (const char *url, int idx,$/;"	p	signature:(const char *url, int idx, unsigned long *mechanism)
gnutls_pkcs11_token_get_url	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_token_get_url (unsigned int seq,$/;"	p	signature:(unsigned int seq, gnutls_pkcs11_url_type_t detailed, char **url)
gnutls_pkcs11_token_info_t	/usr/include/gnutls/pkcs11.h	/^  } gnutls_pkcs11_token_info_t;$/;"	t	typeref:enum:__anon41
gnutls_pkcs11_token_init	/usr/include/gnutls/pkcs11.h	/^gnutls_pkcs11_token_init (const char *token_url,$/;"	p	signature:(const char *token_url, const char *so_pin, const char *label)
gnutls_pkcs11_token_set_pin	/usr/include/gnutls/pkcs11.h	/^int gnutls_pkcs11_token_set_pin (const char *token_url,$/;"	p	signature:(const char *token_url, const char *oldpin, const char *newpin, unsigned int flags )
gnutls_pkcs11_type_get_name	/usr/include/gnutls/pkcs11.h	/^const char *gnutls_pkcs11_type_get_name (gnutls_pkcs11_obj_type_t type);$/;"	p	signature:(gnutls_pkcs11_obj_type_t type)
gnutls_pkcs11_url_type_t	/usr/include/gnutls/pkcs11.h	/^  } gnutls_pkcs11_url_type_t;$/;"	t	typeref:enum:__anon38
gnutls_pkcs12	/usr/include/gnutls/compat.h	87;"	d
gnutls_pkcs12_bag	/usr/include/gnutls/compat.h	86;"	d
gnutls_pkcs12_bag_decrypt	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_bag_decrypt (gnutls_pkcs12_bag_t bag, const char *pass);$/;"	p	signature:(gnutls_pkcs12_bag_t bag, const char *pass)
gnutls_pkcs12_bag_deinit	/usr/include/gnutls/pkcs12.h	/^  void gnutls_pkcs12_bag_deinit (gnutls_pkcs12_bag_t bag);$/;"	p	signature:(gnutls_pkcs12_bag_t bag)
gnutls_pkcs12_bag_encrypt	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_bag_encrypt (gnutls_pkcs12_bag_t bag, const char *pass,$/;"	p	signature:(gnutls_pkcs12_bag_t bag, const char *pass, unsigned int flags)
gnutls_pkcs12_bag_get_count	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_bag_get_count (gnutls_pkcs12_bag_t bag);$/;"	p	signature:(gnutls_pkcs12_bag_t bag)
gnutls_pkcs12_bag_get_data	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_bag_get_data (gnutls_pkcs12_bag_t bag, int indx,$/;"	p	signature:(gnutls_pkcs12_bag_t bag, int indx, gnutls_datum_t * data)
gnutls_pkcs12_bag_get_friendly_name	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_bag_get_friendly_name (gnutls_pkcs12_bag_t bag, int indx,$/;"	p	signature:(gnutls_pkcs12_bag_t bag, int indx, char **name)
gnutls_pkcs12_bag_get_key_id	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_bag_get_key_id (gnutls_pkcs12_bag_t bag, int indx,$/;"	p	signature:(gnutls_pkcs12_bag_t bag, int indx, gnutls_datum_t * id)
gnutls_pkcs12_bag_get_type	/usr/include/gnutls/pkcs12.h	/^    gnutls_pkcs12_bag_get_type (gnutls_pkcs12_bag_t bag, int indx);$/;"	p	signature:(gnutls_pkcs12_bag_t bag, int indx)
gnutls_pkcs12_bag_init	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_bag_init (gnutls_pkcs12_bag_t * bag);$/;"	p	signature:(gnutls_pkcs12_bag_t * bag)
gnutls_pkcs12_bag_set_crl	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_bag_set_crl (gnutls_pkcs12_bag_t bag,$/;"	p	signature:(gnutls_pkcs12_bag_t bag, gnutls_x509_crl_t crl)
gnutls_pkcs12_bag_set_crt	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_bag_set_crt (gnutls_pkcs12_bag_t bag,$/;"	p	signature:(gnutls_pkcs12_bag_t bag, gnutls_x509_crt_t crt)
gnutls_pkcs12_bag_set_data	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_bag_set_data (gnutls_pkcs12_bag_t bag,$/;"	p	signature:(gnutls_pkcs12_bag_t bag, gnutls_pkcs12_bag_type_t type, const gnutls_datum_t * data)
gnutls_pkcs12_bag_set_friendly_name	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_bag_set_friendly_name (gnutls_pkcs12_bag_t bag, int indx,$/;"	p	signature:(gnutls_pkcs12_bag_t bag, int indx, const char *name)
gnutls_pkcs12_bag_set_key_id	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_bag_set_key_id (gnutls_pkcs12_bag_t bag, int indx,$/;"	p	signature:(gnutls_pkcs12_bag_t bag, int indx, const gnutls_datum_t * id)
gnutls_pkcs12_bag_t	/usr/include/gnutls/pkcs12.h	/^  typedef struct gnutls_pkcs12_bag_int *gnutls_pkcs12_bag_t;$/;"	t	typeref:struct:gnutls_pkcs12_bag_int
gnutls_pkcs12_bag_type	/usr/include/gnutls/compat.h	85;"	d
gnutls_pkcs12_bag_type_t	/usr/include/gnutls/pkcs12.h	/^  typedef enum gnutls_pkcs12_bag_type_t$/;"	g
gnutls_pkcs12_bag_type_t	/usr/include/gnutls/pkcs12.h	/^  } gnutls_pkcs12_bag_type_t;$/;"	t	typeref:enum:gnutls_pkcs12_bag_type_t
gnutls_pkcs12_deinit	/usr/include/gnutls/pkcs12.h	/^  void gnutls_pkcs12_deinit (gnutls_pkcs12_t pkcs12);$/;"	p	signature:(gnutls_pkcs12_t pkcs12)
gnutls_pkcs12_export	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_export (gnutls_pkcs12_t pkcs12,$/;"	p	signature:(gnutls_pkcs12_t pkcs12, gnutls_x509_crt_fmt_t format, void *output_data, size_t * output_data_size)
gnutls_pkcs12_generate_mac	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_generate_mac (gnutls_pkcs12_t pkcs12, const char *pass);$/;"	p	signature:(gnutls_pkcs12_t pkcs12, const char *pass)
gnutls_pkcs12_get_bag	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_get_bag (gnutls_pkcs12_t pkcs12,$/;"	p	signature:(gnutls_pkcs12_t pkcs12, int indx, gnutls_pkcs12_bag_t bag)
gnutls_pkcs12_import	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_import (gnutls_pkcs12_t pkcs12,$/;"	p	signature:(gnutls_pkcs12_t pkcs12, const gnutls_datum_t * data, gnutls_x509_crt_fmt_t format, unsigned int flags)
gnutls_pkcs12_init	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_init (gnutls_pkcs12_t * pkcs12);$/;"	p	signature:(gnutls_pkcs12_t * pkcs12)
gnutls_pkcs12_set_bag	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_set_bag (gnutls_pkcs12_t pkcs12, gnutls_pkcs12_bag_t bag);$/;"	p	signature:(gnutls_pkcs12_t pkcs12, gnutls_pkcs12_bag_t bag)
gnutls_pkcs12_t	/usr/include/gnutls/pkcs12.h	/^  typedef struct gnutls_pkcs12_int *gnutls_pkcs12_t;$/;"	t	typeref:struct:gnutls_pkcs12_int
gnutls_pkcs12_verify_mac	/usr/include/gnutls/pkcs12.h	/^  int gnutls_pkcs12_verify_mac (gnutls_pkcs12_t pkcs12, const char *pass);$/;"	p	signature:(gnutls_pkcs12_t pkcs12, const char *pass)
gnutls_pkcs7	/usr/include/gnutls/compat.h	82;"	d
gnutls_pkcs7_deinit	/usr/include/gnutls/x509.h	/^  void gnutls_pkcs7_deinit (gnutls_pkcs7_t pkcs7);$/;"	p	signature:(gnutls_pkcs7_t pkcs7)
gnutls_pkcs7_delete_crl	/usr/include/gnutls/x509.h	/^  int gnutls_pkcs7_delete_crl (gnutls_pkcs7_t pkcs7, int indx);$/;"	p	signature:(gnutls_pkcs7_t pkcs7, int indx)
gnutls_pkcs7_delete_crt	/usr/include/gnutls/x509.h	/^  int gnutls_pkcs7_delete_crt (gnutls_pkcs7_t pkcs7, int indx);$/;"	p	signature:(gnutls_pkcs7_t pkcs7, int indx)
gnutls_pkcs7_export	/usr/include/gnutls/x509.h	/^  int gnutls_pkcs7_export (gnutls_pkcs7_t pkcs7,$/;"	p	signature:(gnutls_pkcs7_t pkcs7, gnutls_x509_crt_fmt_t format, void *output_data, size_t * output_data_size)
gnutls_pkcs7_get_crl_count	/usr/include/gnutls/x509.h	/^  int gnutls_pkcs7_get_crl_count (gnutls_pkcs7_t pkcs7);$/;"	p	signature:(gnutls_pkcs7_t pkcs7)
gnutls_pkcs7_get_crl_raw	/usr/include/gnutls/x509.h	/^  int gnutls_pkcs7_get_crl_raw (gnutls_pkcs7_t pkcs7,$/;"	p	signature:(gnutls_pkcs7_t pkcs7, int indx, void *crl, size_t * crl_size)
gnutls_pkcs7_get_crt_count	/usr/include/gnutls/x509.h	/^  int gnutls_pkcs7_get_crt_count (gnutls_pkcs7_t pkcs7);$/;"	p	signature:(gnutls_pkcs7_t pkcs7)
gnutls_pkcs7_get_crt_raw	/usr/include/gnutls/x509.h	/^  int gnutls_pkcs7_get_crt_raw (gnutls_pkcs7_t pkcs7, int indx,$/;"	p	signature:(gnutls_pkcs7_t pkcs7, int indx, void *certificate, size_t * certificate_size)
gnutls_pkcs7_import	/usr/include/gnutls/x509.h	/^  int gnutls_pkcs7_import (gnutls_pkcs7_t pkcs7,$/;"	p	signature:(gnutls_pkcs7_t pkcs7, const gnutls_datum_t * data, gnutls_x509_crt_fmt_t format)
gnutls_pkcs7_init	/usr/include/gnutls/x509.h	/^  int gnutls_pkcs7_init (gnutls_pkcs7_t * pkcs7);$/;"	p	signature:(gnutls_pkcs7_t * pkcs7)
gnutls_pkcs7_set_crl	/usr/include/gnutls/x509.h	/^  int gnutls_pkcs7_set_crl (gnutls_pkcs7_t pkcs7, gnutls_x509_crl_t crl);$/;"	p	signature:(gnutls_pkcs7_t pkcs7, gnutls_x509_crl_t crl)
gnutls_pkcs7_set_crl_raw	/usr/include/gnutls/x509.h	/^  int gnutls_pkcs7_set_crl_raw (gnutls_pkcs7_t pkcs7,$/;"	p	signature:(gnutls_pkcs7_t pkcs7, const gnutls_datum_t * crl)
gnutls_pkcs7_set_crt	/usr/include/gnutls/x509.h	/^  int gnutls_pkcs7_set_crt (gnutls_pkcs7_t pkcs7, gnutls_x509_crt_t crt);$/;"	p	signature:(gnutls_pkcs7_t pkcs7, gnutls_x509_crt_t crt)
gnutls_pkcs7_set_crt_raw	/usr/include/gnutls/x509.h	/^  int gnutls_pkcs7_set_crt_raw (gnutls_pkcs7_t pkcs7,$/;"	p	signature:(gnutls_pkcs7_t pkcs7, const gnutls_datum_t * crt)
gnutls_pkcs7_t	/usr/include/gnutls/x509.h	/^  typedef struct gnutls_pkcs7_int *gnutls_pkcs7_t;$/;"	t	typeref:struct:gnutls_pkcs7_int
gnutls_pkcs_encrypt_flags	/usr/include/gnutls/compat.h	84;"	d
gnutls_pkcs_encrypt_flags_t	/usr/include/gnutls/x509.h	/^  typedef enum gnutls_pkcs_encrypt_flags_t$/;"	g
gnutls_pkcs_encrypt_flags_t	/usr/include/gnutls/x509.h	/^  } gnutls_pkcs_encrypt_flags_t;$/;"	t	typeref:enum:gnutls_pkcs_encrypt_flags_t
gnutls_prf	/usr/include/gnutls/gnutls.h	/^  int gnutls_prf (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, size_t label_size, const char *label, int server_random_first, size_t extra_size, const char *extra, size_t outsize, char *out)
gnutls_prf_raw	/usr/include/gnutls/gnutls.h	/^  int gnutls_prf_raw (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, size_t label_size, const char *label, size_t seed_size, const char *seed, size_t outsize, char *out)
gnutls_priority_deinit	/usr/include/gnutls/gnutls.h	/^  void gnutls_priority_deinit (gnutls_priority_t priority_cache);$/;"	p	signature:(gnutls_priority_t priority_cache)
gnutls_priority_get_cipher_suite_index	/usr/include/gnutls/gnutls.h	/^  int gnutls_priority_get_cipher_suite_index (gnutls_priority_t pcache, unsigned int idx, unsigned int *sidx);$/;"	p	signature:(gnutls_priority_t pcache, unsigned int idx, unsigned int *sidx)
gnutls_priority_init	/usr/include/gnutls/gnutls.h	/^  int gnutls_priority_init (gnutls_priority_t * priority_cache,$/;"	p	signature:(gnutls_priority_t * priority_cache, const char *priorities, const char **err_pos)
gnutls_priority_set	/usr/include/gnutls/gnutls.h	/^  int gnutls_priority_set (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_priority_t priority)
gnutls_priority_set_direct	/usr/include/gnutls/gnutls.h	/^  int gnutls_priority_set_direct (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, const char *priorities, const char **err_pos)
gnutls_priority_t	/usr/include/gnutls/gnutls.h	/^  typedef struct gnutls_priority_st *gnutls_priority_t;$/;"	t	typeref:struct:gnutls_priority_st
gnutls_privkey_decrypt_data	/usr/include/gnutls/abstract.h	/^int gnutls_privkey_decrypt_data (gnutls_privkey_t key,$/;"	p	signature:(gnutls_privkey_t key, unsigned int flags, const gnutls_datum_t * ciphertext, gnutls_datum_t * plaintext)
gnutls_privkey_decrypt_func	/usr/include/gnutls/abstract.h	/^typedef int (*gnutls_privkey_decrypt_func) (gnutls_privkey_t key,$/;"	t
gnutls_privkey_deinit	/usr/include/gnutls/abstract.h	/^void gnutls_privkey_deinit (gnutls_privkey_t key);$/;"	p	signature:(gnutls_privkey_t key)
gnutls_privkey_get_pk_algorithm	/usr/include/gnutls/abstract.h	/^int gnutls_privkey_get_pk_algorithm (gnutls_privkey_t key,$/;"	p	signature:(gnutls_privkey_t key, unsigned int *bits)
gnutls_privkey_get_type	/usr/include/gnutls/abstract.h	/^gnutls_privkey_type_t gnutls_privkey_get_type (gnutls_privkey_t key);$/;"	p	signature:(gnutls_privkey_t key)
gnutls_privkey_import_ext	/usr/include/gnutls/abstract.h	/^gnutls_privkey_import_ext (gnutls_privkey_t pkey,$/;"	p	signature:(gnutls_privkey_t pkey, gnutls_pk_algorithm_t pk, void* userdata, gnutls_privkey_sign_func sign_func, gnutls_privkey_decrypt_func decrypt_func, unsigned int flags)
gnutls_privkey_import_openpgp	/usr/include/gnutls/abstract.h	/^int gnutls_privkey_import_openpgp (gnutls_privkey_t pkey,$/;"	p	signature:(gnutls_privkey_t pkey, gnutls_openpgp_privkey_t key, unsigned int flags)
gnutls_privkey_import_pkcs11	/usr/include/gnutls/abstract.h	/^int gnutls_privkey_import_pkcs11 (gnutls_privkey_t pkey,$/;"	p	signature:(gnutls_privkey_t pkey, gnutls_pkcs11_privkey_t key, unsigned int flags)
gnutls_privkey_import_x509	/usr/include/gnutls/abstract.h	/^int gnutls_privkey_import_x509 (gnutls_privkey_t pkey,$/;"	p	signature:(gnutls_privkey_t pkey, gnutls_x509_privkey_t key, unsigned int flags)
gnutls_privkey_init	/usr/include/gnutls/abstract.h	/^int gnutls_privkey_init (gnutls_privkey_t * key);$/;"	p	signature:(gnutls_privkey_t * key)
gnutls_privkey_sign_data	/usr/include/gnutls/abstract.h	/^int gnutls_privkey_sign_data (gnutls_privkey_t signer,$/;"	p	signature:(gnutls_privkey_t signer, gnutls_digest_algorithm_t hash, unsigned int flags, const gnutls_datum_t * data, gnutls_datum_t * signature)
gnutls_privkey_sign_func	/usr/include/gnutls/abstract.h	/^typedef int (*gnutls_privkey_sign_func) (gnutls_privkey_t key,$/;"	t
gnutls_privkey_sign_hash	/usr/include/gnutls/abstract.h	/^int gnutls_privkey_sign_hash (gnutls_privkey_t signer,$/;"	p	signature:(gnutls_privkey_t signer, gnutls_digest_algorithm_t hash_algo, unsigned int flags, const gnutls_datum_t * hash_data, gnutls_datum_t * signature)
gnutls_privkey_t	/usr/include/gnutls/abstract.h	/^typedef struct gnutls_privkey_st *gnutls_privkey_t;$/;"	t	typeref:struct:gnutls_privkey_st
gnutls_privkey_type_t	/usr/include/gnutls/gnutls.h	/^    } gnutls_privkey_type_t;$/;"	t	typeref:enum:__anon26
gnutls_protocol	/usr/include/gnutls/compat.h	67;"	d
gnutls_protocol_get_id	/usr/include/gnutls/gnutls.h	/^  gnutls_protocol_t gnutls_protocol_get_id (const char *name);$/;"	p	signature:(const char *name)
gnutls_protocol_get_name	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_protocol_get_name (gnutls_protocol_t version);$/;"	p	signature:(gnutls_protocol_t version)
gnutls_protocol_get_version	/usr/include/gnutls/gnutls.h	/^  gnutls_protocol_t gnutls_protocol_get_version (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_protocol_list	/usr/include/gnutls/gnutls.h	/^  const gnutls_protocol_t *gnutls_protocol_list (void);$/;"	p	signature:(void)
gnutls_protocol_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_protocol_t;$/;"	t	typeref:enum:__anon14
gnutls_psk_allocate_client_credentials	/usr/include/gnutls/gnutls.h	/^    gnutls_psk_allocate_client_credentials (gnutls_psk_client_credentials_t *$/;"	p	signature:(gnutls_psk_client_credentials_t * sc)
gnutls_psk_allocate_server_credentials	/usr/include/gnutls/gnutls.h	/^    gnutls_psk_allocate_server_credentials (gnutls_psk_server_credentials_t *$/;"	p	signature:(gnutls_psk_server_credentials_t * sc)
gnutls_psk_client_credentials_function	/usr/include/gnutls/gnutls.h	/^  typedef int gnutls_psk_client_credentials_function (gnutls_session_t,$/;"	t
gnutls_psk_client_credentials_t	/usr/include/gnutls/gnutls.h	/^    *gnutls_psk_client_credentials_t;$/;"	t	typeref:struct:gnutls_psk_client_credentials_st
gnutls_psk_client_get_hint	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_psk_client_get_hint (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_psk_free_client_credentials	/usr/include/gnutls/gnutls.h	/^    gnutls_psk_free_client_credentials (gnutls_psk_client_credentials_t sc);$/;"	p	signature:(gnutls_psk_client_credentials_t sc)
gnutls_psk_free_server_credentials	/usr/include/gnutls/gnutls.h	/^    gnutls_psk_free_server_credentials (gnutls_psk_server_credentials_t sc);$/;"	p	signature:(gnutls_psk_server_credentials_t sc)
gnutls_psk_key_flags	/usr/include/gnutls/gnutls.h	/^  typedef enum gnutls_psk_key_flags$/;"	g
gnutls_psk_key_flags	/usr/include/gnutls/gnutls.h	/^  } gnutls_psk_key_flags;$/;"	t	typeref:enum:gnutls_psk_key_flags
gnutls_psk_server_credentials_function	/usr/include/gnutls/gnutls.h	/^  typedef int gnutls_psk_server_credentials_function (gnutls_session_t,$/;"	t
gnutls_psk_server_credentials_t	/usr/include/gnutls/gnutls.h	/^    *gnutls_psk_server_credentials_t;$/;"	t	typeref:struct:gnutls_psk_server_credentials_st
gnutls_psk_server_get_username	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_psk_server_get_username (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_psk_set_client_credentials	/usr/include/gnutls/gnutls.h	/^  int gnutls_psk_set_client_credentials (gnutls_psk_client_credentials_t res,$/;"	p	signature:(gnutls_psk_client_credentials_t res, const char *username, const gnutls_datum_t * key, gnutls_psk_key_flags flags)
gnutls_psk_set_client_credentials_function	/usr/include/gnutls/gnutls.h	/^    gnutls_psk_set_client_credentials_function ($/;"	p	signature:( gnutls_psk_client_credentials_t cred, gnutls_psk_client_credentials_function * func)
gnutls_psk_set_params_function	/usr/include/gnutls/gnutls.h	/^  void gnutls_psk_set_params_function (gnutls_psk_server_credentials_t res,$/;"	p	signature:(gnutls_psk_server_credentials_t res, gnutls_params_function * func)
gnutls_psk_set_server_credentials_file	/usr/include/gnutls/gnutls.h	/^  int gnutls_psk_set_server_credentials_file (gnutls_psk_server_credentials_t$/;"	p	signature:(gnutls_psk_server_credentials_t res, const char *password_file)
gnutls_psk_set_server_credentials_function	/usr/include/gnutls/gnutls.h	/^    gnutls_psk_set_server_credentials_function ($/;"	p	signature:( gnutls_psk_server_credentials_t cred, gnutls_psk_server_credentials_function * func)
gnutls_psk_set_server_credentials_hint	/usr/include/gnutls/gnutls.h	/^    gnutls_psk_set_server_credentials_hint (gnutls_psk_server_credentials_t$/;"	p	signature:(gnutls_psk_server_credentials_t res, const char *hint)
gnutls_psk_set_server_dh_params	/usr/include/gnutls/gnutls.h	/^    gnutls_psk_set_server_dh_params (gnutls_psk_server_credentials_t res,$/;"	p	signature:(gnutls_psk_server_credentials_t res, gnutls_dh_params_t dh_params)
gnutls_psk_set_server_params_function	/usr/include/gnutls/gnutls.h	/^    gnutls_psk_set_server_params_function (gnutls_psk_server_credentials_t$/;"	p	signature:(gnutls_psk_server_credentials_t res, gnutls_params_function * func)
gnutls_pubkey_deinit	/usr/include/gnutls/abstract.h	/^void gnutls_pubkey_deinit (gnutls_pubkey_t key);$/;"	p	signature:(gnutls_pubkey_t key)
gnutls_pubkey_export	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_export (gnutls_pubkey_t key,$/;"	p	signature:(gnutls_pubkey_t key, gnutls_x509_crt_fmt_t format, void *output_data, size_t * output_data_size)
gnutls_pubkey_get_key_id	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_get_key_id (gnutls_pubkey_t key, unsigned int flags,$/;"	p	signature:(gnutls_pubkey_t key, unsigned int flags, unsigned char *output_data, size_t * output_data_size)
gnutls_pubkey_get_key_usage	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_get_key_usage (gnutls_pubkey_t key, unsigned int *usage);$/;"	p	signature:(gnutls_pubkey_t key, unsigned int *usage)
gnutls_pubkey_get_openpgp_key_id	/usr/include/gnutls/abstract.h	/^gnutls_pubkey_get_openpgp_key_id (gnutls_pubkey_t key, unsigned int flags,$/;"	p	signature:(gnutls_pubkey_t key, unsigned int flags, unsigned char *output_data, size_t * output_data_size, unsigned int *subkey)
gnutls_pubkey_get_pk_algorithm	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_get_pk_algorithm (gnutls_pubkey_t key, unsigned int *bits);$/;"	p	signature:(gnutls_pubkey_t key, unsigned int *bits)
gnutls_pubkey_get_pk_dsa_raw	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_get_pk_dsa_raw (gnutls_pubkey_t key,$/;"	p	signature:(gnutls_pubkey_t key, gnutls_datum_t * p, gnutls_datum_t * q, gnutls_datum_t * g, gnutls_datum_t * y)
gnutls_pubkey_get_pk_ecc_raw	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_get_pk_ecc_raw (gnutls_pubkey_t key, gnutls_ecc_curve_t *curve,$/;"	p	signature:(gnutls_pubkey_t key, gnutls_ecc_curve_t *curve, gnutls_datum_t * x, gnutls_datum_t * y)
gnutls_pubkey_get_pk_ecc_x962	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_get_pk_ecc_x962 (gnutls_pubkey_t key, gnutls_datum_t* parameters,$/;"	p	signature:(gnutls_pubkey_t key, gnutls_datum_t* parameters, gnutls_datum_t * ecpoint)
gnutls_pubkey_get_pk_rsa_raw	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_get_pk_rsa_raw (gnutls_pubkey_t key,$/;"	p	signature:(gnutls_pubkey_t key, gnutls_datum_t * m, gnutls_datum_t * e)
gnutls_pubkey_get_preferred_hash_algorithm	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_get_preferred_hash_algorithm (gnutls_pubkey_t key,$/;"	p	signature:(gnutls_pubkey_t key, gnutls_digest_algorithm_t * hash, unsigned int *mand)
gnutls_pubkey_get_verify_algorithm	/usr/include/gnutls/abstract.h	/^gnutls_pubkey_get_verify_algorithm (gnutls_pubkey_t key,$/;"	p	signature:(gnutls_pubkey_t key, const gnutls_datum_t * signature, gnutls_digest_algorithm_t * hash)
gnutls_pubkey_import	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_import (gnutls_pubkey_t key,$/;"	p	signature:(gnutls_pubkey_t key, const gnutls_datum_t * data, gnutls_x509_crt_fmt_t format)
gnutls_pubkey_import_dsa_raw	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_import_dsa_raw (gnutls_pubkey_t key,$/;"	p	signature:(gnutls_pubkey_t key, const gnutls_datum_t * p, const gnutls_datum_t * q, const gnutls_datum_t * g, const gnutls_datum_t * y)
gnutls_pubkey_import_ecc_raw	/usr/include/gnutls/abstract.h	/^gnutls_pubkey_import_ecc_raw (gnutls_pubkey_t key,$/;"	p	signature:(gnutls_pubkey_t key, gnutls_ecc_curve_t curve, const gnutls_datum_t * x, const gnutls_datum_t * y)
gnutls_pubkey_import_ecc_x962	/usr/include/gnutls/abstract.h	/^gnutls_pubkey_import_ecc_x962 (gnutls_pubkey_t key,$/;"	p	signature:(gnutls_pubkey_t key, const gnutls_datum_t * parameters, const gnutls_datum_t * ecpoint)
gnutls_pubkey_import_openpgp	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_import_openpgp (gnutls_pubkey_t key,$/;"	p	signature:(gnutls_pubkey_t key, gnutls_openpgp_crt_t crt, unsigned int flags)
gnutls_pubkey_import_pkcs11	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_import_pkcs11 (gnutls_pubkey_t key,$/;"	p	signature:(gnutls_pubkey_t key, gnutls_pkcs11_obj_t obj, unsigned int flags)
gnutls_pubkey_import_pkcs11_url	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_import_pkcs11_url (gnutls_pubkey_t key, const char *url,$/;"	p	signature:(gnutls_pubkey_t key, const char *url, unsigned int flags )
gnutls_pubkey_import_privkey	/usr/include/gnutls/abstract.h	/^gnutls_pubkey_import_privkey (gnutls_pubkey_t key, gnutls_privkey_t pkey,$/;"	p	signature:(gnutls_pubkey_t key, gnutls_privkey_t pkey, unsigned int usage, unsigned int flags)
gnutls_pubkey_import_rsa_raw	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_import_rsa_raw (gnutls_pubkey_t key,$/;"	p	signature:(gnutls_pubkey_t key, const gnutls_datum_t * m, const gnutls_datum_t * e)
gnutls_pubkey_import_x509	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_import_x509 (gnutls_pubkey_t key, gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_pubkey_t key, gnutls_x509_crt_t crt, unsigned int flags)
gnutls_pubkey_init	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_init (gnutls_pubkey_t * key);$/;"	p	signature:(gnutls_pubkey_t * key)
gnutls_pubkey_set_key_usage	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_set_key_usage (gnutls_pubkey_t key, unsigned int usage);$/;"	p	signature:(gnutls_pubkey_t key, unsigned int usage)
gnutls_pubkey_t	/usr/include/gnutls/abstract.h	/^typedef struct gnutls_pubkey_st *gnutls_pubkey_t;$/;"	t	typeref:struct:gnutls_pubkey_st
gnutls_pubkey_verify_data	/usr/include/gnutls/abstract.h	/^int gnutls_pubkey_verify_data (gnutls_pubkey_t pubkey,$/;"	p	signature:(gnutls_pubkey_t pubkey, unsigned int flags, const gnutls_datum_t * data, const gnutls_datum_t * signature)
gnutls_pubkey_verify_data2	/usr/include/gnutls/abstract.h	/^gnutls_pubkey_verify_data2 (gnutls_pubkey_t pubkey, $/;"	p	signature:(gnutls_pubkey_t pubkey, gnutls_sign_algorithm_t algo, unsigned int flags, const gnutls_datum_t * data, const gnutls_datum_t * signature)
gnutls_pubkey_verify_hash	/usr/include/gnutls/abstract.h	/^gnutls_pubkey_verify_hash (gnutls_pubkey_t key, unsigned int flags,$/;"	p	signature:(gnutls_pubkey_t key, unsigned int flags, const gnutls_datum_t * hash, const gnutls_datum_t * signature)
gnutls_pull_func	/usr/include/gnutls/gnutls.h	/^  typedef ssize_t (*gnutls_pull_func) (gnutls_transport_ptr_t, void *,$/;"	t
gnutls_pull_timeout_func	/usr/include/gnutls/gnutls.h	/^  typedef int (*gnutls_pull_timeout_func) (gnutls_transport_ptr_t, unsigned int ms);$/;"	t
gnutls_push_func	/usr/include/gnutls/gnutls.h	/^  typedef ssize_t (*gnutls_push_func) (gnutls_transport_ptr_t, const void *,$/;"	t
gnutls_read	/usr/include/gnutls/gnutls.h	835;"	d
gnutls_realloc_function	/usr/include/gnutls/gnutls.h	/^  typedef void *(*gnutls_realloc_function) (void *, size_t);$/;"	t
gnutls_record_check_pending	/usr/include/gnutls/gnutls.h	/^  size_t gnutls_record_check_pending (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_record_disable_padding	/usr/include/gnutls/gnutls.h	/^  void gnutls_record_disable_padding (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_record_get_direction	/usr/include/gnutls/gnutls.h	/^  int gnutls_record_get_direction (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_record_get_discarded	/usr/include/gnutls/dtls.h	/^  unsigned int gnutls_record_get_discarded (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_record_get_max_size	/usr/include/gnutls/gnutls.h	/^  size_t gnutls_record_get_max_size (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_record_recv	/usr/include/gnutls/gnutls.h	/^  ssize_t gnutls_record_recv (gnutls_session_t session, void *data,$/;"	p	signature:(gnutls_session_t session, void *data, size_t data_size)
gnutls_record_recv_seq	/usr/include/gnutls/gnutls.h	/^  ssize_t gnutls_record_recv_seq (gnutls_session_t session, void *data, size_t data_size,$/;"	p	signature:(gnutls_session_t session, void *data, size_t data_size, unsigned char *seq)
gnutls_record_send	/usr/include/gnutls/gnutls.h	/^  ssize_t gnutls_record_send (gnutls_session_t session, const void *data,$/;"	p	signature:(gnutls_session_t session, const void *data, size_t data_size)
gnutls_record_set_max_size	/usr/include/gnutls/gnutls.h	/^  ssize_t gnutls_record_set_max_size (gnutls_session_t session, size_t size);$/;"	p	signature:(gnutls_session_t session, size_t size)
gnutls_rehandshake	/usr/include/gnutls/gnutls.h	/^  int gnutls_rehandshake (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_retr2_st	/usr/include/gnutls/gnutls.h	/^  typedef struct gnutls_retr2_st$/;"	s
gnutls_retr2_st	/usr/include/gnutls/gnutls.h	/^  } gnutls_retr2_st;$/;"	t	typeref:struct:gnutls_retr2_st
gnutls_retr2_st::__anon27::pgp	/usr/include/gnutls/gnutls.h	/^      gnutls_openpgp_crt_t pgp;$/;"	m	union:gnutls_retr2_st::__anon27	access:public
gnutls_retr2_st::__anon27::x509	/usr/include/gnutls/gnutls.h	/^      gnutls_x509_crt_t *x509;$/;"	m	union:gnutls_retr2_st::__anon27	access:public
gnutls_retr2_st::__anon28::pgp	/usr/include/gnutls/gnutls.h	/^      gnutls_openpgp_privkey_t pgp;$/;"	m	union:gnutls_retr2_st::__anon28	access:public
gnutls_retr2_st::__anon28::pkcs11	/usr/include/gnutls/gnutls.h	/^      gnutls_pkcs11_privkey_t pkcs11;$/;"	m	union:gnutls_retr2_st::__anon28	access:public
gnutls_retr2_st::__anon28::x509	/usr/include/gnutls/gnutls.h	/^      gnutls_x509_privkey_t x509;$/;"	m	union:gnutls_retr2_st::__anon28	access:public
gnutls_retr2_st::cert	/usr/include/gnutls/gnutls.h	/^    } cert;$/;"	m	struct:gnutls_retr2_st	typeref:union:gnutls_retr2_st::__anon27	access:public
gnutls_retr2_st::cert_type	/usr/include/gnutls/gnutls.h	/^    gnutls_certificate_type_t cert_type;$/;"	m	struct:gnutls_retr2_st	access:public
gnutls_retr2_st::deinit_all	/usr/include/gnutls/gnutls.h	/^    unsigned int deinit_all;    \/* if non zero all keys will be deinited *\/$/;"	m	struct:gnutls_retr2_st	access:public
gnutls_retr2_st::key	/usr/include/gnutls/gnutls.h	/^    } key;$/;"	m	struct:gnutls_retr2_st	typeref:union:gnutls_retr2_st::__anon28	access:public
gnutls_retr2_st::key_type	/usr/include/gnutls/gnutls.h	/^    gnutls_privkey_type_t key_type;$/;"	m	struct:gnutls_retr2_st	access:public
gnutls_retr2_st::ncerts	/usr/include/gnutls/gnutls.h	/^    unsigned int ncerts;        \/* one for pgp keys *\/$/;"	m	struct:gnutls_retr2_st	access:public
gnutls_retr_st	/usr/include/gnutls/compat.h	/^typedef struct gnutls_retr_st$/;"	s
gnutls_retr_st	/usr/include/gnutls/compat.h	/^} gnutls_retr_st;$/;"	t	typeref:struct:gnutls_retr_st
gnutls_retr_st::__anon29::pgp	/usr/include/gnutls/compat.h	/^    gnutls_openpgp_crt_t pgp;$/;"	m	union:gnutls_retr_st::__anon29	access:public
gnutls_retr_st::__anon29::x509	/usr/include/gnutls/compat.h	/^    gnutls_x509_crt_t *x509;$/;"	m	union:gnutls_retr_st::__anon29	access:public
gnutls_retr_st::__anon30::pgp	/usr/include/gnutls/compat.h	/^    gnutls_openpgp_privkey_t pgp;$/;"	m	union:gnutls_retr_st::__anon30	access:public
gnutls_retr_st::__anon30::x509	/usr/include/gnutls/compat.h	/^    gnutls_x509_privkey_t x509;$/;"	m	union:gnutls_retr_st::__anon30	access:public
gnutls_retr_st::cert	/usr/include/gnutls/compat.h	/^  } cert;$/;"	m	struct:gnutls_retr_st	typeref:union:gnutls_retr_st::__anon29	access:public
gnutls_retr_st::deinit_all	/usr/include/gnutls/compat.h	/^  unsigned int deinit_all;      \/* if non zero all keys will be deinited *\/$/;"	m	struct:gnutls_retr_st	access:public
gnutls_retr_st::key	/usr/include/gnutls/compat.h	/^  } key;$/;"	m	struct:gnutls_retr_st	typeref:union:gnutls_retr_st::__anon30	access:public
gnutls_retr_st::ncerts	/usr/include/gnutls/compat.h	/^  unsigned int ncerts;          \/* one for pgp keys *\/$/;"	m	struct:gnutls_retr_st	access:public
gnutls_retr_st::type	/usr/include/gnutls/compat.h	/^  gnutls_certificate_type_t type;$/;"	m	struct:gnutls_retr_st	access:public
gnutls_rnd	/usr/include/gnutls/crypto.h	/^  int gnutls_rnd (gnutls_rnd_level_t level, void *data, size_t len);$/;"	p	signature:(gnutls_rnd_level_t level, void *data, size_t len)
gnutls_rnd_level	/usr/include/gnutls/crypto.h	/^  typedef enum gnutls_rnd_level$/;"	g
gnutls_rnd_level_t	/usr/include/gnutls/crypto.h	/^  } gnutls_rnd_level_t;$/;"	t	typeref:enum:gnutls_rnd_level
gnutls_rsa_params	/usr/include/gnutls/compat.h	94;"	d
gnutls_rsa_params_import_raw	/usr/include/gnutls/compat.h	/^  int gnutls_rsa_params_import_raw (gnutls_rsa_params_t rsa_params,$/;"	p	signature:(gnutls_rsa_params_t rsa_params, const gnutls_datum_t * m, const gnutls_datum_t * e, const gnutls_datum_t * d, const gnutls_datum_t * p, const gnutls_datum_t * q, const gnutls_datum_t * u)
gnutls_rsa_params_t	/usr/include/gnutls/gnutls.h	/^  typedef struct gnutls_x509_privkey_int *gnutls_rsa_params_t;$/;"	t	typeref:struct:gnutls_x509_privkey_int
gnutls_safe_renegotiation_status	/usr/include/gnutls/gnutls.h	/^  int gnutls_safe_renegotiation_status (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_sec_param_get_name	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_sec_param_get_name (gnutls_sec_param_t param);$/;"	p	signature:(gnutls_sec_param_t param)
gnutls_sec_param_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_sec_param_t;$/;"	t	typeref:enum:__anon20
gnutls_sec_param_to_pk_bits	/usr/include/gnutls/gnutls.h	/^  unsigned int gnutls_sec_param_to_pk_bits (gnutls_pk_algorithm_t algo,$/;"	p	signature:(gnutls_pk_algorithm_t algo, gnutls_sec_param_t param)
gnutls_server_name	/usr/include/gnutls/compat.h	66;"	d
gnutls_server_name_get	/usr/include/gnutls/gnutls.h	/^  int gnutls_server_name_get (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, void *data, size_t * data_length, unsigned int *type, unsigned int indx)
gnutls_server_name_set	/usr/include/gnutls/gnutls.h	/^  int gnutls_server_name_set (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_server_name_type_t type, const void *name, size_t name_length)
gnutls_server_name_type_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_server_name_type_t;$/;"	t	typeref:enum:__anon23
gnutls_session	/usr/include/gnutls/compat.h	72;"	d
gnutls_session_channel_binding	/usr/include/gnutls/gnutls.h	/^  int gnutls_session_channel_binding (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_channel_binding_t cbtype, gnutls_datum_t * cb)
gnutls_session_enable_compatibility_mode	/usr/include/gnutls/gnutls.h	/^  void gnutls_session_enable_compatibility_mode (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_session_get_data	/usr/include/gnutls/gnutls.h	/^  int gnutls_session_get_data (gnutls_session_t session, void *session_data,$/;"	p	signature:(gnutls_session_t session, void *session_data, size_t * session_data_size)
gnutls_session_get_data2	/usr/include/gnutls/gnutls.h	/^  int gnutls_session_get_data2 (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_datum_t * data)
gnutls_session_get_id	/usr/include/gnutls/gnutls.h	/^  int gnutls_session_get_id (gnutls_session_t session, void *session_id,$/;"	p	signature:(gnutls_session_t session, void *session_id, size_t * session_id_size)
gnutls_session_get_ptr	/usr/include/gnutls/gnutls.h	/^  void *gnutls_session_get_ptr (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_session_is_resumed	/usr/include/gnutls/gnutls.h	/^  int gnutls_session_is_resumed (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_session_set_data	/usr/include/gnutls/gnutls.h	/^  int gnutls_session_set_data (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, const void *session_data, size_t session_data_size)
gnutls_session_set_ptr	/usr/include/gnutls/gnutls.h	/^  void gnutls_session_set_ptr (gnutls_session_t session, void *ptr);$/;"	p	signature:(gnutls_session_t session, void *ptr)
gnutls_session_t	/usr/include/gnutls/gnutls.h	/^  typedef struct gnutls_session_int *gnutls_session_t;$/;"	t	typeref:struct:gnutls_session_int
gnutls_session_ticket_enable_client	/usr/include/gnutls/gnutls.h	/^  int gnutls_session_ticket_enable_client (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_session_ticket_enable_server	/usr/include/gnutls/gnutls.h	/^  int gnutls_session_ticket_enable_server (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, const gnutls_datum_t * key)
gnutls_session_ticket_key_generate	/usr/include/gnutls/gnutls.h	/^  int gnutls_session_ticket_key_generate (gnutls_datum_t * key);$/;"	p	signature:(gnutls_datum_t * key)
gnutls_set_default_priority	/usr/include/gnutls/gnutls.h	/^  int gnutls_set_default_priority (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_sign_algorithm	/usr/include/gnutls/compat.h	65;"	d
gnutls_sign_algorithm_get_name	/usr/include/gnutls/gnutls.h	785;"	d
gnutls_sign_algorithm_get_requested	/usr/include/gnutls/gnutls.h	/^  int gnutls_sign_algorithm_get_requested (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, size_t indx, gnutls_sign_algorithm_t * algo)
gnutls_sign_algorithm_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_sign_algorithm_t;$/;"	t	typeref:enum:__anon18
gnutls_sign_func	/usr/include/gnutls/compat.h	/^typedef int (*gnutls_sign_func) (gnutls_session_t session,$/;"	t
gnutls_sign_get_id	/usr/include/gnutls/gnutls.h	/^  gnutls_sign_algorithm_t gnutls_sign_get_id (const char *name);$/;"	p	signature:(const char *name)
gnutls_sign_get_name	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_sign_get_name (gnutls_sign_algorithm_t algorithm);$/;"	p	signature:(gnutls_sign_algorithm_t algorithm)
gnutls_sign_list	/usr/include/gnutls/gnutls.h	/^  const gnutls_sign_algorithm_t *gnutls_sign_list (void);$/;"	p	signature:(void)
gnutls_srp_allocate_client_credentials	/usr/include/gnutls/gnutls.h	/^    gnutls_srp_allocate_client_credentials (gnutls_srp_client_credentials_t *$/;"	p	signature:(gnutls_srp_client_credentials_t * sc)
gnutls_srp_allocate_server_credentials	/usr/include/gnutls/gnutls.h	/^    gnutls_srp_allocate_server_credentials (gnutls_srp_server_credentials_t *$/;"	p	signature:(gnutls_srp_server_credentials_t * sc)
gnutls_srp_base64_decode	/usr/include/gnutls/gnutls.h	/^  int gnutls_srp_base64_decode (const gnutls_datum_t * b64_data, char *result,$/;"	p	signature:(const gnutls_datum_t * b64_data, char *result, size_t * result_size)
gnutls_srp_base64_decode_alloc	/usr/include/gnutls/gnutls.h	/^  int gnutls_srp_base64_decode_alloc (const gnutls_datum_t * b64_data,$/;"	p	signature:(const gnutls_datum_t * b64_data, gnutls_datum_t * result)
gnutls_srp_base64_encode	/usr/include/gnutls/gnutls.h	/^  int gnutls_srp_base64_encode (const gnutls_datum_t * data, char *result,$/;"	p	signature:(const gnutls_datum_t * data, char *result, size_t * result_size)
gnutls_srp_base64_encode_alloc	/usr/include/gnutls/gnutls.h	/^  int gnutls_srp_base64_encode_alloc (const gnutls_datum_t * data,$/;"	p	signature:(const gnutls_datum_t * data, gnutls_datum_t * result)
gnutls_srp_client_credentials	/usr/include/gnutls/compat.h	91;"	d
gnutls_srp_client_credentials_function	/usr/include/gnutls/gnutls.h	/^  typedef int gnutls_srp_client_credentials_function (gnutls_session_t,$/;"	t
gnutls_srp_client_credentials_t	/usr/include/gnutls/gnutls.h	/^    *gnutls_srp_client_credentials_t;$/;"	t	typeref:struct:gnutls_srp_client_credentials_st
gnutls_srp_free_client_credentials	/usr/include/gnutls/gnutls.h	/^    gnutls_srp_free_client_credentials (gnutls_srp_client_credentials_t sc);$/;"	p	signature:(gnutls_srp_client_credentials_t sc)
gnutls_srp_free_server_credentials	/usr/include/gnutls/gnutls.h	/^    gnutls_srp_free_server_credentials (gnutls_srp_server_credentials_t sc);$/;"	p	signature:(gnutls_srp_server_credentials_t sc)
gnutls_srp_server_credentials	/usr/include/gnutls/compat.h	92;"	d
gnutls_srp_server_credentials_function	/usr/include/gnutls/gnutls.h	/^  typedef int gnutls_srp_server_credentials_function (gnutls_session_t,$/;"	t
gnutls_srp_server_credentials_t	/usr/include/gnutls/gnutls.h	/^    *gnutls_srp_server_credentials_t;$/;"	t	typeref:struct:gnutls_srp_server_credentials_st
gnutls_srp_server_get_username	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_srp_server_get_username (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_srp_set_client_credentials	/usr/include/gnutls/gnutls.h	/^  int gnutls_srp_set_client_credentials (gnutls_srp_client_credentials_t res,$/;"	p	signature:(gnutls_srp_client_credentials_t res, const char *username, const char *password)
gnutls_srp_set_client_credentials_function	/usr/include/gnutls/gnutls.h	/^    gnutls_srp_set_client_credentials_function ($/;"	p	signature:( gnutls_srp_client_credentials_t cred, gnutls_srp_client_credentials_function * func)
gnutls_srp_set_prime_bits	/usr/include/gnutls/gnutls.h	/^  extern void gnutls_srp_set_prime_bits (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, unsigned int bits)
gnutls_srp_set_server_credentials_file	/usr/include/gnutls/gnutls.h	/^  int gnutls_srp_set_server_credentials_file (gnutls_srp_server_credentials_t$/;"	p	signature:(gnutls_srp_server_credentials_t res, const char *password_file, const char *password_conf_file)
gnutls_srp_set_server_credentials_function	/usr/include/gnutls/gnutls.h	/^    gnutls_srp_set_server_credentials_function ($/;"	p	signature:( gnutls_srp_server_credentials_t cred, gnutls_srp_server_credentials_function * func)
gnutls_srp_verifier	/usr/include/gnutls/gnutls.h	/^  int gnutls_srp_verifier (const char *username,$/;"	p	signature:(const char *username, const char *password, const gnutls_datum_t * salt, const gnutls_datum_t * generator, const gnutls_datum_t * prime, gnutls_datum_t * res)
gnutls_state	/usr/include/gnutls/openssl.h	/^    gnutls_session_t gnutls_state;$/;"	m	struct:_SSL	access:public
gnutls_strerror	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_strerror (int error);$/;"	p	signature:(int error)
gnutls_strerror_name	/usr/include/gnutls/gnutls.h	/^  const char *gnutls_strerror_name (int error);$/;"	p	signature:(int error)
gnutls_supplemental_data_format_type_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_supplemental_data_format_type_t;$/;"	t	typeref:enum:__anon24
gnutls_supplemental_get_name	/usr/include/gnutls/gnutls.h	/^    *gnutls_supplemental_get_name (gnutls_supplemental_data_format_type_t$/;"	p	signature:(gnutls_supplemental_data_format_type_t type)
gnutls_time_func	/usr/include/gnutls/gnutls.h	/^  typedef time_t (*gnutls_time_func) (time_t *t);$/;"	t
gnutls_transport_get_ptr	/usr/include/gnutls/gnutls.h	/^  gnutls_transport_ptr_t gnutls_transport_get_ptr (gnutls_session_t session);$/;"	p	signature:(gnutls_session_t session)
gnutls_transport_get_ptr2	/usr/include/gnutls/gnutls.h	/^  void gnutls_transport_get_ptr2 (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_transport_ptr_t * recv_ptr, gnutls_transport_ptr_t * send_ptr)
gnutls_transport_ptr	/usr/include/gnutls/compat.h	99;"	d
gnutls_transport_ptr_t	/usr/include/gnutls/gnutls.h	/^  typedef void *gnutls_transport_ptr_t;$/;"	t
gnutls_transport_set_errno	/usr/include/gnutls/gnutls.h	/^  void gnutls_transport_set_errno (gnutls_session_t session, int err);$/;"	p	signature:(gnutls_session_t session, int err)
gnutls_transport_set_errno_function	/usr/include/gnutls/gnutls.h	/^  void gnutls_transport_set_errno_function (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_errno_func errno_func)
gnutls_transport_set_ptr	/usr/include/gnutls/gnutls.h	/^  void gnutls_transport_set_ptr (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_transport_ptr_t ptr)
gnutls_transport_set_ptr2	/usr/include/gnutls/gnutls.h	/^  void gnutls_transport_set_ptr2 (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_transport_ptr_t recv_ptr, gnutls_transport_ptr_t send_ptr)
gnutls_transport_set_pull_function	/usr/include/gnutls/gnutls.h	/^  void gnutls_transport_set_pull_function (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_pull_func pull_func)
gnutls_transport_set_pull_timeout_function	/usr/include/gnutls/gnutls.h	/^  void gnutls_transport_set_pull_timeout_function (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_pull_timeout_func func)
gnutls_transport_set_push_function	/usr/include/gnutls/gnutls.h	/^  void gnutls_transport_set_push_function (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_push_func push_func)
gnutls_transport_set_vec_push_function	/usr/include/gnutls/gnutls.h	/^  void gnutls_transport_set_vec_push_function (gnutls_session_t session,$/;"	p	signature:(gnutls_session_t session, gnutls_vec_push_func vec_func)
gnutls_vec_push_func	/usr/include/gnutls/gnutls.h	/^  typedef ssize_t (*gnutls_vec_push_func) (gnutls_transport_ptr_t,$/;"	t
gnutls_verify_output_function	/usr/include/gnutls/x509.h	/^  typedef int gnutls_verify_output_function ($/;"	t
gnutls_write	/usr/include/gnutls/gnutls.h	836;"	d
gnutls_x509_ava_st	/usr/include/gnutls/x509.h	/^  typedef struct gnutls_x509_ava_st$/;"	s
gnutls_x509_ava_st	/usr/include/gnutls/x509.h	/^  } gnutls_x509_ava_st;$/;"	t	typeref:struct:gnutls_x509_ava_st
gnutls_x509_ava_st::oid	/usr/include/gnutls/x509.h	/^    gnutls_datum_t oid;$/;"	m	struct:gnutls_x509_ava_st	access:public
gnutls_x509_ava_st::value	/usr/include/gnutls/x509.h	/^    gnutls_datum_t value;$/;"	m	struct:gnutls_x509_ava_st	access:public
gnutls_x509_ava_st::value_tag	/usr/include/gnutls/x509.h	/^    unsigned long value_tag;$/;"	m	struct:gnutls_x509_ava_st	access:public
gnutls_x509_crl	/usr/include/gnutls/compat.h	81;"	d
gnutls_x509_crl_check_issuer	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_check_issuer (gnutls_x509_crl_t crl,$/;"	p	signature:(gnutls_x509_crl_t crl, gnutls_x509_crt_t issuer)
gnutls_x509_crl_deinit	/usr/include/gnutls/x509.h	/^  void gnutls_x509_crl_deinit (gnutls_x509_crl_t crl);$/;"	p	signature:(gnutls_x509_crl_t crl)
gnutls_x509_crl_export	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_export (gnutls_x509_crl_t crl,$/;"	p	signature:(gnutls_x509_crl_t crl, gnutls_x509_crt_fmt_t format, void *output_data, size_t * output_data_size)
gnutls_x509_crl_get_authority_key_id	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_get_authority_key_id (gnutls_x509_crl_t crl, void *ret,$/;"	p	signature:(gnutls_x509_crl_t crl, void *ret, size_t * ret_size, unsigned int *critical)
gnutls_x509_crl_get_certificate	/usr/include/gnutls/x509.h	466;"	d
gnutls_x509_crl_get_certificate_count	/usr/include/gnutls/x509.h	465;"	d
gnutls_x509_crl_get_crt_count	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_get_crt_count (gnutls_x509_crl_t crl);$/;"	p	signature:(gnutls_x509_crl_t crl)
gnutls_x509_crl_get_crt_serial	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_get_crt_serial (gnutls_x509_crl_t crl, int indx,$/;"	p	signature:(gnutls_x509_crl_t crl, int indx, unsigned char *serial, size_t * serial_size, time_t * t)
gnutls_x509_crl_get_dn_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_get_dn_oid (gnutls_x509_crl_t crl, int indx,$/;"	p	signature:(gnutls_x509_crl_t crl, int indx, void *oid, size_t * sizeof_oid)
gnutls_x509_crl_get_extension_data	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_get_extension_data (gnutls_x509_crl_t crl, int indx,$/;"	p	signature:(gnutls_x509_crl_t crl, int indx, void *data, size_t * sizeof_data)
gnutls_x509_crl_get_extension_info	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_get_extension_info (gnutls_x509_crl_t crl, int indx,$/;"	p	signature:(gnutls_x509_crl_t crl, int indx, void *oid, size_t * sizeof_oid, int *critical)
gnutls_x509_crl_get_extension_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_get_extension_oid (gnutls_x509_crl_t crl, int indx,$/;"	p	signature:(gnutls_x509_crl_t crl, int indx, void *oid, size_t * sizeof_oid)
gnutls_x509_crl_get_issuer_dn	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_get_issuer_dn (const gnutls_x509_crl_t crl,$/;"	p	signature:(const gnutls_x509_crl_t crl, char *buf, size_t * sizeof_buf)
gnutls_x509_crl_get_issuer_dn_by_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_get_issuer_dn_by_oid (gnutls_x509_crl_t crl,$/;"	p	signature:(gnutls_x509_crl_t crl, const char *oid, int indx, unsigned int raw_flag, void *buf, size_t * sizeof_buf)
gnutls_x509_crl_get_next_update	/usr/include/gnutls/x509.h	/^  time_t gnutls_x509_crl_get_next_update (gnutls_x509_crl_t crl);$/;"	p	signature:(gnutls_x509_crl_t crl)
gnutls_x509_crl_get_number	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_get_number (gnutls_x509_crl_t crl, void *ret,$/;"	p	signature:(gnutls_x509_crl_t crl, void *ret, size_t * ret_size, unsigned int *critical)
gnutls_x509_crl_get_raw_issuer_dn	/usr/include/gnutls/x509.h	/^  gnutls_x509_crl_get_raw_issuer_dn (gnutls_x509_crl_t crl,$/;"	p	signature:(gnutls_x509_crl_t crl, gnutls_datum_t * dn)
gnutls_x509_crl_get_signature	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_get_signature (gnutls_x509_crl_t crl,$/;"	p	signature:(gnutls_x509_crl_t crl, char *sig, size_t * sizeof_sig)
gnutls_x509_crl_get_signature_algorithm	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_get_signature_algorithm (gnutls_x509_crl_t crl);$/;"	p	signature:(gnutls_x509_crl_t crl)
gnutls_x509_crl_get_this_update	/usr/include/gnutls/x509.h	/^  time_t gnutls_x509_crl_get_this_update (gnutls_x509_crl_t crl);$/;"	p	signature:(gnutls_x509_crl_t crl)
gnutls_x509_crl_get_version	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_get_version (gnutls_x509_crl_t crl);$/;"	p	signature:(gnutls_x509_crl_t crl)
gnutls_x509_crl_import	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_import (gnutls_x509_crl_t crl,$/;"	p	signature:(gnutls_x509_crl_t crl, const gnutls_datum_t * data, gnutls_x509_crt_fmt_t format)
gnutls_x509_crl_init	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_init (gnutls_x509_crl_t * crl);$/;"	p	signature:(gnutls_x509_crl_t * crl)
gnutls_x509_crl_list_import	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_list_import (gnutls_x509_crl_t * crls,$/;"	p	signature:(gnutls_x509_crl_t * crls, unsigned int *crl_max, const gnutls_datum_t * data, gnutls_x509_crt_fmt_t format, unsigned int flags)
gnutls_x509_crl_list_import2	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_list_import2 (gnutls_x509_crl_t ** crls,$/;"	p	signature:(gnutls_x509_crl_t ** crls, unsigned int * size, const gnutls_datum_t * data, gnutls_x509_crt_fmt_t format, unsigned int flags)
gnutls_x509_crl_print	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_print (gnutls_x509_crl_t crl,$/;"	p	signature:(gnutls_x509_crl_t crl, gnutls_certificate_print_formats_t format, gnutls_datum_t * out)
gnutls_x509_crl_privkey_sign	/usr/include/gnutls/abstract.h	/^int gnutls_x509_crl_privkey_sign (gnutls_x509_crl_t crl,$/;"	p	signature:(gnutls_x509_crl_t crl, gnutls_x509_crt_t issuer, gnutls_privkey_t issuer_key, gnutls_digest_algorithm_t dig, unsigned int flags)
gnutls_x509_crl_set_authority_key_id	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_set_authority_key_id (gnutls_x509_crl_t crl,$/;"	p	signature:(gnutls_x509_crl_t crl, const void *id, size_t id_size)
gnutls_x509_crl_set_crt	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_set_crt (gnutls_x509_crl_t crl,$/;"	p	signature:(gnutls_x509_crl_t crl, gnutls_x509_crt_t crt, time_t revocation_time)
gnutls_x509_crl_set_crt_serial	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_set_crt_serial (gnutls_x509_crl_t crl,$/;"	p	signature:(gnutls_x509_crl_t crl, const void *serial, size_t serial_size, time_t revocation_time)
gnutls_x509_crl_set_next_update	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_set_next_update (gnutls_x509_crl_t crl,$/;"	p	signature:(gnutls_x509_crl_t crl, time_t exp_time)
gnutls_x509_crl_set_number	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_set_number (gnutls_x509_crl_t crl,$/;"	p	signature:(gnutls_x509_crl_t crl, const void *nr, size_t nr_size)
gnutls_x509_crl_set_this_update	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_set_this_update (gnutls_x509_crl_t crl,$/;"	p	signature:(gnutls_x509_crl_t crl, time_t act_time)
gnutls_x509_crl_set_version	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_set_version (gnutls_x509_crl_t crl,$/;"	p	signature:(gnutls_x509_crl_t crl, unsigned int version)
gnutls_x509_crl_sign2	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_sign2 (gnutls_x509_crl_t crl,$/;"	p	signature:(gnutls_x509_crl_t crl, gnutls_x509_crt_t issuer, gnutls_x509_privkey_t issuer_key, gnutls_digest_algorithm_t dig, unsigned int flags)
gnutls_x509_crl_t	/usr/include/gnutls/gnutls.h	/^  typedef struct gnutls_x509_crl_int *gnutls_x509_crl_t;$/;"	t	typeref:struct:gnutls_x509_crl_int
gnutls_x509_crl_verify	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crl_verify (gnutls_x509_crl_t crl,$/;"	p	signature:(gnutls_x509_crl_t crl, const gnutls_x509_crt_t * CA_list, int CA_list_length, unsigned int flags, unsigned int *verify)
gnutls_x509_crq	/usr/include/gnutls/compat.h	83;"	d
gnutls_x509_crq_deinit	/usr/include/gnutls/x509.h	/^  void gnutls_x509_crq_deinit (gnutls_x509_crq_t crq);$/;"	p	signature:(gnutls_x509_crq_t crq)
gnutls_x509_crq_export	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_export (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, gnutls_x509_crt_fmt_t format, void *output_data, size_t * output_data_size)
gnutls_x509_crq_get_attribute_by_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_attribute_by_oid (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, const char *oid, int indx, void *buf, size_t * sizeof_buf)
gnutls_x509_crq_get_attribute_data	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_attribute_data (gnutls_x509_crq_t crq, int indx,$/;"	p	signature:(gnutls_x509_crq_t crq, int indx, void *data, size_t * sizeof_data)
gnutls_x509_crq_get_attribute_info	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_attribute_info (gnutls_x509_crq_t crq, int indx,$/;"	p	signature:(gnutls_x509_crq_t crq, int indx, void *oid, size_t * sizeof_oid)
gnutls_x509_crq_get_basic_constraints	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_basic_constraints (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, unsigned int *critical, unsigned int *ca, int *pathlen)
gnutls_x509_crq_get_challenge_password	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_challenge_password (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, char *pass, size_t * sizeof_pass)
gnutls_x509_crq_get_dn	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_dn (gnutls_x509_crq_t crq, char *buf,$/;"	p	signature:(gnutls_x509_crq_t crq, char *buf, size_t * sizeof_buf)
gnutls_x509_crq_get_dn_by_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_dn_by_oid (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, const char *oid, int indx, unsigned int raw_flag, void *buf, size_t * sizeof_buf)
gnutls_x509_crq_get_dn_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_dn_oid (gnutls_x509_crq_t crq, int indx,$/;"	p	signature:(gnutls_x509_crq_t crq, int indx, void *oid, size_t * sizeof_oid)
gnutls_x509_crq_get_extension_by_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_extension_by_oid (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, const char *oid, int indx, void *buf, size_t * sizeof_buf, unsigned int *critical)
gnutls_x509_crq_get_extension_data	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_extension_data (gnutls_x509_crq_t crq, int indx,$/;"	p	signature:(gnutls_x509_crq_t crq, int indx, void *data, size_t * sizeof_data)
gnutls_x509_crq_get_extension_info	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_extension_info (gnutls_x509_crq_t crq, int indx,$/;"	p	signature:(gnutls_x509_crq_t crq, int indx, void *oid, size_t * sizeof_oid, unsigned int *critical)
gnutls_x509_crq_get_key_id	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_key_id (gnutls_x509_crq_t crq, unsigned int flags,$/;"	p	signature:(gnutls_x509_crq_t crq, unsigned int flags, unsigned char *output_data, size_t * output_data_size)
gnutls_x509_crq_get_key_purpose_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_key_purpose_oid (gnutls_x509_crq_t crq, int indx,$/;"	p	signature:(gnutls_x509_crq_t crq, int indx, void *oid, size_t * sizeof_oid, unsigned int *critical)
gnutls_x509_crq_get_key_rsa_raw	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_key_rsa_raw (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, gnutls_datum_t * m, gnutls_datum_t * e)
gnutls_x509_crq_get_key_usage	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_key_usage (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, unsigned int *key_usage, unsigned int *critical)
gnutls_x509_crq_get_pk_algorithm	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_pk_algorithm (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, unsigned int *bits)
gnutls_x509_crq_get_subject_alt_name	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_subject_alt_name (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, unsigned int seq, void *ret, size_t * ret_size, unsigned int *ret_type, unsigned int *critical)
gnutls_x509_crq_get_subject_alt_othername_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_subject_alt_othername_oid (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, unsigned int seq, void *ret, size_t * ret_size)
gnutls_x509_crq_get_version	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_get_version (gnutls_x509_crq_t crq);$/;"	p	signature:(gnutls_x509_crq_t crq)
gnutls_x509_crq_import	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_import (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, const gnutls_datum_t * data, gnutls_x509_crt_fmt_t format)
gnutls_x509_crq_init	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_init (gnutls_x509_crq_t * crq);$/;"	p	signature:(gnutls_x509_crq_t * crq)
gnutls_x509_crq_print	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_print (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, gnutls_certificate_print_formats_t format, gnutls_datum_t * out)
gnutls_x509_crq_privkey_sign	/usr/include/gnutls/abstract.h	/^int gnutls_x509_crq_privkey_sign (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, gnutls_privkey_t key, gnutls_digest_algorithm_t dig, unsigned int flags)
gnutls_x509_crq_set_attribute_by_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_set_attribute_by_oid (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, const char *oid, void *buf, size_t sizeof_buf)
gnutls_x509_crq_set_basic_constraints	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_set_basic_constraints (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, unsigned int ca, int pathLenConstraint)
gnutls_x509_crq_set_challenge_password	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_set_challenge_password (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, const char *pass)
gnutls_x509_crq_set_dn_by_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_set_dn_by_oid (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, const char *oid, unsigned int raw_flag, const void *data, unsigned int sizeof_data)
gnutls_x509_crq_set_key	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_set_key (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, gnutls_x509_privkey_t key)
gnutls_x509_crq_set_key_purpose_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_set_key_purpose_oid (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, const void *oid, unsigned int critical)
gnutls_x509_crq_set_key_rsa_raw	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_set_key_rsa_raw (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, const gnutls_datum_t * m, const gnutls_datum_t * e)
gnutls_x509_crq_set_key_usage	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_set_key_usage (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, unsigned int usage)
gnutls_x509_crq_set_pubkey	/usr/include/gnutls/abstract.h	/^int gnutls_x509_crq_set_pubkey (gnutls_x509_crq_t crq, gnutls_pubkey_t key);$/;"	p	signature:(gnutls_x509_crq_t crq, gnutls_pubkey_t key)
gnutls_x509_crq_set_subject_alt_name	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_set_subject_alt_name (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, gnutls_x509_subject_alt_name_t nt, const void *data, unsigned int data_size, unsigned int flags)
gnutls_x509_crq_set_version	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_set_version (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, unsigned int version)
gnutls_x509_crq_sign2	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_sign2 (gnutls_x509_crq_t crq,$/;"	p	signature:(gnutls_x509_crq_t crq, gnutls_x509_privkey_t key, gnutls_digest_algorithm_t dig, unsigned int flags)
gnutls_x509_crq_t	/usr/include/gnutls/gnutls.h	/^  typedef struct gnutls_x509_crq_int *gnutls_x509_crq_t;$/;"	t	typeref:struct:gnutls_x509_crq_int
gnutls_x509_crq_verify	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crq_verify (gnutls_x509_crq_t crq, unsigned int flags);$/;"	p	signature:(gnutls_x509_crq_t crq, unsigned int flags)
gnutls_x509_crt	/usr/include/gnutls/compat.h	79;"	d
gnutls_x509_crt_check_hostname	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_check_hostname (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, const char *hostname)
gnutls_x509_crt_check_issuer	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_check_issuer (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, gnutls_x509_crt_t issuer)
gnutls_x509_crt_check_revocation	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_check_revocation (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, const gnutls_x509_crl_t * crl_list, int crl_list_length)
gnutls_x509_crt_cpy_crl_dist_points	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_cpy_crl_dist_points (gnutls_x509_crt_t dst,$/;"	p	signature:(gnutls_x509_crt_t dst, gnutls_x509_crt_t src)
gnutls_x509_crt_deinit	/usr/include/gnutls/x509.h	/^  void gnutls_x509_crt_deinit (gnutls_x509_crt_t cert);$/;"	p	signature:(gnutls_x509_crt_t cert)
gnutls_x509_crt_export	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_export (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, gnutls_x509_crt_fmt_t format, void *output_data, size_t * output_data_size)
gnutls_x509_crt_fmt	/usr/include/gnutls/compat.h	62;"	d
gnutls_x509_crt_fmt_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_x509_crt_fmt_t;$/;"	t	typeref:enum:__anon16
gnutls_x509_crt_get_activation_time	/usr/include/gnutls/x509.h	/^  time_t gnutls_x509_crt_get_activation_time (gnutls_x509_crt_t cert);$/;"	p	signature:(gnutls_x509_crt_t cert)
gnutls_x509_crt_get_authority_info_access	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_authority_info_access (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, unsigned int seq, int what, gnutls_datum_t * data, int *critical)
gnutls_x509_crt_get_authority_key_id	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_authority_key_id (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, void *ret, size_t * ret_size, unsigned int *critical)
gnutls_x509_crt_get_basic_constraints	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_basic_constraints (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, unsigned int *critical, unsigned int *ca, int *pathlen)
gnutls_x509_crt_get_ca_status	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_ca_status (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, unsigned int *critical)
gnutls_x509_crt_get_crl_dist_points	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_crl_dist_points (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, unsigned int seq, void *ret, size_t * ret_size, unsigned int *reason_flags, unsigned int *critical)
gnutls_x509_crt_get_dn	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_dn (gnutls_x509_crt_t cert, char *buf,$/;"	p	signature:(gnutls_x509_crt_t cert, char *buf, size_t * buf_size)
gnutls_x509_crt_get_dn_by_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_dn_by_oid (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, const char *oid, int indx, unsigned int raw_flag, void *buf, size_t * buf_size)
gnutls_x509_crt_get_dn_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_dn_oid (gnutls_x509_crt_t cert, int indx,$/;"	p	signature:(gnutls_x509_crt_t cert, int indx, void *oid, size_t * oid_size)
gnutls_x509_crt_get_expiration_time	/usr/include/gnutls/x509.h	/^  time_t gnutls_x509_crt_get_expiration_time (gnutls_x509_crt_t cert);$/;"	p	signature:(gnutls_x509_crt_t cert)
gnutls_x509_crt_get_extension_by_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_extension_by_oid (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, const char *oid, int indx, void *buf, size_t * buf_size, unsigned int *critical)
gnutls_x509_crt_get_extension_data	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_extension_data (gnutls_x509_crt_t cert, int indx,$/;"	p	signature:(gnutls_x509_crt_t cert, int indx, void *data, size_t * sizeof_data)
gnutls_x509_crt_get_extension_info	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_extension_info (gnutls_x509_crt_t cert, int indx,$/;"	p	signature:(gnutls_x509_crt_t cert, int indx, void *oid, size_t * oid_size, unsigned int *critical)
gnutls_x509_crt_get_extension_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_extension_oid (gnutls_x509_crt_t cert, int indx,$/;"	p	signature:(gnutls_x509_crt_t cert, int indx, void *oid, size_t * oid_size)
gnutls_x509_crt_get_fingerprint	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_fingerprint (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, gnutls_digest_algorithm_t algo, void *buf, size_t * buf_size)
gnutls_x509_crt_get_issuer	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_issuer (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, gnutls_x509_dn_t * dn)
gnutls_x509_crt_get_issuer_alt_name	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_issuer_alt_name (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, unsigned int seq, void *ret, size_t * ret_size, unsigned int *critical)
gnutls_x509_crt_get_issuer_alt_name2	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_issuer_alt_name2 (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, unsigned int seq, void *ret, size_t * ret_size, unsigned int *ret_type, unsigned int *critical)
gnutls_x509_crt_get_issuer_alt_othername_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_issuer_alt_othername_oid (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, unsigned int seq, void *ret, size_t * ret_size)
gnutls_x509_crt_get_issuer_dn	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_issuer_dn (gnutls_x509_crt_t cert, char *buf,$/;"	p	signature:(gnutls_x509_crt_t cert, char *buf, size_t * buf_size)
gnutls_x509_crt_get_issuer_dn_by_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_issuer_dn_by_oid (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, const char *oid, int indx, unsigned int raw_flag, void *buf, size_t * buf_size)
gnutls_x509_crt_get_issuer_dn_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_issuer_dn_oid (gnutls_x509_crt_t cert, int indx,$/;"	p	signature:(gnutls_x509_crt_t cert, int indx, void *oid, size_t * oid_size)
gnutls_x509_crt_get_issuer_unique_id	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_issuer_unique_id (gnutls_x509_crt_t crt, char *buf,$/;"	p	signature:(gnutls_x509_crt_t crt, char *buf, size_t * buf_size)
gnutls_x509_crt_get_key_id	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_key_id (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, unsigned int flags, unsigned char *output_data, size_t * output_data_size)
gnutls_x509_crt_get_key_purpose_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_key_purpose_oid (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, int indx, void *oid, size_t * oid_size, unsigned int *critical)
gnutls_x509_crt_get_key_usage	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_key_usage (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, unsigned int *key_usage, unsigned int *critical)
gnutls_x509_crt_get_pk_algorithm	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_pk_algorithm (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, unsigned int *bits)
gnutls_x509_crt_get_pk_dsa_raw	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_pk_dsa_raw (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, gnutls_datum_t * p, gnutls_datum_t * q, gnutls_datum_t * g, gnutls_datum_t * y)
gnutls_x509_crt_get_pk_rsa_raw	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_pk_rsa_raw (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, gnutls_datum_t * m, gnutls_datum_t * e)
gnutls_x509_crt_get_proxy	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_proxy (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, unsigned int *critical, int *pathlen, char **policyLanguage, char **policy, size_t * sizeof_policy)
gnutls_x509_crt_get_raw_dn	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_raw_dn (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, gnutls_datum_t * start)
gnutls_x509_crt_get_raw_issuer_dn	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_raw_issuer_dn (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, gnutls_datum_t * start)
gnutls_x509_crt_get_serial	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_serial (gnutls_x509_crt_t cert, void *result,$/;"	p	signature:(gnutls_x509_crt_t cert, void *result, size_t * result_size)
gnutls_x509_crt_get_signature	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_signature (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, char *sig, size_t * sizeof_sig)
gnutls_x509_crt_get_signature_algorithm	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_signature_algorithm (gnutls_x509_crt_t cert);$/;"	p	signature:(gnutls_x509_crt_t cert)
gnutls_x509_crt_get_subject	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_subject (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, gnutls_x509_dn_t * dn)
gnutls_x509_crt_get_subject_alt_name	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_subject_alt_name (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, unsigned int seq, void *ret, size_t * ret_size, unsigned int *critical)
gnutls_x509_crt_get_subject_alt_name2	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_subject_alt_name2 (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, unsigned int seq, void *ret, size_t * ret_size, unsigned int *ret_type, unsigned int *critical)
gnutls_x509_crt_get_subject_alt_othername_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_subject_alt_othername_oid (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, unsigned int seq, void *oid, size_t * oid_size)
gnutls_x509_crt_get_subject_key_id	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_subject_key_id (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, void *ret, size_t * ret_size, unsigned int *critical)
gnutls_x509_crt_get_subject_unique_id	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_subject_unique_id (gnutls_x509_crt_t crt, char *buf,$/;"	p	signature:(gnutls_x509_crt_t crt, char *buf, size_t * buf_size)
gnutls_x509_crt_get_version	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_get_version (gnutls_x509_crt_t cert);$/;"	p	signature:(gnutls_x509_crt_t cert)
gnutls_x509_crt_import	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_import (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, const gnutls_datum_t * data, gnutls_x509_crt_fmt_t format)
gnutls_x509_crt_import_pkcs11	/usr/include/gnutls/pkcs11.h	/^int gnutls_x509_crt_import_pkcs11 (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, gnutls_pkcs11_obj_t pkcs11_crt)
gnutls_x509_crt_import_pkcs11_url	/usr/include/gnutls/pkcs11.h	/^int gnutls_x509_crt_import_pkcs11_url (gnutls_x509_crt_t crt, const char *url,$/;"	p	signature:(gnutls_x509_crt_t crt, const char *url, unsigned int flags )
gnutls_x509_crt_init	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_init (gnutls_x509_crt_t * cert);$/;"	p	signature:(gnutls_x509_crt_t * cert)
gnutls_x509_crt_list_import	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_list_import (gnutls_x509_crt_t * certs,$/;"	p	signature:(gnutls_x509_crt_t * certs, unsigned int *cert_max, const gnutls_datum_t * data, gnutls_x509_crt_fmt_t format, unsigned int flags)
gnutls_x509_crt_list_import2	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_list_import2 (gnutls_x509_crt_t ** certs,$/;"	p	signature:(gnutls_x509_crt_t ** certs, unsigned int * size, const gnutls_datum_t * data, gnutls_x509_crt_fmt_t format, unsigned int flags)
gnutls_x509_crt_list_import_pkcs11	/usr/include/gnutls/pkcs11.h	/^int gnutls_x509_crt_list_import_pkcs11 (gnutls_x509_crt_t * certs,$/;"	p	signature:(gnutls_x509_crt_t * certs, unsigned int cert_max, gnutls_pkcs11_obj_t * const objs, unsigned int flags )
gnutls_x509_crt_list_verify	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_list_verify (const gnutls_x509_crt_t * cert_list,$/;"	p	signature:(const gnutls_x509_crt_t * cert_list, int cert_list_length, const gnutls_x509_crt_t * CA_list, int CA_list_length, const gnutls_x509_crl_t * CRL_list, int CRL_list_length, unsigned int flags, unsigned int *verify)
gnutls_x509_crt_print	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_print (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, gnutls_certificate_print_formats_t format, gnutls_datum_t * out)
gnutls_x509_crt_privkey_sign	/usr/include/gnutls/abstract.h	/^int gnutls_x509_crt_privkey_sign (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, gnutls_x509_crt_t issuer, gnutls_privkey_t issuer_key, gnutls_digest_algorithm_t dig, unsigned int flags)
gnutls_x509_crt_set_activation_time	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_activation_time (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, time_t act_time)
gnutls_x509_crt_set_authority_key_id	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_authority_key_id (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, const void *id, size_t id_size)
gnutls_x509_crt_set_basic_constraints	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_basic_constraints (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, unsigned int ca, int pathLenConstraint)
gnutls_x509_crt_set_ca_status	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_ca_status (gnutls_x509_crt_t crt, unsigned int ca);$/;"	p	signature:(gnutls_x509_crt_t crt, unsigned int ca)
gnutls_x509_crt_set_crl_dist_points	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_crl_dist_points (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, gnutls_x509_subject_alt_name_t type, const void *data_string, unsigned int reason_flags)
gnutls_x509_crt_set_crl_dist_points2	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_crl_dist_points2 (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, gnutls_x509_subject_alt_name_t type, const void *data, unsigned int data_size, unsigned int reason_flags)
gnutls_x509_crt_set_crq	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_crq (gnutls_x509_crt_t crt, gnutls_x509_crq_t crq);$/;"	p	signature:(gnutls_x509_crt_t crt, gnutls_x509_crq_t crq)
gnutls_x509_crt_set_crq_extensions	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_crq_extensions (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, gnutls_x509_crq_t crq)
gnutls_x509_crt_set_dn_by_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_dn_by_oid (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, const char *oid, unsigned int raw_flag, const void *name, unsigned int sizeof_name)
gnutls_x509_crt_set_expiration_time	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_expiration_time (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, time_t exp_time)
gnutls_x509_crt_set_extension_by_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_extension_by_oid (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, const char *oid, const void *buf, size_t sizeof_buf, unsigned int critical)
gnutls_x509_crt_set_issuer_dn_by_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_issuer_dn_by_oid (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, const char *oid, unsigned int raw_flag, const void *name, unsigned int sizeof_name)
gnutls_x509_crt_set_key	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_key (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, gnutls_x509_privkey_t key)
gnutls_x509_crt_set_key_purpose_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_key_purpose_oid (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, const void *oid, unsigned int critical)
gnutls_x509_crt_set_key_usage	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_key_usage (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, unsigned int usage)
gnutls_x509_crt_set_proxy	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_proxy (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, int pathLenConstraint, const char *policyLanguage, const char *policy, size_t sizeof_policy)
gnutls_x509_crt_set_proxy_dn	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_proxy_dn (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, gnutls_x509_crt_t eecrt, unsigned int raw_flag, const void *name, unsigned int sizeof_name)
gnutls_x509_crt_set_pubkey	/usr/include/gnutls/abstract.h	/^int gnutls_x509_crt_set_pubkey (gnutls_x509_crt_t crt, gnutls_pubkey_t key);$/;"	p	signature:(gnutls_x509_crt_t crt, gnutls_pubkey_t key)
gnutls_x509_crt_set_serial	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_serial (gnutls_x509_crt_t cert, const void *serial,$/;"	p	signature:(gnutls_x509_crt_t cert, const void *serial, size_t serial_size)
gnutls_x509_crt_set_subject_alt_name	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_subject_alt_name (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, gnutls_x509_subject_alt_name_t type, const void *data, unsigned int data_size, unsigned int flags)
gnutls_x509_crt_set_subject_alternative_name	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_subject_alternative_name (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, gnutls_x509_subject_alt_name_t type, const char *data_string)
gnutls_x509_crt_set_subject_key_id	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_subject_key_id (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, const void *id, size_t id_size)
gnutls_x509_crt_set_version	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_set_version (gnutls_x509_crt_t crt,$/;"	p	signature:(gnutls_x509_crt_t crt, unsigned int version)
gnutls_x509_crt_sign	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_sign (gnutls_x509_crt_t crt, gnutls_x509_crt_t issuer,$/;"	p	signature:(gnutls_x509_crt_t crt, gnutls_x509_crt_t issuer, gnutls_x509_privkey_t issuer_key)
gnutls_x509_crt_sign2	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_sign2 (gnutls_x509_crt_t crt, gnutls_x509_crt_t issuer,$/;"	p	signature:(gnutls_x509_crt_t crt, gnutls_x509_crt_t issuer, gnutls_x509_privkey_t issuer_key, gnutls_digest_algorithm_t dig, unsigned int flags)
gnutls_x509_crt_t	/usr/include/gnutls/gnutls.h	/^  typedef struct gnutls_x509_crt_int *gnutls_x509_crt_t;$/;"	t	typeref:struct:gnutls_x509_crt_int
gnutls_x509_crt_verify	/usr/include/gnutls/x509.h	/^  int gnutls_x509_crt_verify (gnutls_x509_crt_t cert,$/;"	p	signature:(gnutls_x509_crt_t cert, const gnutls_x509_crt_t * CA_list, int CA_list_length, unsigned int flags, unsigned int *verify)
gnutls_x509_dn	/usr/include/gnutls/openssl.h	/^  } gnutls_x509_dn;$/;"	t	typeref:struct:__anon31
gnutls_x509_dn_deinit	/usr/include/gnutls/x509.h	/^  void gnutls_x509_dn_deinit (gnutls_x509_dn_t dn);$/;"	p	signature:(gnutls_x509_dn_t dn)
gnutls_x509_dn_export	/usr/include/gnutls/x509.h	/^  int gnutls_x509_dn_export (gnutls_x509_dn_t dn,$/;"	p	signature:(gnutls_x509_dn_t dn, gnutls_x509_crt_fmt_t format, void *output_data, size_t * output_data_size)
gnutls_x509_dn_get_rdn_ava	/usr/include/gnutls/x509.h	/^  int gnutls_x509_dn_get_rdn_ava (gnutls_x509_dn_t dn, int irdn,$/;"	p	signature:(gnutls_x509_dn_t dn, int irdn, int iava, gnutls_x509_ava_st * ava)
gnutls_x509_dn_import	/usr/include/gnutls/x509.h	/^  int gnutls_x509_dn_import (gnutls_x509_dn_t dn,$/;"	p	signature:(gnutls_x509_dn_t dn, const gnutls_datum_t * data)
gnutls_x509_dn_init	/usr/include/gnutls/x509.h	/^  int gnutls_x509_dn_init (gnutls_x509_dn_t * dn);$/;"	p	signature:(gnutls_x509_dn_t * dn)
gnutls_x509_dn_oid_known	/usr/include/gnutls/x509.h	/^  int gnutls_x509_dn_oid_known (const char *oid);$/;"	p	signature:(const char *oid)
gnutls_x509_dn_t	/usr/include/gnutls/x509.h	/^  typedef void *gnutls_x509_dn_t;$/;"	t
gnutls_x509_privkey	/usr/include/gnutls/compat.h	80;"	d
gnutls_x509_privkey_cpy	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_cpy (gnutls_x509_privkey_t dst,$/;"	p	signature:(gnutls_x509_privkey_t dst, gnutls_x509_privkey_t src)
gnutls_x509_privkey_deinit	/usr/include/gnutls/x509.h	/^  void gnutls_x509_privkey_deinit (gnutls_x509_privkey_t key);$/;"	p	signature:(gnutls_x509_privkey_t key)
gnutls_x509_privkey_export	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_export (gnutls_x509_privkey_t key,$/;"	p	signature:(gnutls_x509_privkey_t key, gnutls_x509_crt_fmt_t format, void *output_data, size_t * output_data_size)
gnutls_x509_privkey_export_dsa_raw	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_export_dsa_raw (gnutls_x509_privkey_t key,$/;"	p	signature:(gnutls_x509_privkey_t key, gnutls_datum_t * p, gnutls_datum_t * q, gnutls_datum_t * g, gnutls_datum_t * y, gnutls_datum_t * x)
gnutls_x509_privkey_export_ecc_raw	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_export_ecc_raw (gnutls_x509_privkey_t key, $/;"	p	signature:(gnutls_x509_privkey_t key, gnutls_ecc_curve_t *curve, gnutls_datum_t * x, gnutls_datum_t * y, gnutls_datum_t* k)
gnutls_x509_privkey_export_pkcs8	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_export_pkcs8 (gnutls_x509_privkey_t key,$/;"	p	signature:(gnutls_x509_privkey_t key, gnutls_x509_crt_fmt_t format, const char *password, unsigned int flags, void *output_data, size_t * output_data_size)
gnutls_x509_privkey_export_rsa_raw	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_export_rsa_raw (gnutls_x509_privkey_t key,$/;"	p	signature:(gnutls_x509_privkey_t key, gnutls_datum_t * m, gnutls_datum_t * e, gnutls_datum_t * d, gnutls_datum_t * p, gnutls_datum_t * q, gnutls_datum_t * u)
gnutls_x509_privkey_export_rsa_raw2	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_export_rsa_raw2 (gnutls_x509_privkey_t key,$/;"	p	signature:(gnutls_x509_privkey_t key, gnutls_datum_t * m, gnutls_datum_t * e, gnutls_datum_t * d, gnutls_datum_t * p, gnutls_datum_t * q, gnutls_datum_t * u, gnutls_datum_t * e1, gnutls_datum_t * e2)
gnutls_x509_privkey_fix	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_fix (gnutls_x509_privkey_t key);$/;"	p	signature:(gnutls_x509_privkey_t key)
gnutls_x509_privkey_generate	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_generate (gnutls_x509_privkey_t key,$/;"	p	signature:(gnutls_x509_privkey_t key, gnutls_pk_algorithm_t algo, unsigned int bits, unsigned int flags)
gnutls_x509_privkey_get_key_id	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_get_key_id (gnutls_x509_privkey_t key,$/;"	p	signature:(gnutls_x509_privkey_t key, unsigned int flags, unsigned char *output_data, size_t * output_data_size)
gnutls_x509_privkey_get_pk_algorithm	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_get_pk_algorithm (gnutls_x509_privkey_t key);$/;"	p	signature:(gnutls_x509_privkey_t key)
gnutls_x509_privkey_import	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_import (gnutls_x509_privkey_t key,$/;"	p	signature:(gnutls_x509_privkey_t key, const gnutls_datum_t * data, gnutls_x509_crt_fmt_t format)
gnutls_x509_privkey_import_dsa_raw	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_import_dsa_raw (gnutls_x509_privkey_t key,$/;"	p	signature:(gnutls_x509_privkey_t key, const gnutls_datum_t * p, const gnutls_datum_t * q, const gnutls_datum_t * g, const gnutls_datum_t * y, const gnutls_datum_t * x)
gnutls_x509_privkey_import_ecc_raw	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_import_ecc_raw (gnutls_x509_privkey_t key,$/;"	p	signature:(gnutls_x509_privkey_t key, gnutls_ecc_curve_t curve, const gnutls_datum_t * x, const gnutls_datum_t * y, const gnutls_datum_t * k)
gnutls_x509_privkey_import_pkcs8	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_import_pkcs8 (gnutls_x509_privkey_t key,$/;"	p	signature:(gnutls_x509_privkey_t key, const gnutls_datum_t * data, gnutls_x509_crt_fmt_t format, const char *password, unsigned int flags)
gnutls_x509_privkey_import_rsa_raw	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_import_rsa_raw (gnutls_x509_privkey_t key,$/;"	p	signature:(gnutls_x509_privkey_t key, const gnutls_datum_t * m, const gnutls_datum_t * e, const gnutls_datum_t * d, const gnutls_datum_t * p, const gnutls_datum_t * q, const gnutls_datum_t * u)
gnutls_x509_privkey_import_rsa_raw2	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_import_rsa_raw2 (gnutls_x509_privkey_t key,$/;"	p	signature:(gnutls_x509_privkey_t key, const gnutls_datum_t * m, const gnutls_datum_t * e, const gnutls_datum_t * d, const gnutls_datum_t * p, const gnutls_datum_t * q, const gnutls_datum_t * u, const gnutls_datum_t * e1, const gnutls_datum_t * e2)
gnutls_x509_privkey_init	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_init (gnutls_x509_privkey_t * key);$/;"	p	signature:(gnutls_x509_privkey_t * key)
gnutls_x509_privkey_sec_param	/usr/include/gnutls/x509.h	/^  gnutls_sec_param_t gnutls_x509_privkey_sec_param (gnutls_x509_privkey_t$/;"	p	signature:(gnutls_x509_privkey_t key)
gnutls_x509_privkey_t	/usr/include/gnutls/gnutls.h	/^  typedef struct gnutls_x509_privkey_int *gnutls_x509_privkey_t;$/;"	t	typeref:struct:gnutls_x509_privkey_int
gnutls_x509_privkey_verify_params	/usr/include/gnutls/x509.h	/^  int gnutls_x509_privkey_verify_params (gnutls_x509_privkey_t key);$/;"	p	signature:(gnutls_x509_privkey_t key)
gnutls_x509_rdn_get	/usr/include/gnutls/x509.h	/^  int gnutls_x509_rdn_get (const gnutls_datum_t * idn,$/;"	p	signature:(const gnutls_datum_t * idn, char *buf, size_t * sizeof_buf)
gnutls_x509_rdn_get_by_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_rdn_get_by_oid (const gnutls_datum_t * idn,$/;"	p	signature:(const gnutls_datum_t * idn, const char *oid, int indx, unsigned int raw_flag, void *buf, size_t * sizeof_buf)
gnutls_x509_rdn_get_oid	/usr/include/gnutls/x509.h	/^  int gnutls_x509_rdn_get_oid (const gnutls_datum_t * idn,$/;"	p	signature:(const gnutls_datum_t * idn, int indx, void *buf, size_t * sizeof_buf)
gnutls_x509_subject_alt_name	/usr/include/gnutls/compat.h	75;"	d
gnutls_x509_subject_alt_name_t	/usr/include/gnutls/gnutls.h	/^  typedef enum gnutls_x509_subject_alt_name_t$/;"	g
gnutls_x509_subject_alt_name_t	/usr/include/gnutls/gnutls.h	/^  } gnutls_x509_subject_alt_name_t;$/;"	t	typeref:enum:gnutls_x509_subject_alt_name_t
gnutls_x509_trust_list_add_cas	/usr/include/gnutls/x509.h	/^  gnutls_x509_trust_list_add_cas (gnutls_x509_trust_list_t list, $/;"	p	signature:(gnutls_x509_trust_list_t list, const gnutls_x509_crt_t * clist, int clist_size, unsigned int flags)
gnutls_x509_trust_list_add_crls	/usr/include/gnutls/x509.h	/^  gnutls_x509_trust_list_add_crls (gnutls_x509_trust_list_t list, $/;"	p	signature:(gnutls_x509_trust_list_t list, const gnutls_x509_crl_t * crl_list, int crl_size, unsigned int flags, unsigned int verification_flags)
gnutls_x509_trust_list_add_named_crt	/usr/include/gnutls/x509.h	/^  int gnutls_x509_trust_list_add_named_crt (gnutls_x509_trust_list_t list, $/;"	p	signature:(gnutls_x509_trust_list_t list, gnutls_x509_crt_t cert, const void* name, size_t name_size, unsigned int flags)
gnutls_x509_trust_list_deinit	/usr/include/gnutls/x509.h	/^  gnutls_x509_trust_list_deinit (gnutls_x509_trust_list_t list, unsigned int all);$/;"	p	signature:(gnutls_x509_trust_list_t list, unsigned int all)
gnutls_x509_trust_list_get_issuer	/usr/include/gnutls/x509.h	/^  int gnutls_x509_trust_list_get_issuer(gnutls_x509_trust_list_t list,$/;"	p	signature:(gnutls_x509_trust_list_t list, gnutls_x509_crt_t cert, gnutls_x509_crt_t* issuer, unsigned int flags)
gnutls_x509_trust_list_init	/usr/include/gnutls/x509.h	/^  gnutls_x509_trust_list_init (gnutls_x509_trust_list_t * list, unsigned int size);$/;"	p	signature:(gnutls_x509_trust_list_t * list, unsigned int size)
gnutls_x509_trust_list_t	/usr/include/gnutls/x509.h	/^  typedef struct gnutls_x509_trust_list_st *gnutls_x509_trust_list_t;$/;"	t	typeref:struct:gnutls_x509_trust_list_st
gnutls_x509_trust_list_verify_crt	/usr/include/gnutls/x509.h	/^  gnutls_x509_trust_list_verify_crt ($/;"	p	signature:( gnutls_x509_trust_list_t list, gnutls_x509_crt_t *cert_list, unsigned int cert_list_size, unsigned int flags, unsigned int *verify, gnutls_verify_output_function func)
gnutls_x509_trust_list_verify_named_crt	/usr/include/gnutls/x509.h	/^  int gnutls_x509_trust_list_verify_named_crt ($/;"	p	signature:( gnutls_x509_trust_list_t list, gnutls_x509_crt_t cert, const void * name, size_t name_size, unsigned int flags, unsigned int *verify, gnutls_verify_output_function func)
handle	/usr/include/gnutls/openssl.h	/^    void *handle;$/;"	m	struct:__anon35	access:public
handshake	/usr/include/gnutls/gnutlsxx.h	/^    int handshake ();$/;"	p	class:gnutls::session	access:public	signature:()
hsk_read_seq	/usr/include/gnutls/dtls.h	/^    unsigned int hsk_read_seq;$/;"	m	struct:__anon36	access:public
hsk_write_seq	/usr/include/gnutls/dtls.h	/^    unsigned int hsk_write_seq;$/;"	m	struct:__anon36	access:public
import_pkcs1	/usr/include/gnutls/gnutlsxx.h	/^    void import_pkcs1 (const gnutls_datum_t & pkcs1_params,$/;"	p	class:gnutls::rsa_params	access:public	signature:(const gnutls_datum_t & pkcs1_params, gnutls_x509_crt_fmt_t format)
import_pkcs3	/usr/include/gnutls/gnutlsxx.h	/^    void import_pkcs3 (const gnutls_datum_t & pkcs3_params,$/;"	p	class:gnutls::dh_params	access:public	signature:(const gnutls_datum_t & pkcs3_params, gnutls_x509_crt_fmt_t format)
import_raw	/usr/include/gnutls/gnutlsxx.h	/^    void import_raw (const gnutls_datum_t & m,$/;"	p	class:gnutls::rsa_params	access:public	signature:(const gnutls_datum_t & m, const gnutls_datum_t & e, const gnutls_datum_t & d, const gnutls_datum_t & p, const gnutls_datum_t & q, const gnutls_datum_t & u)
import_raw	/usr/include/gnutls/gnutlsxx.h	/^    void import_raw (const gnutls_datum_t & prime,$/;"	p	class:gnutls::dh_params	access:public	signature:(const gnutls_datum_t & prime, const gnutls_datum_t & generator)
iov_base	/usr/include/gnutls/gnutls.h	/^    void *iov_base;             \/* Starting address *\/$/;"	m	struct:__anon25	access:public
iov_len	/usr/include/gnutls/gnutls.h	/^    size_t iov_len;             \/* Number of bytes to transfer *\/$/;"	m	struct:__anon25	access:public
is_resumed	/usr/include/gnutls/gnutlsxx.h	/^    bool is_resumed () const;$/;"	p	class:gnutls::session	access:public	signature:() const
key	/usr/include/gnutls/compat.h	/^  } key;$/;"	m	struct:gnutls_retr_st	typeref:union:gnutls_retr_st::__anon30	access:public
key	/usr/include/gnutls/gnutls.h	/^    } key;$/;"	m	struct:gnutls_retr2_st	typeref:union:gnutls_retr2_st::__anon28	access:public
key_type	/usr/include/gnutls/gnutls.h	/^    gnutls_privkey_type_t key_type;$/;"	m	struct:gnutls_retr2_st	access:public
keyfile	/usr/include/gnutls/openssl.h	/^    char *keyfile;$/;"	m	struct:_SSL_CTX	access:public
keyfile_type	/usr/include/gnutls/openssl.h	/^    int keyfile_type;$/;"	m	struct:_SSL_CTX	access:public
kx	/usr/include/gnutls/openssl.h	/^    gnutls_kx_algorithm_t kx;$/;"	m	struct:__anon33	access:public
last_error	/usr/include/gnutls/openssl.h	/^    int last_error;$/;"	m	struct:_SSL	access:public
locality_name	/usr/include/gnutls/openssl.h	/^    char locality_name[GNUTLS_X509_L_SIZE];$/;"	m	struct:__anon31	access:public
mac	/usr/include/gnutls/openssl.h	/^    gnutls_mac_algorithm_t mac;$/;"	m	struct:__anon33	access:public
method	/usr/include/gnutls/openssl.h	/^    SSL_METHOD *method;$/;"	m	struct:_SSL_CTX	access:public
mutex_deinit_func	/usr/include/gnutls/gnutls.h	/^  typedef int (*mutex_deinit_func) (void **mutex);$/;"	t
mutex_init_func	/usr/include/gnutls/gnutls.h	/^  typedef int (*mutex_init_func) (void **mutex);$/;"	t
mutex_lock_func	/usr/include/gnutls/gnutls.h	/^  typedef int (*mutex_lock_func) (void **mutex);$/;"	t
mutex_unlock_func	/usr/include/gnutls/gnutls.h	/^  typedef int (*mutex_unlock_func) (void **mutex);$/;"	t
ncerts	/usr/include/gnutls/compat.h	/^  unsigned int ncerts;          \/* one for pgp keys *\/$/;"	m	struct:gnutls_retr_st	access:public
ncerts	/usr/include/gnutls/gnutls.h	/^    unsigned int ncerts;        \/* one for pgp keys *\/$/;"	m	struct:gnutls_retr2_st	access:public
noncopyable	/usr/include/gnutls/gnutlsxx.h	/^      noncopyable (const noncopyable &);$/;"	p	class:gnutls::noncopyable	access:private	signature:(const noncopyable &)
noncopyable	/usr/include/gnutls/gnutlsxx.h	/^    noncopyable ()$/;"	f	class:gnutls::noncopyable	access:protected	signature:()
noncopyable	/usr/include/gnutls/gnutlsxx.h	/^  class noncopyable$/;"	c	namespace:gnutls
oid	/usr/include/gnutls/x509.h	/^    gnutls_datum_t oid;$/;"	m	struct:gnutls_x509_ava_st	access:public
operator =	/usr/include/gnutls/gnutlsxx.h	/^      dh_params & operator= (const dh_params & src);$/;"	p	class:gnutls::dh_params	access:public	signature:(const dh_params & src)
operator =	/usr/include/gnutls/gnutlsxx.h	/^      rsa_params & operator= (const rsa_params & src);$/;"	p	class:gnutls::rsa_params	access:public	signature:(const rsa_params & src)
operator =	/usr/include/gnutls/gnutlsxx.h	/^    noncopyable & operator= (const noncopyable &);$/;"	p	class:gnutls::noncopyable	access:private	signature:(const noncopyable &)
options	/usr/include/gnutls/openssl.h	/^    unsigned long options;$/;"	m	struct:_SSL	access:public
options	/usr/include/gnutls/openssl.h	/^    unsigned long options;$/;"	m	struct:_SSL_CTX	access:public
organization	/usr/include/gnutls/openssl.h	/^    char organization[GNUTLS_X509_O_SIZE];$/;"	m	struct:__anon31	access:public
organizational_unit_name	/usr/include/gnutls/openssl.h	/^    char organizational_unit_name[GNUTLS_X509_OU_SIZE];$/;"	m	struct:__anon31	access:public
params	/usr/include/gnutls/gnutls.h	/^    union params$/;"	u	struct:gnutls_params_st	access:public
params	/usr/include/gnutls/gnutls.h	/^    } params;$/;"	m	struct:gnutls_params_st	typeref:union:gnutls_params_st::params	access:public
params	/usr/include/gnutls/gnutlsxx.h	/^      gnutls_dh_params_t params;$/;"	m	class:gnutls::dh_params	access:protected
params	/usr/include/gnutls/gnutlsxx.h	/^      gnutls_rsa_params_t params;$/;"	m	class:gnutls::rsa_params	access:protected
pgp	/usr/include/gnutls/compat.h	/^    gnutls_openpgp_crt_t pgp;$/;"	m	union:gnutls_retr_st::__anon29	access:public
pgp	/usr/include/gnutls/compat.h	/^    gnutls_openpgp_privkey_t pgp;$/;"	m	union:gnutls_retr_st::__anon30	access:public
pgp	/usr/include/gnutls/gnutls.h	/^      gnutls_openpgp_crt_t pgp;$/;"	m	union:gnutls_retr2_st::__anon27	access:public
pgp	/usr/include/gnutls/gnutls.h	/^      gnutls_openpgp_privkey_t pgp;$/;"	m	union:gnutls_retr2_st::__anon28	access:public
pkcs11	/usr/include/gnutls/gnutls.h	/^      gnutls_pkcs11_privkey_t pkcs11;$/;"	m	union:gnutls_retr2_st::__anon28	access:public
prf	/usr/include/gnutls/gnutlsxx.h	/^    void prf (size_t label_size, const char *label,$/;"	p	class:gnutls::session	access:public	signature:(size_t label_size, const char *label, int server_random_first, size_t extra_size, const char *extra, size_t outsize, char *out)
prf_raw	/usr/include/gnutls/gnutlsxx.h	/^    void prf_raw (size_t label_size, const char *label,$/;"	p	class:gnutls::session	access:public	signature:(size_t label_size, const char *label, size_t seed_size, const char *seed, size_t outsize, char *out)
priority_string	/usr/include/gnutls/openssl.h	/^    char priority_string[256];$/;"	m	struct:__anon32	access:public
psk_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^    psk_client_credentials ();$/;"	p	class:gnutls::psk_client_credentials	access:public	signature:()
psk_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class psk_client_credentials:public credentials$/;"	c	namespace:gnutls	inherits:credentials
psk_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^    psk_server_credentials ();$/;"	p	class:gnutls::psk_server_credentials	access:public	signature:()
psk_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class psk_server_credentials:public credentials$/;"	c	namespace:gnutls	inherits:credentials
ptr	/usr/include/gnutls/gnutlsxx.h	/^    void *ptr () const;$/;"	p	class:gnutls::credentials	access:protected	signature:() const
pubkey	/usr/include/gnutls/abstract.h	/^  gnutls_pubkey_t pubkey;$/;"	m	struct:gnutls_pcert_st	access:public
rbio	/usr/include/gnutls/openssl.h	166;"	d
record_seq	/usr/include/gnutls/dtls.h	/^    unsigned int record_seq;$/;"	m	struct:__anon36	access:public
recv	/usr/include/gnutls/gnutlsxx.h	/^    ssize_t recv (void *data, size_t sizeofdata);$/;"	p	class:gnutls::session	access:public	signature:(void *data, size_t sizeofdata)
rehandshake	/usr/include/gnutls/gnutlsxx.h	/^    int rehandshake ();$/;"	p	class:gnutls::server_session	access:public	signature:()
remove	/usr/include/gnutls/gnutlsxx.h	/^    virtual bool remove (const gnutls_datum_t & key) = 0;$/;"	p	class:gnutls::DB	access:public	signature:(const gnutls_datum_t & key)
retcode	/usr/include/gnutls/gnutlsxx.h	/^    int retcode;$/;"	m	class:gnutls::exception	access:protected
retrieve	/usr/include/gnutls/gnutlsxx.h	/^    virtual bool retrieve (const gnutls_datum_t & key,$/;"	p	class:gnutls::DB	access:public	signature:(const gnutls_datum_t & key, gnutls_datum_t & data)
rfd	/usr/include/gnutls/openssl.h	/^    gnutls_transport_ptr_t rfd;$/;"	m	struct:_SSL	access:public
rsa_export	/usr/include/gnutls/gnutls.h	/^      gnutls_rsa_params_t rsa_export;$/;"	m	union:gnutls_params_st::params	access:public
rsa_params	/usr/include/gnutls/gnutlsxx.h	/^    rsa_params ();$/;"	p	class:gnutls::rsa_params	access:public	signature:()
rsa_params	/usr/include/gnutls/gnutlsxx.h	/^  class rsa_params:private noncopyable$/;"	c	namespace:gnutls	inherits:noncopyable
s	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_session_t s;$/;"	m	class:gnutls::session	access:protected
send	/usr/include/gnutls/gnutlsxx.h	/^    ssize_t send (const void *data, size_t sizeofdata);$/;"	p	class:gnutls::session	access:public	signature:(const void *data, size_t sizeofdata)
send_alert	/usr/include/gnutls/gnutlsxx.h	/^    int send_alert (gnutls_alert_level_t level,$/;"	p	class:gnutls::session	access:public	signature:(gnutls_alert_level_t level, gnutls_alert_description_t desc)
send_appropriate_alert	/usr/include/gnutls/gnutlsxx.h	/^    int send_appropriate_alert (int err);$/;"	p	class:gnutls::session	access:public	signature:(int err)
send_openpgp_cert	/usr/include/gnutls/gnutlsxx.h	/^    void send_openpgp_cert (gnutls_openpgp_crt_status_t status);$/;"	p	class:gnutls::session	access:public	signature:(gnutls_openpgp_crt_status_t status)
server_session	/usr/include/gnutls/gnutlsxx.h	/^    server_session ();$/;"	p	class:gnutls::server_session	access:public	signature:()
server_session	/usr/include/gnutls/gnutlsxx.h	/^  class server_session:public session$/;"	c	namespace:gnutls	inherits:session
session	/usr/include/gnutls/gnutlsxx.h	/^    session (unsigned int);$/;"	p	class:gnutls::session	access:public	signature:(unsigned int)
session	/usr/include/gnutls/gnutlsxx.h	/^  class session:private noncopyable$/;"	c	namespace:gnutls	inherits:noncopyable
set_certificate_request	/usr/include/gnutls/gnutlsxx.h	/^    void set_certificate_request (gnutls_certificate_request_t);$/;"	p	class:gnutls::server_session	access:public	signature:(gnutls_certificate_request_t)
set_credentials	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials (class credentials & cred);$/;"	p	class:gnutls::session	access:public	signature:(class credentials & cred)
set_credentials	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials (const char *username, const char *password);$/;"	p	class:gnutls::srp_client_credentials	access:public	signature:(const char *username, const char *password)
set_credentials	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials (const char *username, const gnutls_datum_t & key,$/;"	p	class:gnutls::psk_client_credentials	access:public	signature:(const char *username, const gnutls_datum_t & key, gnutls_psk_key_flags flags)
set_credentials_file	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials_file (const char *password_file);$/;"	p	class:gnutls::psk_server_credentials	access:public	signature:(const char *password_file)
set_credentials_file	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials_file (const char *password_file,$/;"	p	class:gnutls::srp_server_credentials	access:public	signature:(const char *password_file, const char *password_conf_file)
set_credentials_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials_function (gnutls_psk_client_credentials_function *$/;"	p	class:gnutls::psk_client_credentials	access:public	signature:(gnutls_psk_client_credentials_function * func)
set_credentials_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials_function (gnutls_psk_server_credentials_function *$/;"	p	class:gnutls::psk_server_credentials	access:public	signature:(gnutls_psk_server_credentials_function * func)
set_credentials_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials_function (gnutls_srp_client_credentials_function *$/;"	p	class:gnutls::srp_client_credentials	access:public	signature:(gnutls_srp_client_credentials_function * func)
set_credentials_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_credentials_function (gnutls_srp_server_credentials_function *$/;"	p	class:gnutls::srp_server_credentials	access:public	signature:(gnutls_srp_server_credentials_function * func)
set_data	/usr/include/gnutls/gnutlsxx.h	/^    void set_data (const void *session_data, size_t session_data_size);$/;"	p	class:gnutls::session	access:public	signature:(const void *session_data, size_t session_data_size)
set_db	/usr/include/gnutls/gnutlsxx.h	/^    void set_db (const DB & db);$/;"	p	class:gnutls::server_session	access:public	signature:(const DB & db)
set_db_cache_expiration	/usr/include/gnutls/gnutlsxx.h	/^    void set_db_cache_expiration (unsigned int seconds);$/;"	p	class:gnutls::server_session	access:public	signature:(unsigned int seconds)
set_dh_params	/usr/include/gnutls/gnutlsxx.h	/^    void set_dh_params (const dh_params & params);$/;"	p	class:gnutls::anon_server_credentials	access:public	signature:(const dh_params & params)
set_dh_params	/usr/include/gnutls/gnutlsxx.h	/^    void set_dh_params (const dh_params & params);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const dh_params & params)
set_dh_params	/usr/include/gnutls/gnutlsxx.h	/^    void set_dh_params (const dh_params & params);$/;"	p	class:gnutls::psk_server_credentials	access:public	signature:(const dh_params & params)
set_dh_prime_bits	/usr/include/gnutls/gnutlsxx.h	/^    void set_dh_prime_bits (unsigned int bits);$/;"	p	class:gnutls::session	access:public	signature:(unsigned int bits)
set_max_handshake_packet_length	/usr/include/gnutls/gnutlsxx.h	/^    void set_max_handshake_packet_length (size_t max);$/;"	p	class:gnutls::session	access:public	signature:(size_t max)
set_max_size	/usr/include/gnutls/gnutlsxx.h	/^    void set_max_size (size_t size);$/;"	p	class:gnutls::session	access:public	signature:(size_t size)
set_params_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_params_function (gnutls_params_function * func);$/;"	p	class:gnutls::anon_server_credentials	access:public	signature:(gnutls_params_function * func)
set_params_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_params_function (gnutls_params_function * func);$/;"	p	class:gnutls::certificate_server_credentials	access:public	signature:(gnutls_params_function * func)
set_params_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_params_function (gnutls_params_function * func);$/;"	p	class:gnutls::psk_server_credentials	access:public	signature:(gnutls_params_function * func)
set_priority	/usr/include/gnutls/gnutlsxx.h	/^    void set_priority (const char *prio, const char **err_pos);$/;"	p	class:gnutls::session	access:public	signature:(const char *prio, const char **err_pos)
set_priority	/usr/include/gnutls/gnutlsxx.h	/^    void set_priority (gnutls_priority_t p);$/;"	p	class:gnutls::session	access:public	signature:(gnutls_priority_t p)
set_private_extensions	/usr/include/gnutls/gnutlsxx.h	/^    void set_private_extensions (bool allow);$/;"	p	class:gnutls::session	access:public	signature:(bool allow)
set_ptr	/usr/include/gnutls/gnutlsxx.h	/^    void set_ptr (void *ptr);$/;"	p	class:gnutls::credentials	access:protected	signature:(void *ptr)
set_retrieve_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_retrieve_function (gnutls_certificate_retrieve_function * func);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(gnutls_certificate_retrieve_function * func)
set_rsa_export_params	/usr/include/gnutls/gnutlsxx.h	/^    void set_rsa_export_params (const rsa_params & params);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const rsa_params & params)
set_server_name	/usr/include/gnutls/gnutlsxx.h	/^    void set_server_name (gnutls_server_name_type_t type,$/;"	p	class:gnutls::client_session	access:public	signature:(gnutls_server_name_type_t type, const void *name, size_t name_length)
set_simple_pkcs12_file	/usr/include/gnutls/gnutlsxx.h	/^    void set_simple_pkcs12_file (const char *pkcs12file,$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const char *pkcs12file, gnutls_x509_crt_fmt_t type, const char *password)
set_transport_lowat	/usr/include/gnutls/gnutlsxx.h	/^    void set_transport_lowat (size_t num);$/;"	p	class:gnutls::session	access:public	signature:(size_t num)
set_transport_ptr	/usr/include/gnutls/gnutlsxx.h	/^    void set_transport_ptr (gnutls_transport_ptr_t ptr);$/;"	p	class:gnutls::session	access:public	signature:(gnutls_transport_ptr_t ptr)
set_transport_ptr	/usr/include/gnutls/gnutlsxx.h	/^    void set_transport_ptr (gnutls_transport_ptr_t recv_ptr,$/;"	p	class:gnutls::session	access:public	signature:(gnutls_transport_ptr_t recv_ptr, gnutls_transport_ptr_t send_ptr)
set_transport_pull_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_transport_pull_function (gnutls_pull_func pull_func);$/;"	p	class:gnutls::session	access:public	signature:(gnutls_pull_func pull_func)
set_transport_push_function	/usr/include/gnutls/gnutlsxx.h	/^    void set_transport_push_function (gnutls_push_func push_func);$/;"	p	class:gnutls::session	access:public	signature:(gnutls_push_func push_func)
set_user_ptr	/usr/include/gnutls/gnutlsxx.h	/^    void set_user_ptr (void *ptr);$/;"	p	class:gnutls::session	access:public	signature:(void *ptr)
set_verify_flags	/usr/include/gnutls/gnutlsxx.h	/^    void set_verify_flags (unsigned int flags);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(unsigned int flags)
set_verify_limits	/usr/include/gnutls/gnutlsxx.h	/^    void set_verify_limits (unsigned int max_bits, unsigned int max_depth);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(unsigned int max_bits, unsigned int max_depth)
set_x509_crl	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_crl (const gnutls_datum_t & CRL,$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const gnutls_datum_t & CRL, gnutls_x509_crt_fmt_t type)
set_x509_crl	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_crl (gnutls_x509_crl_t * crl_list, int crl_list_size);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(gnutls_x509_crl_t * crl_list, int crl_list_size)
set_x509_crl_file	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_crl_file (const char *crlfile, gnutls_x509_crt_fmt_t type);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const char *crlfile, gnutls_x509_crt_fmt_t type)
set_x509_key	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_key (const gnutls_datum_t & CERT,$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const gnutls_datum_t & CERT, const gnutls_datum_t & KEY, gnutls_x509_crt_fmt_t type)
set_x509_key	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_key (gnutls_x509_crt_t * cert_list, int cert_list_size,$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(gnutls_x509_crt_t * cert_list, int cert_list_size, gnutls_x509_privkey_t key)
set_x509_key_file	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_key_file (const char *certfile, const char *KEYFILE,$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const char *certfile, const char *KEYFILE, gnutls_x509_crt_fmt_t type)
set_x509_trust	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_trust (const gnutls_datum_t & CA,$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const gnutls_datum_t & CA, gnutls_x509_crt_fmt_t type)
set_x509_trust	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_trust (gnutls_x509_crt_t * ca_list, int ca_list_size);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(gnutls_x509_crt_t * ca_list, int ca_list_size)
set_x509_trust_file	/usr/include/gnutls/gnutlsxx.h	/^    void set_x509_trust_file (const char *cafile, gnutls_x509_crt_fmt_t type);$/;"	p	class:gnutls::certificate_credentials	access:public	signature:(const char *cafile, gnutls_x509_crt_fmt_t type)
shutdown	/usr/include/gnutls/openssl.h	/^    int shutdown;$/;"	m	struct:_SSL	access:public
size	/usr/include/gnutls/gnutls.h	/^    unsigned int size;$/;"	m	struct:__anon22	access:public
srp_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^    srp_client_credentials ();$/;"	p	class:gnutls::srp_client_credentials	access:public	signature:()
srp_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class srp_client_credentials:public credentials$/;"	c	namespace:gnutls	inherits:credentials
srp_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^    srp_server_credentials ();$/;"	p	class:gnutls::srp_server_credentials	access:public	signature:()
srp_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^  class srp_server_credentials:public credentials$/;"	c	namespace:gnutls	inherits:credentials
ssl	/usr/include/gnutls/openssl.h	/^    SSL *ssl;$/;"	m	struct:__anon34	access:public
state	/usr/include/gnutls/openssl.h	/^    int state;$/;"	m	struct:_SSL	access:public
state_or_province_name	/usr/include/gnutls/openssl.h	/^    char state_or_province_name[GNUTLS_X509_S_SIZE];$/;"	m	struct:__anon31	access:public
store	/usr/include/gnutls/gnutlsxx.h	/^    virtual bool store (const gnutls_datum_t & key,$/;"	p	class:gnutls::DB	access:public	signature:(const gnutls_datum_t & key, const gnutls_datum_t & data)
type	/usr/include/gnutls/abstract.h	/^  gnutls_certificate_type_t type;$/;"	m	struct:gnutls_pcert_st	access:public
type	/usr/include/gnutls/compat.h	/^  gnutls_certificate_type_t type;$/;"	m	struct:gnutls_retr_st	access:public
type	/usr/include/gnutls/gnutls.h	/^    gnutls_params_type_t type;$/;"	m	struct:gnutls_params_st	access:public
type	/usr/include/gnutls/gnutlsxx.h	/^    gnutls_credentials_type_t type;$/;"	m	class:gnutls::credentials	access:protected
value	/usr/include/gnutls/x509.h	/^    gnutls_datum_t value;$/;"	m	struct:gnutls_x509_ava_st	access:public
value_tag	/usr/include/gnutls/x509.h	/^    unsigned long value_tag;$/;"	m	struct:gnutls_x509_ava_st	access:public
verify_callback	/usr/include/gnutls/openssl.h	/^    int (*verify_callback) (int, X509_STORE_CTX *);$/;"	m	struct:_SSL	access:public
verify_callback	/usr/include/gnutls/openssl.h	/^    int (*verify_callback) (int, X509_STORE_CTX *);$/;"	m	struct:_SSL_CTX	access:public
verify_mode	/usr/include/gnutls/openssl.h	/^    int verify_mode;$/;"	m	struct:_SSL	access:public
verify_mode	/usr/include/gnutls/openssl.h	/^    int verify_mode;$/;"	m	struct:_SSL_CTX	access:public
verify_peers_certificate	/usr/include/gnutls/gnutlsxx.h	/^    void verify_peers_certificate (unsigned int &status) const;$/;"	p	class:gnutls::session	access:public	signature:(unsigned int &status) const
version	/usr/include/gnutls/openssl.h	/^    gnutls_protocol_t version;$/;"	m	struct:__anon33	access:public
wfd	/usr/include/gnutls/openssl.h	/^    gnutls_transport_ptr_t wfd;$/;"	m	struct:_SSL	access:public
what	/usr/include/gnutls/gnutlsxx.h	/^    const char *what () const throw ();$/;"	p	class:gnutls::exception	access:public	signature:() const
x509	/usr/include/gnutls/compat.h	/^    gnutls_x509_crt_t *x509;$/;"	m	union:gnutls_retr_st::__anon29	access:public
x509	/usr/include/gnutls/compat.h	/^    gnutls_x509_privkey_t x509;$/;"	m	union:gnutls_retr_st::__anon30	access:public
x509	/usr/include/gnutls/gnutls.h	/^      gnutls_x509_crt_t *x509;$/;"	m	union:gnutls_retr2_st::__anon27	access:public
x509	/usr/include/gnutls/gnutls.h	/^      gnutls_x509_privkey_t x509;$/;"	m	union:gnutls_retr2_st::__anon28	access:public
~DB	/usr/include/gnutls/gnutlsxx.h	/^    virtual ~ DB () = 0;$/;"	p	class:gnutls::DB	access:public	signature:()
~anon_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^    ~anon_client_credentials ();$/;"	p	class:gnutls::anon_client_credentials	access:public	signature:()
~anon_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^    ~anon_server_credentials ();$/;"	p	class:gnutls::anon_server_credentials	access:public	signature:()
~certificate_credentials	/usr/include/gnutls/gnutlsxx.h	/^    ~certificate_credentials ();$/;"	p	class:gnutls::certificate_credentials	access:public	signature:()
~client_session	/usr/include/gnutls/gnutlsxx.h	/^    ~client_session ();$/;"	p	class:gnutls::client_session	access:public	signature:()
~credentials	/usr/include/gnutls/gnutlsxx.h	/^    virtual ~ credentials ()$/;"	f	class:gnutls::credentials	access:public	signature:()
~dh_params	/usr/include/gnutls/gnutlsxx.h	/^    ~dh_params ();$/;"	p	class:gnutls::dh_params	access:public	signature:()
~noncopyable	/usr/include/gnutls/gnutlsxx.h	/^     ~noncopyable ()$/;"	f	class:gnutls::noncopyable	access:protected	signature:()
~psk_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^    ~psk_client_credentials ();$/;"	p	class:gnutls::psk_client_credentials	access:public	signature:()
~psk_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^    ~psk_server_credentials ();$/;"	p	class:gnutls::psk_server_credentials	access:public	signature:()
~rsa_params	/usr/include/gnutls/gnutlsxx.h	/^    ~rsa_params ();$/;"	p	class:gnutls::rsa_params	access:public	signature:()
~server_session	/usr/include/gnutls/gnutlsxx.h	/^    ~server_session ();$/;"	p	class:gnutls::server_session	access:public	signature:()
~session	/usr/include/gnutls/gnutlsxx.h	/^    virtual ~ session ();$/;"	p	class:gnutls::session	access:public	signature:()
~srp_client_credentials	/usr/include/gnutls/gnutlsxx.h	/^    ~srp_client_credentials ();$/;"	p	class:gnutls::srp_client_credentials	access:public	signature:()
~srp_server_credentials	/usr/include/gnutls/gnutlsxx.h	/^    ~srp_server_credentials ();$/;"	p	class:gnutls::srp_server_credentials	access:public	signature:()
