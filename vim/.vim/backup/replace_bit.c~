#include <stdio.h>

unsigned setbits(unsigned nr, int p, int n, int bits_from);

int main() {
	/* the number where the bits should be replaced */
	int nr = 110;
	/* the number, where the bits should be taken from (they are taken from the beginning) */
	int bits_from = 114;
	/* 4 = the position from which the bit changing should start. starts from 0.
	 * 2 = the amount of bits to change.
	 * Example: position = 4, nr = 110, amount = 2. it will change the bits in bracket: 11[01]110 with the bits of number 114 in brackets: 11100[10]
	 * so the answer will be: 1110110 = 118
	 */
	printf("%d\n", setbits(nr, 4, 2, bits_from));
	return 0;
}

unsigned setbits(unsigned nr, int p, int n, int bits_from) {
	/* change all bits except the amount at the beginning you need to place in 'nr' to zeros(the beginning is not touched) */
	bits_from = bits_from & ~(~0 << n);
	/* now shift the ones so it would be at the same position as those in the 'nr' which you need to replace */
	bits_from = bits_from << (p + 1 - n);
	/* make the 'nr' block of bits which is going to be replaced to zeros */
	nr = nr & ~((~(~0 << n)) << (p + 1 - n));
	/* and finally replace the block */
	nr = nr | bits_from;

	return nr;
}
