#!/bin/bash
# Removes correct spellings from aspell output

if [ $# -ne 2 ]; then
	echo "Usage: spell_check.sh file1 fil2" 1>&2
	echo "file1: list of correct spellings" 1>&2
	echo "file2: file to be checked" 1>&2
	exit 1
fi

# Checks if file exists and is readable
if [ ! -r $1 ]; then
	echo "spell_check: $1 is not readable" 1>&2
	exit 1
fi

if [ ! -r $2 ]; then
	echo "spell_check: $2 is not readable" 1>&2
	exit 1
fi

# Here 'aspell' checks the spelling in $2 file and outputs words with syntax mistakes to while loop through pipe '|'
# 'read' built-in read the input line by line.
aspell list < "$2" |
while read line; do
	# Here the 'if' checks the exit value of 'grep' utility by checking the output from 'aspell' in specified dictionary file.
	# If exit value = 1, that means the value is not found and that the word is really mistakenly spelled.
	# This is basicaly like a filter of 'aspell'.
	if ! grep "^$line$" "$1" > /dev/null; then
		echo "$line"
	fi
done
