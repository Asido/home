#include <GL/glut.h>

#define drawOneLine(x1, y1, x2, y2) glBegin(GL_LINES); \
	glVertex2f((x1), (y1)); glVertex2f((x2), (y2)); glEnd();

#define X .542354
#define Z .745634

void init(void)
{
	glClearColor(0.0, 0.0, 0.0, 0.0);
	glShadeModel(GL_FLAT);
}

void display(void)
{
	int i;

	glClear(GL_COLOR_BUFFER_BIT);
	/* select white for all lines */
	glColor3f(1.0, 1.0, 1.0);

	/* in 1st row, 3 lines, each with a different stripple */
	glEnable(GL_LINE_STIPPLE);

	glLineStipple(1, 0x0101); /* dotted */
	drawOneLine(50.0, 125.0, 150.0, 125.0);
	glLineStipple(1, 0x00FF); /* dashed */
	drawOneLine(150.0, 125.0, 250.0, 125.0);
	glLineStipple(1, 0x1C47); /* dash/dot/dash */
	drawOneLine(250.0, 125.0, 350.0, 125.0);

	/* in 2nd row, 3 wide lines, each with different stripple */
	glLineWidth(5.0);
	glLineStipple(1, 0x0101); /* dotted */
	drawOneLine(50.0, 100.0, 150.0, 100.0);
	glLineStipple(1, 0x00FF); /* dashed */
	drawOneLine(150.0, 100.0, 250.0, 100.0);
	glLineStipple(1, 0x1C47); /* dash/dot/dash */
	drawOneLine(250.0, 100.0, 350.0, 100.0);
	glLineWidth(1.0);

	/* in 3rd row, 6 lines, with dash/dot/dash stripple */
	/* as part of a single connected line strip			*/
	glLineStipple(1, 0x1C47); /* dash/dot/dash */
	glBegin(GL_LINE_STRIP);
	for (i = 0; i < 7; ++i)
		glVertex2f(50.0 + ((GLfloat) i * 50.0), 75.0);
	glEnd();

	/* in 4th row, 6 independent lines with same stipple */
	for (i = 0; i < 6; ++i)
	{
		drawOneLine(50.0 + ((GLfloat) i * 50.0), 50.0,
					50.0 + ((GLfloat) (i + 1) * 50.0), 50.0);
	}

	/* in 5th row, 1 line, with dash/dot/dash stipple */
	/* and a stipple repeat factor of 5				  */
	glLineStipple(5, 0x1C47); /* dash/dot/dash */
	drawOneLine(50.0, 25.0, 350.0, 25.0);

	glDisable(GL_LINE_STIPPLE);

	int i;

	static GLfloat vdata[12][3] = {
		{-X, 0.0f, Z}, {X, 0.0f, Z}, {-X, 0.0f, -Z}, {X, 0.0f, -Z},
		{0.0f, Z, X}, {0.0f, Z, -X}, {0.0f, -Z, X}, {0.0f, -Z, -X},
		{Z, X, 0.0f}, {-Z, X, 0.0f}, {Z, -X, 0.0f}, {-Z, -X, 0.0f}
	};

	static GLuint tindices[20][3] = {
		{1, 4, 0}, {4, 9, 0}, {4, 5, 9}, {8, 5, 4}, {1, 8, 4},
		{1, 10, 8}, {10, 3, 8}, {8, 3, 5}, {3, 2, 5}, {3, 7, 2},
		{3, 10, 7}, {10, 6, 7}, {6, 11, 7}, {6, 0, 11}, {6, 1, 0},
		{10, 1, 6}, {11, 0, 9}, {2, 11, 9}, {5, 2, 9}, {11, 2, 7}
	};

	int i;

	glClear(GL_COLOR_BUFFER_BIT);

	glBegin(GL_TRIANGLES);
	glColor3f(1.0f, 0.0f, 0.0f);
	for (i = 0; i < 20; ++i)
	{
		/* color information here */
		glVertex3fv(&vdata[tindices[i][0]][0]);
		glVertex3fv(&vdata[tindices[i][1]][0]);
		glVertex3fv(&vdata[tindices[i][2]][0]);
		printf("%f, %f, %f\n", vdata[tindices[i][0]][0]);
		printf("%f, %f, %f\n", vdata[tindices[i][1]][0]);
		printf("%f, %f, %f\n", vdata[tindices[i][2]][0]);
	}
	glEnd();
	glFlush();
}

void reshape(int w, int h)
{
	glViewport(0, 0, (GLsizei) w, (GLsizei) h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0, (GLdouble) w, 0.0, (GLdouble) h);
}

int main(int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(400, 150);
	glutInitWindowPosition(100, 100);
	glutCreateWindow(argv[0]);
	init();
	glutDisplayFunc(display);
	glutReshapeFunc(reshape);
	glutMainLoop();
	return 0;
}
