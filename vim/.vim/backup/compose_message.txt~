references: <1316034212.69820.YahooMailNeo@web125718.mail.ne1.yahoo.com>
from: Arvydas Sidorenko <asido4@gmail.com>
to: Nenad Lukic <lord_nenad@yahoo.com>
subject: Re: Re:


On Wed, Sep 14, 2011 at 11:03 PM, Nenad Lukic <lord_nenad@yahoo.com> wrote:

> from: Nenad Lukic <lord_nenad@yahoo.com>
> date: Wed, Sep 14 02:03 PM -07:00 2011
> to: Arvydas Sidorenko <asido4@gmail.com>
> reply-to: Nenad Lukic <lord_nenad@yahoo.com>
> subject: Re:
> 
> Hello Arvy,
> 
> Yes, it should be simple... Nothing special...
> 
>> As I saw, there is no upload box for small image, image that will be used inside listing, so that should be somewhere too...
> Is below the big image ok? How big should it be? Perhaps a crop of the
> big image would work there? Resized version or something.
> 
> You can put image inside that white rectangle, and buttons below it...
> Since background will directly go to real background of event... Remember this will be only pop-up panel over stage...
> Once background image is successfully uploaded it's applied to stage background directly...
> 
> New image needs to be uploaded too, background will be one upload image, and small image for events listing will be second one...
> It can be something like 150x150 pixels. That will be enough...
> Thumb image needs to be created, no full size images re-sized with css or html, it needs to be thumb image made with 150x150 size...
> 
> 
>> Also, when user comes in next time, that data will be shown, as it's set...
>> It will stay that way until event is over, and after that new event with page entering will be created...
> As I understand, the user will be able to share 1 event at the same
> time, right? While one is not finished streaming, the data will be fetch from db,
> otherwise empty fields will be desplayed. Or it will be that if
> $_GET['event_id'] is set, show data, otherwise empty fields?
> 
> Only one event can be running, broadcasting at the time...
> There will be multiple events scheduled, but new event can't be created until last one is published to events list...
> So one artist will have multiple events created in DB, but only one can be not published, to avoid creating empty events...
> If user just enter event creation and he doesn't make it public, every next time that event will be shown to edit, until he publish it...
> Once it's published it will be shown in his events list, and when he enter event creation page without $_GET['event_id'] fields will be empty...
> 
> Then new event is created without fields data inside DB, and won't be replaced until it's published...
> 
> 
> When event is published, instead of "GO LIVE" there will be button "CANCEL EVENT", and when that button is pressed, "published" field of that event will be changed to 0, and if there is already event that is not published, with "published" field 0, it will be deleted...
> 
> So only one not published event will be in DB...
> 
> 
> 
>> Create one field "published", it will be 1/0 field, and 1 fields will be shown in listing, and 0 won't...
> This will be used as a global event status field, right? And 1 will mean
> that the user will not be able to edit it anymore? The forms will not be
> shown anymore? What exactly effect it will have on the forms itself?
> 
> No, no, no...
> It will means that it can be shown to fans and that it can be shown inside events listing and upcoming events... It can be edited to one hour before show starts...
> When that time comes, event is locked, panel will minimize and artist won't be able to change any more settings...
> If you need you can add another field named "editable", so when it's 1 user can edit event, and when it's set to 0, event editing is locked...
> 
> 
> 
>> When artist enter this event sign up page create new data for event, not after hitting Save or Next, create row data when artist enter first time...
>> After creating take the ID from it and return it in javascript.
>> That will be used for updating content that is changing...
> If new empty row will be inserted on user come, a lot of empty rows are
> going to appear after a while since user will not complete the form
> every time, will need do a cleanups once in a while.
> Database columns are going to be updated on input field blur, right?
> What is 'SAVE' button for then?
> 
> SAVE and NEXT buttons will be for saving, not blur...
> Only UPLOADS will be saved before, since we need that to keep uploads on server clean ( in case of changing background/small image old file in DB will be deleted from server )...
> Since there is only one "empty" ( not published ) event at the time, there is no need for cleanups, it will stay that way until artist create event...
> He won't be able to create multiple empty events...
> 
> 
> 
>> All those changes will be updated with AJAX, except uploads which will be done with iframes ( NOT FLASH ), but no page refresh...
> What the iframe will consist of? I could simply make that the file input
> field (which would be hidden in order not to show file path input field)
> would trigger ajax submit on its 'onchange' event. So just after
> selecting the file, it would be uploaded and previewed without any
> more actions (or error given if validation process fails).
> 
> You can't send file over AJAX, you can send it over iframe...
> You create simple 1x1 pixel iframe somewhere on page and make fields form this way:
> 
> <form action="ajaxUpload.php" method="post" enctype="multipart/form-data" target="upload_iframe" >
> 
> 
> upload_iframe will be "name" of that 1x1 pixel iframe
> 
> 
> Once you submit this form it will be submitted to this iframe only, without page refresh.
> Also you need to show pre-loader there, to show that image is uploading.
> 
> 
> In ajaxUpload.phpthen do whatever you do in with normal submits, make image thumb and save it's location in DB.
> Then, inside iframe you can make simple empty page, with onload trigger like:
> 
> <body onload="parent.stopUpload(); parent.uploaddone('<?php echo $image_path; ?>');">
> 
> 
> and on main page you create function stopUpload() that will hide pre-loader, and uploaddone(image_path) that will get image path from return and show it at stage background, or in case small image it will be shown inside that now empty white box...
> 
> I will do second function for background, you just make this iframe returning image path...
> 
> In case of error, do the same just different function:
> 
> <body onload="parent.stopUpload(); parent.uploadfaild('Reason: Something like Image is too big, or wrong format...');">
> 
> 
> Furthermore, in the forms there is no easy and portable way to increase
> checkbox sizes and set specific borders as per PSD. I left them in the
> default look. Tell me if it's important or you know a good way to do it.
> 
> 
> Why don't you use graphic instead of default browser checkboxes?
> Make one style as "event-checkbox", and another one "event-checkbox-selected"...
> Define new variable in javascript that will be monitor this ( anyhow it's sent over AJAX so it doesn't really matters is it field since there is no submits for that )
> 
> So once checkbox with "event-checkbox" is selected, set variable to it's value, change his class to "event-checkbox-selected" and change other elements to "event-checkbox"...
> So it will work as checkbox...
> 
> 
> 
> 
> Also, one more thing:
> 
> DO NOT USE GLOBAL CSS RULES
> 
> Do not style every input on page with css, use css names for them, for each input, also do this for every other page element, select/checkbox/div/body/html...
> Since there will be my stage page there too, and if there is input button on my page it shouldn't have your styles...
> Also, don't forget, there will be songbliss headers + chat that is on bottom...
> 
> I am not creating them, so each CSS rule you create for your elements needs to be only yours...
> 
> 
> This one for example:
> 
> input[type="text"], input[type="password"]
> 
> and this:
> 
> body {
> line-height:1;
> }
> 
> 
> 
> My page has different line-height, and songbliss has different line-height,
> so if you need to use line-height you need to use it only on your part of page...
> 
> 
> 
> 
> 
> 
> 
> I don't know how well you know all things, so I hope you understand all correctly and I didn't explain bizarre things too much :)
> 
> 
> 
> Best regards,
> Nenad Lukic

I rushed fast through what you wrote and just one thought:
> You can't send file over AJAX, you can send it over iframe...
You actually can by sending the file as a simple byte stream and then in
the back-end put everything together again. I did like this in some page
for Mike, although can't remember which now. But anyway, will see, it's
kinda lot of mess this way.

I haven't read all carefully, it's late here, will do it tomorrow. Good night.

Arvydas Sidorenko

