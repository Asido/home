#!/bin/bash

# --- THIS IS JUST A PART OF THE REAL PROGRAM TO SHOW HOW 'getopts' BUILTIN WORKS ---

SKIPBLANKS=
TMPDIR=/tmp
CASE=lower

# -b [ignore whitespace at the start of input lines]
# -t [follows the file name of temp directory]
# -u [print output in upper case]

# getopts [is a builtin. a proper way to loop through supplied arguments]
# :bt:u [available arguments. first symbol ':' tells that you are going to handle the errors. letter followed by ':' tells that the letter (option) should follow an argument. to pass an argument, in this case you can use this: -t'/home/asido']
# in this case '-t' should follow an argument.
# 'arg' is a loop variable, where option by option is assigned.
while getopts :bt:u arg; do
	case $arg in
		b)
			SKIPBLANKS=TRUE ;;
		t)
			# OPTARG is a variable where option arguments are assigned if the options follows ':' in declaration. (apart OPTARG, there is also a variable OPTIND)
			if [ -d "$OPTARG" ]; then
				TEMPDIR="$OPTARG"
			else
				echo "$0: Must supply an argument to -$OPTARG." >&2
				exit 1
			fi ;;
		u)
			CASE=upper ;;
		# $arg value becomes ':' if an option has to follow an argument, but the user doesn't supplies it.
		# These tho cases ':' and '?' are the error handling which we are handing ourselves (because of ':' at the beginning of available arguments)
		:)
			echo "$0: Must supply an argument to -$OPTARG." >&2
			exit 1 ;;
		# If the user passes option which is not in the available option list, $arg becomes '?'
		\?)
			echo "$0: Invalid option -$OPTARG ignored." >&2 ;;
	esac
done
