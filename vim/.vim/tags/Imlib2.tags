!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
DATA16	/usr/include/Imlib2.h	33;"	d
DATA32	/usr/include/Imlib2.h	32;"	d
DATA64	/usr/include/Imlib2.h	31;"	d
DATA8	/usr/include/Imlib2.h	34;"	d
EAPI	/usr/include/Imlib2.h	11;"	d
EAPI	/usr/include/Imlib2.h	16;"	d
EAPI	/usr/include/Imlib2.h	18;"	d
EAPI	/usr/include/Imlib2.h	21;"	d
EAPI	/usr/include/Imlib2.h	5;"	d
EAPI	/usr/include/Imlib2.h	9;"	d
IMLIB_LOAD_ERROR_FILE_DOES_NOT_EXIST	/usr/include/Imlib2.h	/^   IMLIB_LOAD_ERROR_FILE_DOES_NOT_EXIST,$/;"	e	enum:_imlib_load_error
IMLIB_LOAD_ERROR_FILE_IS_DIRECTORY	/usr/include/Imlib2.h	/^   IMLIB_LOAD_ERROR_FILE_IS_DIRECTORY,$/;"	e	enum:_imlib_load_error
IMLIB_LOAD_ERROR_NONE	/usr/include/Imlib2.h	/^   IMLIB_LOAD_ERROR_NONE,$/;"	e	enum:_imlib_load_error
IMLIB_LOAD_ERROR_NO_LOADER_FOR_FILE_FORMAT	/usr/include/Imlib2.h	/^   IMLIB_LOAD_ERROR_NO_LOADER_FOR_FILE_FORMAT,$/;"	e	enum:_imlib_load_error
IMLIB_LOAD_ERROR_OUT_OF_DISK_SPACE	/usr/include/Imlib2.h	/^   IMLIB_LOAD_ERROR_OUT_OF_DISK_SPACE,$/;"	e	enum:_imlib_load_error
IMLIB_LOAD_ERROR_OUT_OF_FILE_DESCRIPTORS	/usr/include/Imlib2.h	/^   IMLIB_LOAD_ERROR_OUT_OF_FILE_DESCRIPTORS,$/;"	e	enum:_imlib_load_error
IMLIB_LOAD_ERROR_OUT_OF_MEMORY	/usr/include/Imlib2.h	/^   IMLIB_LOAD_ERROR_OUT_OF_MEMORY,$/;"	e	enum:_imlib_load_error
IMLIB_LOAD_ERROR_PATH_COMPONENT_NON_EXISTANT	/usr/include/Imlib2.h	/^   IMLIB_LOAD_ERROR_PATH_COMPONENT_NON_EXISTANT,$/;"	e	enum:_imlib_load_error
IMLIB_LOAD_ERROR_PATH_COMPONENT_NOT_DIRECTORY	/usr/include/Imlib2.h	/^   IMLIB_LOAD_ERROR_PATH_COMPONENT_NOT_DIRECTORY,$/;"	e	enum:_imlib_load_error
IMLIB_LOAD_ERROR_PATH_POINTS_OUTSIDE_ADDRESS_SPACE	/usr/include/Imlib2.h	/^   IMLIB_LOAD_ERROR_PATH_POINTS_OUTSIDE_ADDRESS_SPACE,$/;"	e	enum:_imlib_load_error
IMLIB_LOAD_ERROR_PATH_TOO_LONG	/usr/include/Imlib2.h	/^   IMLIB_LOAD_ERROR_PATH_TOO_LONG,$/;"	e	enum:_imlib_load_error
IMLIB_LOAD_ERROR_PERMISSION_DENIED_TO_READ	/usr/include/Imlib2.h	/^   IMLIB_LOAD_ERROR_PERMISSION_DENIED_TO_READ,$/;"	e	enum:_imlib_load_error
IMLIB_LOAD_ERROR_PERMISSION_DENIED_TO_WRITE	/usr/include/Imlib2.h	/^   IMLIB_LOAD_ERROR_PERMISSION_DENIED_TO_WRITE,$/;"	e	enum:_imlib_load_error
IMLIB_LOAD_ERROR_TOO_MANY_SYMBOLIC_LINKS	/usr/include/Imlib2.h	/^   IMLIB_LOAD_ERROR_TOO_MANY_SYMBOLIC_LINKS,$/;"	e	enum:_imlib_load_error
IMLIB_LOAD_ERROR_UNKNOWN	/usr/include/Imlib2.h	/^   IMLIB_LOAD_ERROR_UNKNOWN$/;"	e	enum:_imlib_load_error
IMLIB_OP_ADD	/usr/include/Imlib2.h	/^   IMLIB_OP_ADD,$/;"	e	enum:_imlib_operation
IMLIB_OP_COPY	/usr/include/Imlib2.h	/^   IMLIB_OP_COPY,$/;"	e	enum:_imlib_operation
IMLIB_OP_RESHADE	/usr/include/Imlib2.h	/^   IMLIB_OP_RESHADE$/;"	e	enum:_imlib_operation
IMLIB_OP_SUBTRACT	/usr/include/Imlib2.h	/^   IMLIB_OP_SUBTRACT,$/;"	e	enum:_imlib_operation
IMLIB_TEXT_TO_ANGLE	/usr/include/Imlib2.h	/^   IMLIB_TEXT_TO_ANGLE = 4$/;"	e	enum:_imlib_text_direction
IMLIB_TEXT_TO_DOWN	/usr/include/Imlib2.h	/^   IMLIB_TEXT_TO_DOWN = 2,$/;"	e	enum:_imlib_text_direction
IMLIB_TEXT_TO_LEFT	/usr/include/Imlib2.h	/^   IMLIB_TEXT_TO_LEFT = 1,$/;"	e	enum:_imlib_text_direction
IMLIB_TEXT_TO_RIGHT	/usr/include/Imlib2.h	/^   IMLIB_TEXT_TO_RIGHT = 0,$/;"	e	enum:_imlib_text_direction
IMLIB_TEXT_TO_UP	/usr/include/Imlib2.h	/^   IMLIB_TEXT_TO_UP = 3,$/;"	e	enum:_imlib_text_direction
IMLIB_TTF_ENCODING_ISO_8859_1	/usr/include/Imlib2.h	/^   IMLIB_TTF_ENCODING_ISO_8859_1,$/;"	e	enum:_imlib_TTF_encoding
IMLIB_TTF_ENCODING_ISO_8859_2	/usr/include/Imlib2.h	/^   IMLIB_TTF_ENCODING_ISO_8859_2,$/;"	e	enum:_imlib_TTF_encoding
IMLIB_TTF_ENCODING_ISO_8859_3	/usr/include/Imlib2.h	/^   IMLIB_TTF_ENCODING_ISO_8859_3,$/;"	e	enum:_imlib_TTF_encoding
IMLIB_TTF_ENCODING_ISO_8859_4	/usr/include/Imlib2.h	/^   IMLIB_TTF_ENCODING_ISO_8859_4,$/;"	e	enum:_imlib_TTF_encoding
IMLIB_TTF_ENCODING_ISO_8859_5	/usr/include/Imlib2.h	/^   IMLIB_TTF_ENCODING_ISO_8859_5$/;"	e	enum:_imlib_TTF_encoding
ImlibLoadError	/usr/include/Imlib2.h	/^typedef enum _imlib_load_error ImlibLoadError;$/;"	t	typeref:enum:_imlib_load_error
ImlibPolygon	/usr/include/Imlib2.h	/^typedef void *ImlibPolygon;$/;"	t
Imlib_Border	/usr/include/Imlib2.h	/^typedef struct _imlib_border Imlib_Border;$/;"	t	typeref:struct:_imlib_border
Imlib_Color	/usr/include/Imlib2.h	/^typedef struct _imlib_color Imlib_Color;$/;"	t	typeref:struct:_imlib_color
Imlib_Color_Modifier	/usr/include/Imlib2.h	/^typedef void *Imlib_Color_Modifier;$/;"	t
Imlib_Color_Range	/usr/include/Imlib2.h	/^typedef void *Imlib_Color_Range;$/;"	t
Imlib_Context	/usr/include/Imlib2.h	/^typedef void *Imlib_Context;$/;"	t
Imlib_Data_Destructor_Function	/usr/include/Imlib2.h	/^typedef void (*Imlib_Data_Destructor_Function) (Imlib_Image im, void *data);$/;"	t
Imlib_Filter	/usr/include/Imlib2.h	/^typedef void *Imlib_Filter;$/;"	t
Imlib_Font	/usr/include/Imlib2.h	/^typedef void *Imlib_Font;$/;"	t
Imlib_Image	/usr/include/Imlib2.h	/^typedef void *Imlib_Image;$/;"	t
Imlib_Load_Error	/usr/include/Imlib2.h	/^typedef enum _imlib_load_error Imlib_Load_Error;$/;"	t	typeref:enum:_imlib_load_error
Imlib_Operation	/usr/include/Imlib2.h	/^typedef enum _imlib_operation Imlib_Operation;$/;"	t	typeref:enum:_imlib_operation
Imlib_Progress_Function	/usr/include/Imlib2.h	/^typedef int (*Imlib_Progress_Function) (Imlib_Image im, char percent,$/;"	t
Imlib_TTF_Encoding	/usr/include/Imlib2.h	/^typedef enum _imlib_TTF_encoding Imlib_TTF_Encoding;$/;"	t	typeref:enum:_imlib_TTF_encoding
Imlib_Text_Direction	/usr/include/Imlib2.h	/^typedef enum _imlib_text_direction Imlib_Text_Direction;$/;"	t	typeref:enum:_imlib_text_direction
Imlib_Updates	/usr/include/Imlib2.h	/^typedef void *Imlib_Updates;$/;"	t
__IMLIB_API_H	/usr/include/Imlib2.h	2;"	d
_imlib_TTF_encoding	/usr/include/Imlib2.h	/^enum _imlib_TTF_encoding$/;"	g
_imlib_border	/usr/include/Imlib2.h	/^struct _imlib_border$/;"	s
_imlib_border::bottom	/usr/include/Imlib2.h	/^   int left, right, top, bottom;$/;"	m	struct:_imlib_border	access:public
_imlib_border::left	/usr/include/Imlib2.h	/^   int left, right, top, bottom;$/;"	m	struct:_imlib_border	access:public
_imlib_border::right	/usr/include/Imlib2.h	/^   int left, right, top, bottom;$/;"	m	struct:_imlib_border	access:public
_imlib_border::top	/usr/include/Imlib2.h	/^   int left, right, top, bottom;$/;"	m	struct:_imlib_border	access:public
_imlib_color	/usr/include/Imlib2.h	/^struct _imlib_color$/;"	s
_imlib_color::alpha	/usr/include/Imlib2.h	/^   int alpha, red, green, blue;$/;"	m	struct:_imlib_color	access:public
_imlib_color::blue	/usr/include/Imlib2.h	/^   int alpha, red, green, blue;$/;"	m	struct:_imlib_color	access:public
_imlib_color::green	/usr/include/Imlib2.h	/^   int alpha, red, green, blue;$/;"	m	struct:_imlib_color	access:public
_imlib_color::red	/usr/include/Imlib2.h	/^   int alpha, red, green, blue;$/;"	m	struct:_imlib_color	access:public
_imlib_load_error	/usr/include/Imlib2.h	/^enum _imlib_load_error$/;"	g
_imlib_operation	/usr/include/Imlib2.h	/^enum _imlib_operation$/;"	g
_imlib_text_direction	/usr/include/Imlib2.h	/^enum _imlib_text_direction$/;"	g
alpha	/usr/include/Imlib2.h	/^   int alpha, red, green, blue;$/;"	m	struct:_imlib_color	access:public
blue	/usr/include/Imlib2.h	/^   int alpha, red, green, blue;$/;"	m	struct:_imlib_color	access:public
bottom	/usr/include/Imlib2.h	/^   int left, right, top, bottom;$/;"	m	struct:_imlib_border	access:public
green	/usr/include/Imlib2.h	/^   int alpha, red, green, blue;$/;"	m	struct:_imlib_color	access:public
imlib_add_color_to_color_range	/usr/include/Imlib2.h	/^   EAPI void imlib_add_color_to_color_range(int distance_away);$/;"	p	signature:(int distance_away)
imlib_add_path_to_font_path	/usr/include/Imlib2.h	/^   EAPI void imlib_add_path_to_font_path(const char *path);$/;"	p	signature:(const char *path)
imlib_apply_color_modifier	/usr/include/Imlib2.h	/^   EAPI void imlib_apply_color_modifier(void);$/;"	p	signature:(void)
imlib_apply_color_modifier_to_rectangle	/usr/include/Imlib2.h	/^   EAPI void imlib_apply_color_modifier_to_rectangle(int x, int y, int width,$/;"	p	signature:(int x, int y, int width, int height)
imlib_apply_filter	/usr/include/Imlib2.h	/^   EAPI void imlib_apply_filter(char *script, ...);$/;"	p	signature:(char *script, ...)
imlib_blend_image_onto_image	/usr/include/Imlib2.h	/^   EAPI void imlib_blend_image_onto_image(Imlib_Image source_image,$/;"	p	signature:(Imlib_Image source_image, char merge_alpha, int source_x, int source_y, int source_width, int source_height, int destination_x, int destination_y, int destination_width, int destination_height)
imlib_blend_image_onto_image_at_angle	/usr/include/Imlib2.h	/^   EAPI void imlib_blend_image_onto_image_at_angle(Imlib_Image source_image,$/;"	p	signature:(Imlib_Image source_image, char merge_alpha, int source_x, int source_y, int source_width, int source_height, int destination_x, int destination_y, int angle_x, int angle_y)
imlib_blend_image_onto_image_skewed	/usr/include/Imlib2.h	/^   EAPI void imlib_blend_image_onto_image_skewed(Imlib_Image source_image,$/;"	p	signature:(Imlib_Image source_image, char merge_alpha, int source_x, int source_y, int source_width, int source_height, int destination_x, int destination_y, int h_angle_x, int h_angle_y, int v_angle_x, int v_angle_y)
imlib_clone_image	/usr/include/Imlib2.h	/^   EAPI Imlib_Image imlib_clone_image(void);$/;"	p	signature:(void)
imlib_context_disconnect_display	/usr/include/Imlib2.h	/^   EAPI void imlib_context_disconnect_display(void);$/;"	p	signature:(void)
imlib_context_free	/usr/include/Imlib2.h	/^   EAPI void imlib_context_free(Imlib_Context context);$/;"	p	signature:(Imlib_Context context)
imlib_context_get	/usr/include/Imlib2.h	/^   EAPI Imlib_Context imlib_context_get(void);$/;"	p	signature:(void)
imlib_context_get_TTF_encoding	/usr/include/Imlib2.h	/^   EAPI Imlib_TTF_Encoding imlib_context_get_TTF_encoding(void);$/;"	p	signature:(void)
imlib_context_get_angle	/usr/include/Imlib2.h	/^   EAPI double imlib_context_get_angle(void);$/;"	p	signature:(void)
imlib_context_get_anti_alias	/usr/include/Imlib2.h	/^   EAPI char imlib_context_get_anti_alias(void);$/;"	p	signature:(void)
imlib_context_get_blend	/usr/include/Imlib2.h	/^   EAPI char imlib_context_get_blend(void);$/;"	p	signature:(void)
imlib_context_get_cliprect	/usr/include/Imlib2.h	/^   EAPI void imlib_context_get_cliprect(int *x, int *y, int *w, int *h);$/;"	p	signature:(int *x, int *y, int *w, int *h)
imlib_context_get_color	/usr/include/Imlib2.h	/^   EAPI void imlib_context_get_color(int *red, int *green, int *blue, int *alpha);$/;"	p	signature:(int *red, int *green, int *blue, int *alpha)
imlib_context_get_color_cmya	/usr/include/Imlib2.h	/^   EAPI void imlib_context_get_color_cmya(int *cyan, int *magenta, int *yellow, int *alpha);$/;"	p	signature:(int *cyan, int *magenta, int *yellow, int *alpha)
imlib_context_get_color_hlsa	/usr/include/Imlib2.h	/^   EAPI void imlib_context_get_color_hlsa(float *hue, float *lightness, float *saturation, int *alpha);$/;"	p	signature:(float *hue, float *lightness, float *saturation, int *alpha)
imlib_context_get_color_hsva	/usr/include/Imlib2.h	/^   EAPI void imlib_context_get_color_hsva(float *hue, float *saturation, float *value, int *alpha);$/;"	p	signature:(float *hue, float *saturation, float *value, int *alpha)
imlib_context_get_color_modifier	/usr/include/Imlib2.h	/^   EAPI Imlib_Color_Modifier imlib_context_get_color_modifier(void);$/;"	p	signature:(void)
imlib_context_get_color_range	/usr/include/Imlib2.h	/^   EAPI Imlib_Color_Range imlib_context_get_color_range(void);$/;"	p	signature:(void)
imlib_context_get_colormap	/usr/include/Imlib2.h	/^   EAPI Colormap imlib_context_get_colormap(void);$/;"	p	signature:(void)
imlib_context_get_direction	/usr/include/Imlib2.h	/^   EAPI Imlib_Text_Direction imlib_context_get_direction(void);$/;"	p	signature:(void)
imlib_context_get_display	/usr/include/Imlib2.h	/^   EAPI Display *imlib_context_get_display(void);$/;"	p	signature:(void)
imlib_context_get_dither	/usr/include/Imlib2.h	/^   EAPI char imlib_context_get_dither(void);$/;"	p	signature:(void)
imlib_context_get_dither_mask	/usr/include/Imlib2.h	/^   EAPI char imlib_context_get_dither_mask(void);$/;"	p	signature:(void)
imlib_context_get_drawable	/usr/include/Imlib2.h	/^   EAPI Drawable imlib_context_get_drawable(void);$/;"	p	signature:(void)
imlib_context_get_filter	/usr/include/Imlib2.h	/^   EAPI Imlib_Filter imlib_context_get_filter(void);$/;"	p	signature:(void)
imlib_context_get_font	/usr/include/Imlib2.h	/^   EAPI Imlib_Font imlib_context_get_font(void);$/;"	p	signature:(void)
imlib_context_get_image	/usr/include/Imlib2.h	/^   EAPI Imlib_Image imlib_context_get_image(void);$/;"	p	signature:(void)
imlib_context_get_imlib_color	/usr/include/Imlib2.h	/^   EAPI Imlib_Color *imlib_context_get_imlib_color(void);$/;"	p	signature:(void)
imlib_context_get_mask	/usr/include/Imlib2.h	/^   EAPI Pixmap imlib_context_get_mask(void);$/;"	p	signature:(void)
imlib_context_get_mask_alpha_threshold	/usr/include/Imlib2.h	/^   EAPI int imlib_context_get_mask_alpha_threshold(void);$/;"	p	signature:(void)
imlib_context_get_operation	/usr/include/Imlib2.h	/^   EAPI Imlib_Operation imlib_context_get_operation(void);$/;"	p	signature:(void)
imlib_context_get_progress_function	/usr/include/Imlib2.h	/^   EAPI Imlib_Progress_Function imlib_context_get_progress_function(void);$/;"	p	signature:(void)
imlib_context_get_progress_granularity	/usr/include/Imlib2.h	/^   EAPI char imlib_context_get_progress_granularity(void);$/;"	p	signature:(void)
imlib_context_get_visual	/usr/include/Imlib2.h	/^   EAPI Visual *imlib_context_get_visual(void);$/;"	p	signature:(void)
imlib_context_new	/usr/include/Imlib2.h	/^   EAPI Imlib_Context imlib_context_new(void);$/;"	p	signature:(void)
imlib_context_pop	/usr/include/Imlib2.h	/^   EAPI void imlib_context_pop(void);$/;"	p	signature:(void)
imlib_context_push	/usr/include/Imlib2.h	/^   EAPI void imlib_context_push(Imlib_Context context);$/;"	p	signature:(Imlib_Context context)
imlib_context_set_TTF_encoding	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_TTF_encoding(Imlib_TTF_Encoding encoding);$/;"	p	signature:(Imlib_TTF_Encoding encoding)
imlib_context_set_angle	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_angle(double angle);$/;"	p	signature:(double angle)
imlib_context_set_anti_alias	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_anti_alias(char anti_alias);$/;"	p	signature:(char anti_alias)
imlib_context_set_blend	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_blend(char blend);$/;"	p	signature:(char blend)
imlib_context_set_cliprect	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_cliprect(int x, int y, int w, int h);$/;"	p	signature:(int x, int y, int w, int h)
imlib_context_set_color	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_color(int red, int green, int blue, int alpha);$/;"	p	signature:(int red, int green, int blue, int alpha)
imlib_context_set_color_cmya	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_color_cmya(int cyan, int magenta, int yellow, int alpha);$/;"	p	signature:(int cyan, int magenta, int yellow, int alpha)
imlib_context_set_color_hlsa	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_color_hlsa(float hue, float lightness, float saturation, int alpha);$/;"	p	signature:(float hue, float lightness, float saturation, int alpha)
imlib_context_set_color_hsva	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_color_hsva(float hue, float saturation, float value, int alpha);$/;"	p	signature:(float hue, float saturation, float value, int alpha)
imlib_context_set_color_modifier	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_color_modifier(Imlib_Color_Modifier color_modifier);$/;"	p	signature:(Imlib_Color_Modifier color_modifier)
imlib_context_set_color_range	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_color_range(Imlib_Color_Range color_range);$/;"	p	signature:(Imlib_Color_Range color_range)
imlib_context_set_colormap	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_colormap(Colormap colormap);$/;"	p	signature:(Colormap colormap)
imlib_context_set_direction	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_direction(Imlib_Text_Direction direction);$/;"	p	signature:(Imlib_Text_Direction direction)
imlib_context_set_display	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_display(Display * display);$/;"	p	signature:(Display * display)
imlib_context_set_dither	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_dither(char dither);$/;"	p	signature:(char dither)
imlib_context_set_dither_mask	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_dither_mask(char dither_mask);$/;"	p	signature:(char dither_mask)
imlib_context_set_drawable	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_drawable(Drawable drawable);$/;"	p	signature:(Drawable drawable)
imlib_context_set_filter	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_filter(Imlib_Filter filter);$/;"	p	signature:(Imlib_Filter filter)
imlib_context_set_font	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_font(Imlib_Font font);$/;"	p	signature:(Imlib_Font font)
imlib_context_set_image	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_image(Imlib_Image image);$/;"	p	signature:(Imlib_Image image)
imlib_context_set_mask	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_mask(Pixmap mask);$/;"	p	signature:(Pixmap mask)
imlib_context_set_mask_alpha_threshold	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_mask_alpha_threshold(int mask_alpha_threshold);$/;"	p	signature:(int mask_alpha_threshold)
imlib_context_set_operation	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_operation(Imlib_Operation operation);$/;"	p	signature:(Imlib_Operation operation)
imlib_context_set_progress_function	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_progress_function(Imlib_Progress_Function$/;"	p	signature:(Imlib_Progress_Function progress_function)
imlib_context_set_progress_granularity	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_progress_granularity(char progress_granularity);$/;"	p	signature:(char progress_granularity)
imlib_context_set_visual	/usr/include/Imlib2.h	/^   EAPI void imlib_context_set_visual(Visual * visual);$/;"	p	signature:(Visual * visual)
imlib_copy_drawable_to_image	/usr/include/Imlib2.h	/^   EAPI char imlib_copy_drawable_to_image(Pixmap mask, int x, int y, int width,$/;"	p	signature:(Pixmap mask, int x, int y, int width, int height, int destination_x, int destination_y, char need_to_grab_x)
imlib_create_color_modifier	/usr/include/Imlib2.h	/^   EAPI Imlib_Color_Modifier imlib_create_color_modifier(void);$/;"	p	signature:(void)
imlib_create_color_range	/usr/include/Imlib2.h	/^   EAPI Imlib_Color_Range imlib_create_color_range(void);$/;"	p	signature:(void)
imlib_create_cropped_image	/usr/include/Imlib2.h	/^   EAPI Imlib_Image imlib_create_cropped_image(int x, int y, int width,$/;"	p	signature:(int x, int y, int width, int height)
imlib_create_cropped_scaled_image	/usr/include/Imlib2.h	/^   EAPI Imlib_Image imlib_create_cropped_scaled_image(int source_x, int source_y,$/;"	p	signature:(int source_x, int source_y, int source_width, int source_height, int destination_width, int destination_height)
imlib_create_filter	/usr/include/Imlib2.h	/^   EAPI Imlib_Filter imlib_create_filter(int initsize);$/;"	p	signature:(int initsize)
imlib_create_image	/usr/include/Imlib2.h	/^   EAPI Imlib_Image imlib_create_image(int width, int height);$/;"	p	signature:(int width, int height)
imlib_create_image_from_drawable	/usr/include/Imlib2.h	/^   EAPI Imlib_Image imlib_create_image_from_drawable(Pixmap mask, int x, int y,$/;"	p	signature:(Pixmap mask, int x, int y, int width, int height, char need_to_grab_x)
imlib_create_image_from_ximage	/usr/include/Imlib2.h	/^   EAPI Imlib_Image imlib_create_image_from_ximage(XImage *image, XImage *mask, int x, int y,$/;"	p	signature:(XImage *image, XImage *mask, int x, int y, int width, int height, char need_to_grab_x)
imlib_create_image_using_copied_data	/usr/include/Imlib2.h	/^   EAPI Imlib_Image imlib_create_image_using_copied_data(int width, int height,$/;"	p	signature:(int width, int height, DATA32 * data)
imlib_create_image_using_data	/usr/include/Imlib2.h	/^   EAPI Imlib_Image imlib_create_image_using_data(int width, int height,$/;"	p	signature:(int width, int height, DATA32 * data)
imlib_create_rotated_image	/usr/include/Imlib2.h	/^   EAPI Imlib_Image imlib_create_rotated_image(double angle);$/;"	p	signature:(double angle)
imlib_create_scaled_image_from_drawable	/usr/include/Imlib2.h	/^   EAPI Imlib_Image imlib_create_scaled_image_from_drawable(Pixmap mask,$/;"	p	signature:(Pixmap mask, int source_x, int source_y, int source_width, int source_height, int destination_width, int destination_height, char need_to_grab_x, char get_mask_from_shape)
imlib_filter_constants	/usr/include/Imlib2.h	/^   EAPI void imlib_filter_constants(int a, int r, int g, int b);$/;"	p	signature:(int a, int r, int g, int b)
imlib_filter_divisors	/usr/include/Imlib2.h	/^   EAPI void imlib_filter_divisors(int a, int r, int g, int b);$/;"	p	signature:(int a, int r, int g, int b)
imlib_filter_set	/usr/include/Imlib2.h	/^   EAPI void imlib_filter_set(int xoff, int yoff, int a, int r, int g, int b);$/;"	p	signature:(int xoff, int yoff, int a, int r, int g, int b)
imlib_filter_set_alpha	/usr/include/Imlib2.h	/^   EAPI void imlib_filter_set_alpha(int xoff, int yoff, int a, int r, int g,$/;"	p	signature:(int xoff, int yoff, int a, int r, int g, int b)
imlib_filter_set_blue	/usr/include/Imlib2.h	/^   EAPI void imlib_filter_set_blue(int xoff, int yoff, int a, int r, int g, int b);$/;"	p	signature:(int xoff, int yoff, int a, int r, int g, int b)
imlib_filter_set_green	/usr/include/Imlib2.h	/^   EAPI void imlib_filter_set_green(int xoff, int yoff, int a, int r, int g,$/;"	p	signature:(int xoff, int yoff, int a, int r, int g, int b)
imlib_filter_set_red	/usr/include/Imlib2.h	/^   EAPI void imlib_filter_set_red(int xoff, int yoff, int a, int r, int g, int b);$/;"	p	signature:(int xoff, int yoff, int a, int r, int g, int b)
imlib_flush_font_cache	/usr/include/Imlib2.h	/^   EAPI void imlib_flush_font_cache(void);$/;"	p	signature:(void)
imlib_flush_loaders	/usr/include/Imlib2.h	/^   EAPI void imlib_flush_loaders(void);$/;"	p	signature:(void)
imlib_free_color_modifier	/usr/include/Imlib2.h	/^   EAPI void imlib_free_color_modifier(void);$/;"	p	signature:(void)
imlib_free_color_range	/usr/include/Imlib2.h	/^   EAPI void imlib_free_color_range(void);$/;"	p	signature:(void)
imlib_free_filter	/usr/include/Imlib2.h	/^   EAPI void imlib_free_filter(void);$/;"	p	signature:(void)
imlib_free_font	/usr/include/Imlib2.h	/^   EAPI void imlib_free_font(void);$/;"	p	signature:(void)
imlib_free_font_list	/usr/include/Imlib2.h	/^   EAPI void imlib_free_font_list(char **font_list, int number);$/;"	p	signature:(char **font_list, int number)
imlib_free_image	/usr/include/Imlib2.h	/^   EAPI void imlib_free_image(void);$/;"	p	signature:(void)
imlib_free_image_and_decache	/usr/include/Imlib2.h	/^   EAPI void imlib_free_image_and_decache(void);$/;"	p	signature:(void)
imlib_free_pixmap_and_mask	/usr/include/Imlib2.h	/^   EAPI void imlib_free_pixmap_and_mask(Pixmap pixmap);$/;"	p	signature:(Pixmap pixmap)
imlib_get_best_visual	/usr/include/Imlib2.h	/^   EAPI Visual *imlib_get_best_visual(Display * display, int screen,$/;"	p	signature:(Display * display, int screen, int *depth_return)
imlib_get_cache_size	/usr/include/Imlib2.h	/^   EAPI int imlib_get_cache_size(void);$/;"	p	signature:(void)
imlib_get_color_modifier_tables	/usr/include/Imlib2.h	/^   EAPI void imlib_get_color_modifier_tables(DATA8 * red_table,$/;"	p	signature:(DATA8 * red_table, DATA8 * green_table, DATA8 * blue_table, DATA8 * alpha_table)
imlib_get_color_usage	/usr/include/Imlib2.h	/^   EAPI int imlib_get_color_usage(void);$/;"	p	signature:(void)
imlib_get_font_ascent	/usr/include/Imlib2.h	/^   EAPI int imlib_get_font_ascent(void);$/;"	p	signature:(void)
imlib_get_font_cache_size	/usr/include/Imlib2.h	/^   EAPI int imlib_get_font_cache_size(void);$/;"	p	signature:(void)
imlib_get_font_descent	/usr/include/Imlib2.h	/^   EAPI int imlib_get_font_descent(void);$/;"	p	signature:(void)
imlib_get_maximum_font_ascent	/usr/include/Imlib2.h	/^   EAPI int imlib_get_maximum_font_ascent(void);$/;"	p	signature:(void)
imlib_get_maximum_font_descent	/usr/include/Imlib2.h	/^   EAPI int imlib_get_maximum_font_descent(void);$/;"	p	signature:(void)
imlib_get_next_font_in_fallback_chain	/usr/include/Imlib2.h	/^   EAPI Imlib_Font imlib_get_next_font_in_fallback_chain(Imlib_Font fn);$/;"	p	signature:(Imlib_Font fn)
imlib_get_prev_font_in_fallback_chain	/usr/include/Imlib2.h	/^   EAPI Imlib_Font imlib_get_prev_font_in_fallback_chain(Imlib_Font fn);$/;"	p	signature:(Imlib_Font fn)
imlib_get_text_advance	/usr/include/Imlib2.h	/^   EAPI void imlib_get_text_advance(const char *text, $/;"	p	signature:(const char *text, int *horizontal_advance_return, int *vertical_advance_return)
imlib_get_text_inset	/usr/include/Imlib2.h	/^   EAPI int imlib_get_text_inset(const char *text);$/;"	p	signature:(const char *text)
imlib_get_text_size	/usr/include/Imlib2.h	/^   EAPI void imlib_get_text_size(const char *text, int *width_return,$/;"	p	signature:(const char *text, int *width_return, int *height_return)
imlib_get_visual_depth	/usr/include/Imlib2.h	/^   EAPI int imlib_get_visual_depth(Display * display, Visual * visual);$/;"	p	signature:(Display * display, Visual * visual)
imlib_image_attach_data_value	/usr/include/Imlib2.h	/^   EAPI void imlib_image_attach_data_value(const char *key, void *data, int value,$/;"	p	signature:(const char *key, void *data, int value, Imlib_Data_Destructor_Function destructor_function)
imlib_image_blur	/usr/include/Imlib2.h	/^   EAPI void imlib_image_blur(int radius);$/;"	p	signature:(int radius)
imlib_image_clear	/usr/include/Imlib2.h	/^   EAPI void imlib_image_clear(void);$/;"	p	signature:(void)
imlib_image_clear_color	/usr/include/Imlib2.h	/^   EAPI void imlib_image_clear_color(int r, int g, int b, int a);$/;"	p	signature:(int r, int g, int b, int a)
imlib_image_copy_alpha_rectangle_to_image	/usr/include/Imlib2.h	/^   EAPI void imlib_image_copy_alpha_rectangle_to_image(Imlib_Image image_source,$/;"	p	signature:(Imlib_Image image_source, int x, int y, int width, int height, int destination_x, int destination_y)
imlib_image_copy_alpha_to_image	/usr/include/Imlib2.h	/^   EAPI void imlib_image_copy_alpha_to_image(Imlib_Image image_source, int x,$/;"	p	signature:(Imlib_Image image_source, int x, int y)
imlib_image_copy_rect	/usr/include/Imlib2.h	/^   EAPI void imlib_image_copy_rect(int x, int y, int width, int height, int new_x,$/;"	p	signature:(int x, int y, int width, int height, int new_x, int new_y)
imlib_image_draw_ellipse	/usr/include/Imlib2.h	/^   EAPI void imlib_image_draw_ellipse(int xc, int yc, int a, int b);$/;"	p	signature:(int xc, int yc, int a, int b)
imlib_image_draw_line	/usr/include/Imlib2.h	/^   EAPI Imlib_Updates imlib_image_draw_line(int x1, int y1, int x2, int y2,$/;"	p	signature:(int x1, int y1, int x2, int y2, char make_updates)
imlib_image_draw_pixel	/usr/include/Imlib2.h	/^   EAPI Imlib_Updates imlib_image_draw_pixel(int x, int y, char make_updates);$/;"	p	signature:(int x, int y, char make_updates)
imlib_image_draw_polygon	/usr/include/Imlib2.h	/^   EAPI void imlib_image_draw_polygon(ImlibPolygon poly, unsigned char closed);$/;"	p	signature:(ImlibPolygon poly, unsigned char closed)
imlib_image_draw_rectangle	/usr/include/Imlib2.h	/^   EAPI void imlib_image_draw_rectangle(int x, int y, int width, int height);$/;"	p	signature:(int x, int y, int width, int height)
imlib_image_fill_color_range_rectangle	/usr/include/Imlib2.h	/^   EAPI void imlib_image_fill_color_range_rectangle(int x, int y, int width,$/;"	p	signature:(int x, int y, int width, int height, double angle)
imlib_image_fill_ellipse	/usr/include/Imlib2.h	/^   EAPI void imlib_image_fill_ellipse(int xc, int yc, int a, int b);$/;"	p	signature:(int xc, int yc, int a, int b)
imlib_image_fill_hsva_color_range_rectangle	/usr/include/Imlib2.h	/^   EAPI void imlib_image_fill_hsva_color_range_rectangle(int x, int y, int width,$/;"	p	signature:(int x, int y, int width, int height, double angle)
imlib_image_fill_polygon	/usr/include/Imlib2.h	/^   EAPI void imlib_image_fill_polygon(ImlibPolygon poly);$/;"	p	signature:(ImlibPolygon poly)
imlib_image_fill_rectangle	/usr/include/Imlib2.h	/^   EAPI void imlib_image_fill_rectangle(int x, int y, int width, int height);$/;"	p	signature:(int x, int y, int width, int height)
imlib_image_filter	/usr/include/Imlib2.h	/^   EAPI void imlib_image_filter(void);$/;"	p	signature:(void)
imlib_image_flip_diagonal	/usr/include/Imlib2.h	/^   EAPI void imlib_image_flip_diagonal(void);$/;"	p	signature:(void)
imlib_image_flip_horizontal	/usr/include/Imlib2.h	/^   EAPI void imlib_image_flip_horizontal(void);$/;"	p	signature:(void)
imlib_image_flip_vertical	/usr/include/Imlib2.h	/^   EAPI void imlib_image_flip_vertical(void);$/;"	p	signature:(void)
imlib_image_format	/usr/include/Imlib2.h	/^   EAPI char *imlib_image_format(void);$/;"	p	signature:(void)
imlib_image_get_attached_data	/usr/include/Imlib2.h	/^   EAPI void *imlib_image_get_attached_data(const char *key);$/;"	p	signature:(const char *key)
imlib_image_get_attached_value	/usr/include/Imlib2.h	/^   EAPI int imlib_image_get_attached_value(const char *key);$/;"	p	signature:(const char *key)
imlib_image_get_border	/usr/include/Imlib2.h	/^   EAPI void imlib_image_get_border(Imlib_Border * border);$/;"	p	signature:(Imlib_Border * border)
imlib_image_get_data	/usr/include/Imlib2.h	/^   EAPI DATA32 *imlib_image_get_data(void);$/;"	p	signature:(void)
imlib_image_get_data_for_reading_only	/usr/include/Imlib2.h	/^   EAPI DATA32 *imlib_image_get_data_for_reading_only(void);$/;"	p	signature:(void)
imlib_image_get_filename	/usr/include/Imlib2.h	/^   EAPI const char *imlib_image_get_filename(void);$/;"	p	signature:(void)
imlib_image_get_height	/usr/include/Imlib2.h	/^   EAPI int imlib_image_get_height(void);$/;"	p	signature:(void)
imlib_image_get_width	/usr/include/Imlib2.h	/^   EAPI int imlib_image_get_width(void);$/;"	p	signature:(void)
imlib_image_has_alpha	/usr/include/Imlib2.h	/^   EAPI char imlib_image_has_alpha(void);$/;"	p	signature:(void)
imlib_image_orientate	/usr/include/Imlib2.h	/^   EAPI void imlib_image_orientate(int orientation);$/;"	p	signature:(int orientation)
imlib_image_put_back_data	/usr/include/Imlib2.h	/^   EAPI void imlib_image_put_back_data(DATA32 * data);$/;"	p	signature:(DATA32 * data)
imlib_image_query_pixel	/usr/include/Imlib2.h	/^   EAPI void imlib_image_query_pixel(int x, int y, Imlib_Color * color_return);$/;"	p	signature:(int x, int y, Imlib_Color * color_return)
imlib_image_query_pixel_cmya	/usr/include/Imlib2.h	/^   EAPI void imlib_image_query_pixel_cmya(int x, int y, int *cyan, int *magenta, int *yellow, int *alpha);$/;"	p	signature:(int x, int y, int *cyan, int *magenta, int *yellow, int *alpha)
imlib_image_query_pixel_hlsa	/usr/include/Imlib2.h	/^   EAPI void imlib_image_query_pixel_hlsa(int x, int y, float *hue, float *lightness, float *saturation, int *alpha);$/;"	p	signature:(int x, int y, float *hue, float *lightness, float *saturation, int *alpha)
imlib_image_query_pixel_hsva	/usr/include/Imlib2.h	/^   EAPI void imlib_image_query_pixel_hsva(int x, int y, float *hue, float *saturation, float *value, int *alpha);$/;"	p	signature:(int x, int y, float *hue, float *saturation, float *value, int *alpha)
imlib_image_remove_and_free_attached_data_value	/usr/include/Imlib2.h	/^   EAPI void imlib_image_remove_and_free_attached_data_value(const char *key);$/;"	p	signature:(const char *key)
imlib_image_remove_attached_data_value	/usr/include/Imlib2.h	/^   EAPI void imlib_image_remove_attached_data_value(const char *key);$/;"	p	signature:(const char *key)
imlib_image_scroll_rect	/usr/include/Imlib2.h	/^   EAPI void imlib_image_scroll_rect(int x, int y, int width, int height,$/;"	p	signature:(int x, int y, int width, int height, int delta_x, int delta_y)
imlib_image_set_border	/usr/include/Imlib2.h	/^   EAPI void imlib_image_set_border(Imlib_Border * border);$/;"	p	signature:(Imlib_Border * border)
imlib_image_set_changes_on_disk	/usr/include/Imlib2.h	/^   EAPI void imlib_image_set_changes_on_disk(void);$/;"	p	signature:(void)
imlib_image_set_format	/usr/include/Imlib2.h	/^   EAPI void imlib_image_set_format(const char *format);$/;"	p	signature:(const char *format)
imlib_image_set_has_alpha	/usr/include/Imlib2.h	/^   EAPI void imlib_image_set_has_alpha(char has_alpha);$/;"	p	signature:(char has_alpha)
imlib_image_set_irrelevant_alpha	/usr/include/Imlib2.h	/^   EAPI void imlib_image_set_irrelevant_alpha(char irrelevant);$/;"	p	signature:(char irrelevant)
imlib_image_set_irrelevant_border	/usr/include/Imlib2.h	/^   EAPI void imlib_image_set_irrelevant_border(char irrelevant);$/;"	p	signature:(char irrelevant)
imlib_image_set_irrelevant_format	/usr/include/Imlib2.h	/^   EAPI void imlib_image_set_irrelevant_format(char irrelevant);$/;"	p	signature:(char irrelevant)
imlib_image_sharpen	/usr/include/Imlib2.h	/^   EAPI void imlib_image_sharpen(int radius);$/;"	p	signature:(int radius)
imlib_image_tile	/usr/include/Imlib2.h	/^   EAPI void imlib_image_tile(void);$/;"	p	signature:(void)
imlib_image_tile_horizontal	/usr/include/Imlib2.h	/^   EAPI void imlib_image_tile_horizontal(void);$/;"	p	signature:(void)
imlib_image_tile_vertical	/usr/include/Imlib2.h	/^   EAPI void imlib_image_tile_vertical(void);$/;"	p	signature:(void)
imlib_insert_font_into_fallback_chain	/usr/include/Imlib2.h	/^   EAPI int imlib_insert_font_into_fallback_chain(Imlib_Font font, Imlib_Font fallback_font);$/;"	p	signature:(Imlib_Font font, Imlib_Font fallback_font)
imlib_list_font_path	/usr/include/Imlib2.h	/^   EAPI char **imlib_list_font_path(int *number_return);$/;"	p	signature:(int *number_return)
imlib_list_fonts	/usr/include/Imlib2.h	/^   EAPI char **imlib_list_fonts(int *number_return);$/;"	p	signature:(int *number_return)
imlib_load_font	/usr/include/Imlib2.h	/^   EAPI Imlib_Font imlib_load_font(const char *font_name);$/;"	p	signature:(const char *font_name)
imlib_load_image	/usr/include/Imlib2.h	/^   EAPI Imlib_Image imlib_load_image(const char *file);$/;"	p	signature:(const char *file)
imlib_load_image_immediately	/usr/include/Imlib2.h	/^   EAPI Imlib_Image imlib_load_image_immediately(const char *file);$/;"	p	signature:(const char *file)
imlib_load_image_immediately_without_cache	/usr/include/Imlib2.h	/^   EAPI Imlib_Image imlib_load_image_immediately_without_cache(const char *file);$/;"	p	signature:(const char *file)
imlib_load_image_with_error_return	/usr/include/Imlib2.h	/^   EAPI Imlib_Image imlib_load_image_with_error_return(const char *file,$/;"	p	signature:(const char *file, Imlib_Load_Error * error_return)
imlib_load_image_without_cache	/usr/include/Imlib2.h	/^   EAPI Imlib_Image imlib_load_image_without_cache(const char *file);$/;"	p	signature:(const char *file)
imlib_modify_color_modifier_brightness	/usr/include/Imlib2.h	/^   EAPI void imlib_modify_color_modifier_brightness(double brightness_value);$/;"	p	signature:(double brightness_value)
imlib_modify_color_modifier_contrast	/usr/include/Imlib2.h	/^   EAPI void imlib_modify_color_modifier_contrast(double contrast_value);$/;"	p	signature:(double contrast_value)
imlib_modify_color_modifier_gamma	/usr/include/Imlib2.h	/^   EAPI void imlib_modify_color_modifier_gamma(double gamma_value);$/;"	p	signature:(double gamma_value)
imlib_polygon_add_point	/usr/include/Imlib2.h	/^   EAPI void imlib_polygon_add_point(ImlibPolygon poly, int x, int y);$/;"	p	signature:(ImlibPolygon poly, int x, int y)
imlib_polygon_contains_point	/usr/include/Imlib2.h	/^   EAPI unsigned char imlib_polygon_contains_point(ImlibPolygon poly, int x,$/;"	p	signature:(ImlibPolygon poly, int x, int y)
imlib_polygon_free	/usr/include/Imlib2.h	/^   EAPI void imlib_polygon_free(ImlibPolygon poly);$/;"	p	signature:(ImlibPolygon poly)
imlib_polygon_get_bounds	/usr/include/Imlib2.h	/^   EAPI void imlib_polygon_get_bounds(ImlibPolygon poly, int *px1, int *py1,$/;"	p	signature:(ImlibPolygon poly, int *px1, int *py1, int *px2, int *py2)
imlib_polygon_new	/usr/include/Imlib2.h	/^   EAPI ImlibPolygon imlib_polygon_new(void);$/;"	p	signature:(void)
imlib_remove_font_from_fallback_chain	/usr/include/Imlib2.h	/^   EAPI void imlib_remove_font_from_fallback_chain(Imlib_Font fallback_font);$/;"	p	signature:(Imlib_Font fallback_font)
imlib_remove_path_from_font_path	/usr/include/Imlib2.h	/^   EAPI void imlib_remove_path_from_font_path(const char *path);$/;"	p	signature:(const char *path)
imlib_render_get_pixel_color	/usr/include/Imlib2.h	/^   EAPI DATA32 imlib_render_get_pixel_color(void);$/;"	p	signature:(void)
imlib_render_image_on_drawable	/usr/include/Imlib2.h	/^   EAPI void imlib_render_image_on_drawable(int x, int y);$/;"	p	signature:(int x, int y)
imlib_render_image_on_drawable_at_angle	/usr/include/Imlib2.h	/^   EAPI void imlib_render_image_on_drawable_at_angle(int source_x, int source_y,$/;"	p	signature:(int source_x, int source_y, int source_width, int source_height, int destination_x, int destination_y, int angle_x, int angle_y)
imlib_render_image_on_drawable_at_size	/usr/include/Imlib2.h	/^   EAPI void imlib_render_image_on_drawable_at_size(int x, int y, int width,$/;"	p	signature:(int x, int y, int width, int height)
imlib_render_image_on_drawable_skewed	/usr/include/Imlib2.h	/^   EAPI void imlib_render_image_on_drawable_skewed(int source_x, int source_y,$/;"	p	signature:(int source_x, int source_y, int source_width, int source_height, int destination_x, int destination_y, int h_angle_x, int h_angle_y, int v_angle_x, int v_angle_y)
imlib_render_image_part_on_drawable_at_size	/usr/include/Imlib2.h	/^   EAPI void imlib_render_image_part_on_drawable_at_size(int source_x,$/;"	p	signature:(int source_x, int source_y, int source_width, int source_height, int x, int y, int width, int height)
imlib_render_image_updates_on_drawable	/usr/include/Imlib2.h	/^   EAPI void imlib_render_image_updates_on_drawable(Imlib_Updates updates, int x,$/;"	p	signature:(Imlib_Updates updates, int x, int y)
imlib_render_pixmaps_for_whole_image	/usr/include/Imlib2.h	/^   EAPI void imlib_render_pixmaps_for_whole_image(Pixmap * pixmap_return,$/;"	p	signature:(Pixmap * pixmap_return, Pixmap * mask_return)
imlib_render_pixmaps_for_whole_image_at_size	/usr/include/Imlib2.h	/^   EAPI void imlib_render_pixmaps_for_whole_image_at_size(Pixmap * pixmap_return,$/;"	p	signature:(Pixmap * pixmap_return, Pixmap * mask_return, int width, int height)
imlib_reset_color_modifier	/usr/include/Imlib2.h	/^   EAPI void imlib_reset_color_modifier(void);$/;"	p	signature:(void)
imlib_rotate_image_from_buffer	/usr/include/Imlib2.h	/^   EAPI void imlib_rotate_image_from_buffer(double angle, $/;"	p	signature:(double angle, Imlib_Image source_image)
imlib_save_image	/usr/include/Imlib2.h	/^   EAPI void imlib_save_image(const char *filename);$/;"	p	signature:(const char *filename)
imlib_save_image_with_error_return	/usr/include/Imlib2.h	/^   EAPI void imlib_save_image_with_error_return(const char *filename,$/;"	p	signature:(const char *filename, Imlib_Load_Error * error_return)
imlib_set_cache_size	/usr/include/Imlib2.h	/^   EAPI void imlib_set_cache_size(int bytes);$/;"	p	signature:(int bytes)
imlib_set_color_modifier_tables	/usr/include/Imlib2.h	/^   EAPI void imlib_set_color_modifier_tables(DATA8 * red_table,$/;"	p	signature:(DATA8 * red_table, DATA8 * green_table, DATA8 * blue_table, DATA8 * alpha_table)
imlib_set_color_usage	/usr/include/Imlib2.h	/^   EAPI void imlib_set_color_usage(int max);$/;"	p	signature:(int max)
imlib_set_font_cache_size	/usr/include/Imlib2.h	/^   EAPI void imlib_set_font_cache_size(int bytes);$/;"	p	signature:(int bytes)
imlib_text_draw	/usr/include/Imlib2.h	/^   EAPI void imlib_text_draw(int x, int y, const char *text);$/;"	p	signature:(int x, int y, const char *text)
imlib_text_draw_with_return_metrics	/usr/include/Imlib2.h	/^   EAPI void imlib_text_draw_with_return_metrics(int x, int y, const char *text,$/;"	p	signature:(int x, int y, const char *text, int *width_return, int *height_return, int *horizontal_advance_return, int *vertical_advance_return)
imlib_text_get_index_and_location	/usr/include/Imlib2.h	/^   EAPI int imlib_text_get_index_and_location(const char *text, int x, int y,$/;"	p	signature:(const char *text, int x, int y, int *char_x_return, int *char_y_return, int *char_width_return, int *char_height_return)
imlib_text_get_location_at_index	/usr/include/Imlib2.h	/^   EAPI void imlib_text_get_location_at_index(const char *text, int index,$/;"	p	signature:(const char *text, int index, int *char_x_return, int *char_y_return, int *char_width_return, int *char_height_return)
imlib_update_append_rect	/usr/include/Imlib2.h	/^   EAPI Imlib_Updates imlib_update_append_rect(Imlib_Updates updates, int x, int y,$/;"	p	signature:(Imlib_Updates updates, int x, int y, int w, int h)
imlib_updates_append_updates	/usr/include/Imlib2.h	/^   EAPI Imlib_Updates imlib_updates_append_updates(Imlib_Updates updates,$/;"	p	signature:(Imlib_Updates updates, Imlib_Updates appended_updates)
imlib_updates_clone	/usr/include/Imlib2.h	/^   EAPI Imlib_Updates imlib_updates_clone(Imlib_Updates updates);$/;"	p	signature:(Imlib_Updates updates)
imlib_updates_free	/usr/include/Imlib2.h	/^   EAPI void imlib_updates_free(Imlib_Updates updates);$/;"	p	signature:(Imlib_Updates updates)
imlib_updates_get_coordinates	/usr/include/Imlib2.h	/^   EAPI void imlib_updates_get_coordinates(Imlib_Updates updates, int *x_return,$/;"	p	signature:(Imlib_Updates updates, int *x_return, int *y_return, int *width_return, int *height_return)
imlib_updates_get_next	/usr/include/Imlib2.h	/^   EAPI Imlib_Updates imlib_updates_get_next(Imlib_Updates updates);$/;"	p	signature:(Imlib_Updates updates)
imlib_updates_init	/usr/include/Imlib2.h	/^   EAPI Imlib_Updates imlib_updates_init(void);$/;"	p	signature:(void)
imlib_updates_merge	/usr/include/Imlib2.h	/^   EAPI Imlib_Updates imlib_updates_merge(Imlib_Updates updates, int w, int h);$/;"	p	signature:(Imlib_Updates updates, int w, int h)
imlib_updates_merge_for_rendering	/usr/include/Imlib2.h	/^   EAPI Imlib_Updates imlib_updates_merge_for_rendering(Imlib_Updates updates,$/;"	p	signature:(Imlib_Updates updates, int w, int h)
imlib_updates_set_coordinates	/usr/include/Imlib2.h	/^   EAPI void imlib_updates_set_coordinates(Imlib_Updates updates, int x, int y,$/;"	p	signature:(Imlib_Updates updates, int x, int y, int width, int height)
left	/usr/include/Imlib2.h	/^   int left, right, top, bottom;$/;"	m	struct:_imlib_border	access:public
red	/usr/include/Imlib2.h	/^   int alpha, red, green, blue;$/;"	m	struct:_imlib_color	access:public
right	/usr/include/Imlib2.h	/^   int left, right, top, bottom;$/;"	m	struct:_imlib_border	access:public
top	/usr/include/Imlib2.h	/^   int left, right, top, bottom;$/;"	m	struct:_imlib_border	access:public
