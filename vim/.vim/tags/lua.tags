!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
LUA_AUTHORS	/usr/include/lua.h	23;"	d
LUA_COPYRIGHT	/usr/include/lua.h	22;"	d
LUA_ENVIRONINDEX	/usr/include/lua.h	37;"	d
LUA_ERRERR	/usr/include/lua.h	47;"	d
LUA_ERRMEM	/usr/include/lua.h	46;"	d
LUA_ERRRUN	/usr/include/lua.h	44;"	d
LUA_ERRSYNTAX	/usr/include/lua.h	45;"	d
LUA_GCCOLLECT	/usr/include/lua.h	223;"	d
LUA_GCCOUNT	/usr/include/lua.h	224;"	d
LUA_GCCOUNTB	/usr/include/lua.h	225;"	d
LUA_GCRESTART	/usr/include/lua.h	222;"	d
LUA_GCSETPAUSE	/usr/include/lua.h	227;"	d
LUA_GCSETSTEPMUL	/usr/include/lua.h	228;"	d
LUA_GCSTEP	/usr/include/lua.h	226;"	d
LUA_GCSTOP	/usr/include/lua.h	221;"	d
LUA_GLOBALSINDEX	/usr/include/lua.h	38;"	d
LUA_HOOKCALL	/usr/include/lua.h	311;"	d
LUA_HOOKCOUNT	/usr/include/lua.h	314;"	d
LUA_HOOKLINE	/usr/include/lua.h	313;"	d
LUA_HOOKRET	/usr/include/lua.h	312;"	d
LUA_HOOKTAILRET	/usr/include/lua.h	315;"	d
LUA_MASKCALL	/usr/include/lua.h	321;"	d
LUA_MASKCOUNT	/usr/include/lua.h	324;"	d
LUA_MASKLINE	/usr/include/lua.h	323;"	d
LUA_MASKRET	/usr/include/lua.h	322;"	d
LUA_MINSTACK	/usr/include/lua.h	87;"	d
LUA_MULTRET	/usr/include/lua.h	30;"	d
LUA_REGISTRYINDEX	/usr/include/lua.h	36;"	d
LUA_RELEASE	/usr/include/lua.h	20;"	d
LUA_SIGNATURE	/usr/include/lua.h	27;"	d
LUA_TBOOLEAN	/usr/include/lua.h	75;"	d
LUA_TFUNCTION	/usr/include/lua.h	80;"	d
LUA_TLIGHTUSERDATA	/usr/include/lua.h	76;"	d
LUA_TNIL	/usr/include/lua.h	74;"	d
LUA_TNONE	/usr/include/lua.h	72;"	d
LUA_TNUMBER	/usr/include/lua.h	77;"	d
LUA_TSTRING	/usr/include/lua.h	78;"	d
LUA_TTABLE	/usr/include/lua.h	79;"	d
LUA_TTHREAD	/usr/include/lua.h	82;"	d
LUA_TUSERDATA	/usr/include/lua.h	81;"	d
LUA_VERSION	/usr/include/lua.h	19;"	d
LUA_VERSION_NUM	/usr/include/lua.h	21;"	d
LUA_YIELD	/usr/include/lua.h	43;"	d
currentline	/usr/include/lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug	access:public
event	/usr/include/lua.h	/^  int event;$/;"	m	struct:lua_Debug	access:public
i_ci	/usr/include/lua.h	/^  int i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug	access:public
lastlinedefined	/usr/include/lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
linedefined	/usr/include/lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lua_Alloc	/usr/include/lua.h	/^typedef void * (*lua_Alloc) (void *ud, void *ptr, size_t osize, size_t nsize);$/;"	t
lua_CFunction	/usr/include/lua.h	/^typedef int (*lua_CFunction) (lua_State *L);$/;"	t
lua_Chunkreader	/usr/include/lua.h	293;"	d
lua_Chunkwriter	/usr/include/lua.h	294;"	d
lua_Debug	/usr/include/lua.h	/^struct lua_Debug {$/;"	s
lua_Debug	/usr/include/lua.h	/^typedef struct lua_Debug lua_Debug;  \/* activation record *\/$/;"	t	typeref:struct:lua_Debug
lua_Debug::currentline	/usr/include/lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::event	/usr/include/lua.h	/^  int event;$/;"	m	struct:lua_Debug	access:public
lua_Debug::i_ci	/usr/include/lua.h	/^  int i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::lastlinedefined	/usr/include/lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::linedefined	/usr/include/lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::name	/usr/include/lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::namewhat	/usr/include/lua.h	/^  const char *namewhat;	\/* (n) `global', `local', `field', `method' *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::nups	/usr/include/lua.h	/^  int nups;		\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::short_src	/usr/include/lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::source	/usr/include/lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::what	/usr/include/lua.h	/^  const char *what;	\/* (S) `Lua', `C', `main', `tail' *\/$/;"	m	struct:lua_Debug	access:public
lua_Hook	/usr/include/lua.h	/^typedef void (*lua_Hook) (lua_State *L, lua_Debug *ar);$/;"	t
lua_Integer	/usr/include/lua.h	/^typedef LUA_INTEGER lua_Integer;$/;"	t
lua_Number	/usr/include/lua.h	/^typedef LUA_NUMBER lua_Number;$/;"	t
lua_Reader	/usr/include/lua.h	/^typedef const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);$/;"	t
lua_State	/usr/include/lua.h	/^typedef struct lua_State lua_State;$/;"	t	typeref:struct:lua_State
lua_Writer	/usr/include/lua.h	/^typedef int (*lua_Writer) (lua_State *L, const void* p, size_t sz, void* ud);$/;"	t
lua_atpanic	/usr/include/lua.h	/^LUA_API lua_CFunction (lua_atpanic) (lua_State *L, lua_CFunction panicf);$/;"	p	signature:(lua_State *L, lua_CFunction panicf)
lua_call	/usr/include/lua.h	/^LUA_API void  (lua_call) (lua_State *L, int nargs, int nresults);$/;"	p	signature:(lua_State *L, int nargs, int nresults)
lua_checkstack	/usr/include/lua.h	/^LUA_API int   (lua_checkstack) (lua_State *L, int sz);$/;"	p	signature:(lua_State *L, int sz)
lua_close	/usr/include/lua.h	/^LUA_API void       (lua_close) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_concat	/usr/include/lua.h	/^LUA_API void  (lua_concat) (lua_State *L, int n);$/;"	p	signature:(lua_State *L, int n)
lua_cpcall	/usr/include/lua.h	/^LUA_API int   (lua_cpcall) (lua_State *L, lua_CFunction func, void *ud);$/;"	p	signature:(lua_State *L, lua_CFunction func, void *ud)
lua_createtable	/usr/include/lua.h	/^LUA_API void  (lua_createtable) (lua_State *L, int narr, int nrec);$/;"	p	signature:(lua_State *L, int narr, int nrec)
lua_dump	/usr/include/lua.h	/^LUA_API int (lua_dump) (lua_State *L, lua_Writer writer, void *data);$/;"	p	signature:(lua_State *L, lua_Writer writer, void *data)
lua_equal	/usr/include/lua.h	/^LUA_API int            (lua_equal) (lua_State *L, int idx1, int idx2);$/;"	p	signature:(lua_State *L, int idx1, int idx2)
lua_error	/usr/include/lua.h	/^LUA_API int   (lua_error) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_gc	/usr/include/lua.h	/^LUA_API int (lua_gc) (lua_State *L, int what, int data);$/;"	p	signature:(lua_State *L, int what, int data)
lua_getallocf	/usr/include/lua.h	/^LUA_API lua_Alloc (lua_getallocf) (lua_State *L, void **ud);$/;"	p	signature:(lua_State *L, void **ud)
lua_getfenv	/usr/include/lua.h	/^LUA_API void  (lua_getfenv) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_getfield	/usr/include/lua.h	/^LUA_API void  (lua_getfield) (lua_State *L, int idx, const char *k);$/;"	p	signature:(lua_State *L, int idx, const char *k)
lua_getgccount	/usr/include/lua.h	291;"	d
lua_getglobal	/usr/include/lua.h	277;"	d
lua_gethook	/usr/include/lua.h	/^LUA_API lua_Hook lua_gethook (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_gethookcount	/usr/include/lua.h	/^LUA_API int lua_gethookcount (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_gethookmask	/usr/include/lua.h	/^LUA_API int lua_gethookmask (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_getinfo	/usr/include/lua.h	/^LUA_API int lua_getinfo (lua_State *L, const char *what, lua_Debug *ar);$/;"	p	signature:(lua_State *L, const char *what, lua_Debug *ar)
lua_getlocal	/usr/include/lua.h	/^LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n);$/;"	p	signature:(lua_State *L, const lua_Debug *ar, int n)
lua_getmetatable	/usr/include/lua.h	/^LUA_API int   (lua_getmetatable) (lua_State *L, int objindex);$/;"	p	signature:(lua_State *L, int objindex)
lua_getregistry	/usr/include/lua.h	289;"	d
lua_getstack	/usr/include/lua.h	/^LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar);$/;"	p	signature:(lua_State *L, int level, lua_Debug *ar)
lua_gettable	/usr/include/lua.h	/^LUA_API void  (lua_gettable) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_gettop	/usr/include/lua.h	/^LUA_API int   (lua_gettop) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_getupvalue	/usr/include/lua.h	/^LUA_API const char *lua_getupvalue (lua_State *L, int funcindex, int n);$/;"	p	signature:(lua_State *L, int funcindex, int n)
lua_h	/usr/include/lua.h	10;"	d
lua_insert	/usr/include/lua.h	/^LUA_API void  (lua_insert) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_isboolean	/usr/include/lua.h	268;"	d
lua_iscfunction	/usr/include/lua.h	/^LUA_API int             (lua_iscfunction) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_isfunction	/usr/include/lua.h	264;"	d
lua_islightuserdata	/usr/include/lua.h	266;"	d
lua_isnil	/usr/include/lua.h	267;"	d
lua_isnone	/usr/include/lua.h	270;"	d
lua_isnoneornil	/usr/include/lua.h	271;"	d
lua_isnumber	/usr/include/lua.h	/^LUA_API int             (lua_isnumber) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_isstring	/usr/include/lua.h	/^LUA_API int             (lua_isstring) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_istable	/usr/include/lua.h	265;"	d
lua_isthread	/usr/include/lua.h	269;"	d
lua_isuserdata	/usr/include/lua.h	/^LUA_API int             (lua_isuserdata) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_lessthan	/usr/include/lua.h	/^LUA_API int            (lua_lessthan) (lua_State *L, int idx1, int idx2);$/;"	p	signature:(lua_State *L, int idx1, int idx2)
lua_load	/usr/include/lua.h	/^LUA_API int   (lua_load) (lua_State *L, lua_Reader reader, void *dt,$/;"	p	signature:(lua_State *L, lua_Reader reader, void *dt, const char *chunkname)
lua_newstate	/usr/include/lua.h	/^LUA_API lua_State *(lua_newstate) (lua_Alloc f, void *ud);$/;"	p	signature:(lua_Alloc f, void *ud)
lua_newtable	/usr/include/lua.h	256;"	d
lua_newthread	/usr/include/lua.h	/^LUA_API lua_State *(lua_newthread) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_newuserdata	/usr/include/lua.h	/^LUA_API void *(lua_newuserdata) (lua_State *L, size_t sz);$/;"	p	signature:(lua_State *L, size_t sz)
lua_next	/usr/include/lua.h	/^LUA_API int   (lua_next) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_objlen	/usr/include/lua.h	/^LUA_API size_t          (lua_objlen) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_open	/usr/include/lua.h	287;"	d
lua_pcall	/usr/include/lua.h	/^LUA_API int   (lua_pcall) (lua_State *L, int nargs, int nresults, int errfunc);$/;"	p	signature:(lua_State *L, int nargs, int nresults, int errfunc)
lua_pop	/usr/include/lua.h	254;"	d
lua_pushboolean	/usr/include/lua.h	/^LUA_API void  (lua_pushboolean) (lua_State *L, int b);$/;"	p	signature:(lua_State *L, int b)
lua_pushcclosure	/usr/include/lua.h	/^LUA_API void  (lua_pushcclosure) (lua_State *L, lua_CFunction fn, int n);$/;"	p	signature:(lua_State *L, lua_CFunction fn, int n)
lua_pushcfunction	/usr/include/lua.h	260;"	d
lua_pushfstring	/usr/include/lua.h	/^LUA_API const char *(lua_pushfstring) (lua_State *L, const char *fmt, ...);$/;"	p	signature:(lua_State *L, const char *fmt, ...)
lua_pushinteger	/usr/include/lua.h	/^LUA_API void  (lua_pushinteger) (lua_State *L, lua_Integer n);$/;"	p	signature:(lua_State *L, lua_Integer n)
lua_pushlightuserdata	/usr/include/lua.h	/^LUA_API void  (lua_pushlightuserdata) (lua_State *L, void *p);$/;"	p	signature:(lua_State *L, void *p)
lua_pushliteral	/usr/include/lua.h	273;"	d
lua_pushlstring	/usr/include/lua.h	/^LUA_API void  (lua_pushlstring) (lua_State *L, const char *s, size_t l);$/;"	p	signature:(lua_State *L, const char *s, size_t l)
lua_pushnil	/usr/include/lua.h	/^LUA_API void  (lua_pushnil) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_pushnumber	/usr/include/lua.h	/^LUA_API void  (lua_pushnumber) (lua_State *L, lua_Number n);$/;"	p	signature:(lua_State *L, lua_Number n)
lua_pushstring	/usr/include/lua.h	/^LUA_API void  (lua_pushstring) (lua_State *L, const char *s);$/;"	p	signature:(lua_State *L, const char *s)
lua_pushthread	/usr/include/lua.h	/^LUA_API int   (lua_pushthread) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_pushvalue	/usr/include/lua.h	/^LUA_API void  (lua_pushvalue) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_pushvfstring	/usr/include/lua.h	/^LUA_API const char *(lua_pushvfstring) (lua_State *L, const char *fmt,$/;"	p	signature:(lua_State *L, const char *fmt, va_list argp)
lua_rawequal	/usr/include/lua.h	/^LUA_API int            (lua_rawequal) (lua_State *L, int idx1, int idx2);$/;"	p	signature:(lua_State *L, int idx1, int idx2)
lua_rawget	/usr/include/lua.h	/^LUA_API void  (lua_rawget) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_rawgeti	/usr/include/lua.h	/^LUA_API void  (lua_rawgeti) (lua_State *L, int idx, int n);$/;"	p	signature:(lua_State *L, int idx, int n)
lua_rawset	/usr/include/lua.h	/^LUA_API void  (lua_rawset) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_rawseti	/usr/include/lua.h	/^LUA_API void  (lua_rawseti) (lua_State *L, int idx, int n);$/;"	p	signature:(lua_State *L, int idx, int n)
lua_register	/usr/include/lua.h	258;"	d
lua_remove	/usr/include/lua.h	/^LUA_API void  (lua_remove) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_replace	/usr/include/lua.h	/^LUA_API void  (lua_replace) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_resume	/usr/include/lua.h	/^LUA_API int  (lua_resume) (lua_State *L, int narg);$/;"	p	signature:(lua_State *L, int narg)
lua_setallocf	/usr/include/lua.h	/^LUA_API void lua_setallocf (lua_State *L, lua_Alloc f, void *ud);$/;"	p	signature:(lua_State *L, lua_Alloc f, void *ud)
lua_setfenv	/usr/include/lua.h	/^LUA_API int   (lua_setfenv) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_setfield	/usr/include/lua.h	/^LUA_API void  (lua_setfield) (lua_State *L, int idx, const char *k);$/;"	p	signature:(lua_State *L, int idx, const char *k)
lua_setglobal	/usr/include/lua.h	276;"	d
lua_sethook	/usr/include/lua.h	/^LUA_API int lua_sethook (lua_State *L, lua_Hook func, int mask, int count);$/;"	p	signature:(lua_State *L, lua_Hook func, int mask, int count)
lua_setlevel	/usr/include/lua.h	/^LUA_API void lua_setlevel	(lua_State *from, lua_State *to);$/;"	p	signature:(lua_State *from, lua_State *to)
lua_setlocal	/usr/include/lua.h	/^LUA_API const char *lua_setlocal (lua_State *L, const lua_Debug *ar, int n);$/;"	p	signature:(lua_State *L, const lua_Debug *ar, int n)
lua_setmetatable	/usr/include/lua.h	/^LUA_API int   (lua_setmetatable) (lua_State *L, int objindex);$/;"	p	signature:(lua_State *L, int objindex)
lua_settable	/usr/include/lua.h	/^LUA_API void  (lua_settable) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_settop	/usr/include/lua.h	/^LUA_API void  (lua_settop) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_setupvalue	/usr/include/lua.h	/^LUA_API const char *lua_setupvalue (lua_State *L, int funcindex, int n);$/;"	p	signature:(lua_State *L, int funcindex, int n)
lua_status	/usr/include/lua.h	/^LUA_API int  (lua_status) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_strlen	/usr/include/lua.h	262;"	d
lua_toboolean	/usr/include/lua.h	/^LUA_API int             (lua_toboolean) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_tocfunction	/usr/include/lua.h	/^LUA_API lua_CFunction   (lua_tocfunction) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_tointeger	/usr/include/lua.h	/^LUA_API lua_Integer     (lua_tointeger) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_tolstring	/usr/include/lua.h	/^LUA_API const char     *(lua_tolstring) (lua_State *L, int idx, size_t *len);$/;"	p	signature:(lua_State *L, int idx, size_t *len)
lua_tonumber	/usr/include/lua.h	/^LUA_API lua_Number      (lua_tonumber) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_topointer	/usr/include/lua.h	/^LUA_API const void     *(lua_topointer) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_tostring	/usr/include/lua.h	279;"	d
lua_tothread	/usr/include/lua.h	/^LUA_API lua_State      *(lua_tothread) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_touserdata	/usr/include/lua.h	/^LUA_API void	       *(lua_touserdata) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_type	/usr/include/lua.h	/^LUA_API int             (lua_type) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_typename	/usr/include/lua.h	/^LUA_API const char     *(lua_typename) (lua_State *L, int tp);$/;"	p	signature:(lua_State *L, int tp)
lua_upvalueindex	/usr/include/lua.h	39;"	d
lua_xmove	/usr/include/lua.h	/^LUA_API void  (lua_xmove) (lua_State *from, lua_State *to, int n);$/;"	p	signature:(lua_State *from, lua_State *to, int n)
lua_yield	/usr/include/lua.h	/^LUA_API int  (lua_yield) (lua_State *L, int nresults);$/;"	p	signature:(lua_State *L, int nresults)
name	/usr/include/lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug	access:public
namewhat	/usr/include/lua.h	/^  const char *namewhat;	\/* (n) `global', `local', `field', `method' *\/$/;"	m	struct:lua_Debug	access:public
nups	/usr/include/lua.h	/^  int nups;		\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug	access:public
short_src	/usr/include/lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug	access:public
source	/usr/include/lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
what	/usr/include/lua.h	/^  const char *what;	\/* (S) `Lua', `C', `main', `tail' *\/$/;"	m	struct:lua_Debug	access:public
